{
  "openapi": "3.0.1",
  "info": {
    "title": "if2performis api",
    "description": "if2performis api",
    "contact": {
      "name": "Infosystem AG",
      "email": "info@infosystem.ch"
    },
    "version": "v1"
  },
  "paths": {
    "/api/v1/master-data/material-management/articles": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get article information.",
        "description": "Returns all matching articles.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries to skip for pagination.",
            "schema": {
              "maximum": 100000,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries since the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries since the specified change id.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "articleId",
            "in": "query",
            "description": "Get the entry with the specified article id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "origin",
            "in": "query",
            "description": "Get all entries with the specified origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "externalArticleId",
            "in": "query",
            "description": "Get all entries with the specified external article id - should be used with an origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "articleNo",
            "in": "query",
            "description": "Get all entries with the specified article number - only unique with company no.",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "name": "companyNo",
            "in": "query",
            "description": "Get all entries with the specified company number.",
            "schema": {
              "maximum": 999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Article information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MaterialManagementArticle"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance"
          }
        }
      }
    },
    "/api/v1/master-data/material-management/articles/prices": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get price information.",
        "description": "Returns all matching article prices.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries to skip for pagination.",
            "schema": {
              "maximum": 100000,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries since the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries since the specified change id.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "articleId",
            "in": "query",
            "description": "Get a list with all the entries for the specified article id.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          {
            "name": "origin",
            "in": "query",
            "description": "Get all entries with the specified origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 1000,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Price information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MaterialManagementArticlePrice"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance"
          }
        }
      },
      "put": {
        "tags": [
          "MasterData"
        ],
        "summary": "Put price information.",
        "description": "Updates an existing entry if internal or external Id match. Creates an entry if neither internal or external Id is provided or no matching entry could be found.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical id (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaterialManagementArticlePrice"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaterialManagementArticlePrice"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaterialManagementArticlePrice"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MaterialManagementArticlePrice"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance"
          }
        }
      }
    },
    "/api/v1/master-data/purchase/suppliers": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get supplier information.",
        "description": "Returns all matching suppliers.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical id (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries to skip for pagination.",
            "schema": {
              "maximum": 100000,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries since the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries since the specified change id.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "Get the entry with the specified supplier id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "externalSupplierId",
            "in": "query",
            "description": "Get all entries with the specified external supplier id - should be used with an origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "origin",
            "in": "query",
            "description": "Get all entries with the specified origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "supplierNo",
            "in": "query",
            "description": "Get all entries with the specified supplier number - only unique with company no.",
            "schema": {
              "maxLength": 10,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "companyNo",
            "in": "query",
            "description": "Get all entries of the specified company number.",
            "schema": {
              "maximum": 999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseSupplier"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance"
          }
        }
      }
    },
    "/api/v1/service-recording/presence-times": {
      "get": {
        "tags": [
          "PresenceTimes"
        ],
        "summary": "Search presence times.",
        "description": "Returns all matching presence times.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "searchString",
            "in": "query",
            "description": "Optional search string for looking up a record within name and searchterm fields.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries since the specified date time",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries since the specified change id",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "serviceProviderId",
            "in": "query",
            "description": "Get all entries with the specified service provider id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "serviceProviderDayId",
            "in": "query",
            "description": "Get all entries with the specified service provider day id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "servicePerformanceDay",
            "in": "query",
            "description": "Date the service was performed.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "personnelNo",
            "in": "query",
            "description": "Get all entries with the specified personnel number - only unique with company no.",
            "schema": {
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "companyNo",
            "in": "query",
            "description": "Get all entries with the specified company number.",
            "schema": {
              "maximum": 999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PresenceTime"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance"
          }
        }
      },
      "put": {
        "tags": [
          "PresenceTimes"
        ],
        "summary": "Updates an existing presence time if internal or external Id match. Creates a presence time if neither internal or external Id is provided or no matching record could be found.",
        "description": "Updates an existing presence time if internal or external Id match. Creates a presence time if neither internal or external Id is provided or no matching record could be found.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "A list of presence times to update or create.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PresenceTime"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PresenceTime"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PresenceTime"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PresenceTime"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance"
          }
        }
      },
      "delete": {
        "tags": [
          "PresenceTimes"
        ],
        "summary": "Deletes a presence time either by presenceTimeId\"/> or origin and originId.",
        "description": "Deletes a presence time",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "presenceTimeId",
            "in": "query",
            "description": "Unique identifier of the presence time to delete.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "origin",
            "in": "query",
            "description": "The system of origin of the presence time to delete. Used together with the originId.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originId",
            "in": "query",
            "description": "Id of the system of origin of the presence time to delete. Used together with the origin.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AttributeValue": {
        "required": [
          "attributeDefinitionId"
        ],
        "type": "object",
        "properties": {
          "attributeValueId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Internal identification of attribute value.",
            "format": "int64",
            "nullable": true
          },
          "attributeDefinitionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Internal identification of attribute definition.",
            "format": "int64"
          },
          "modifyUser": {
            "maxLength": 30,
            "type": "string",
            "description": "User who last modified the entry.",
            "nullable": true
          },
          "modifyDate": {
            "type": "string",
            "description": "Date the entry was last modified.",
            "format": "date-time",
            "nullable": true
          },
          "sortNo": {
            "maximum": 9999,
            "minimum": 1,
            "type": "integer",
            "description": "Position within the attribute value set.",
            "format": "int64",
            "nullable": true
          },
          "companyNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "Company identification of the entry.",
            "format": "int64",
            "nullable": true
          },
          "textValue": {
            "maxLength": 1000,
            "type": "string",
            "description": "A string value.",
            "nullable": true
          },
          "numberValue": {
            "type": "number",
            "description": "Number or decimal value.",
            "format": "double"
          },
          "dateValue": {
            "type": "string",
            "description": "Date value.",
            "format": "date-time",
            "nullable": true
          },
          "boolValue": {
            "type": "boolean",
            "description": "A true or false value.",
            "nullable": true
          },
          "codeValue": {
            "type": "integer",
            "description": "Code value.",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The attribute value."
      },
      "AttributeValueSet": {
        "required": [
          "attributeSetId"
        ],
        "type": "object",
        "properties": {
          "attributeSetId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Internal identification of attribute set.",
            "format": "int64"
          },
          "attributeValueSetId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Internal identification of attribute value set.",
            "format": "int64",
            "nullable": true
          },
          "modifyUser": {
            "maxLength": 30,
            "type": "string",
            "description": "User who last modified the entry.",
            "nullable": true
          },
          "modifyDate": {
            "type": "string",
            "description": "Date the entry was last modified.",
            "format": "date-time",
            "nullable": true
          },
          "attributeValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeValue"
            },
            "description": "A list of attribute values.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "The attribute value set."
      },
      "MaterialManagementArticle": {
        "required": [
          "articleNo",
          "companyNo",
          "description",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "changeId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Change id of the entry.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "changeDate": {
            "type": "string",
            "description": "Change date of the entry.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "active": {
            "type": "boolean",
            "description": "Is this entry active or not?"
          },
          "modifyUser": {
            "maxLength": 30,
            "type": "string",
            "description": "User who last modified the entry.",
            "nullable": true,
            "readOnly": true
          },
          "modifyDate": {
            "type": "string",
            "description": "Date the entry was last modified.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "articleId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Unique identifier of the article.",
            "format": "int64",
            "nullable": true
          },
          "origin": {
            "maxLength": 200,
            "type": "string",
            "description": "The entry's system of origin.",
            "nullable": true,
            "readOnly": true
          },
          "externalArticleId": {
            "maxLength": 200,
            "type": "string",
            "description": "Id of the article in the external system.",
            "nullable": true
          },
          "articleNo": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "Article number for identification by the users."
          },
          "companyNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "Company identification of the entry.",
            "format": "int64"
          },
          "description": {
            "maxLength": 300,
            "minLength": 1,
            "type": "string",
            "description": "Article description for external usage."
          },
          "shortDescription": {
            "maxLength": 80,
            "minLength": 1,
            "type": "string",
            "description": "Article description for internal usage."
          },
          "stockUnitCode": {
            "maximum": 289999,
            "minimum": 280001,
            "type": "integer",
            "description": "C28 - Stock unit code.",
            "format": "int64",
            "nullable": true
          },
          "priceUnitCode": {
            "maximum": 289999,
            "minimum": 280001,
            "type": "integer",
            "description": "C28 - Price unit code.",
            "format": "int64",
            "nullable": true
          },
          "conversionFactorStockUnitPriceUnit": {
            "maximum": 9999999,
            "minimum": 0,
            "type": "number",
            "description": "The conversion factor to convert StockUnit to PriceUnit e.g. 1 (stockUnitCode).",
            "format": "double"
          },
          "conversionFactorPriceUnitStockUnit": {
            "maximum": 9999999,
            "minimum": 0,
            "type": "number",
            "description": "The conversion factor to convert PriceUnit to StockUnit e.g. 12 (priceUnitCode).",
            "format": "double"
          },
          "stockManagement": {
            "type": "boolean",
            "description": "Is the stock level managed on a quantity basis?"
          },
          "inventoryManagement": {
            "type": "boolean",
            "description": "Is the stock level managed on an inventory basis?"
          },
          "articleGroupCode": {
            "maximum": 4599999,
            "minimum": 4590001,
            "type": "integer",
            "description": "C459 - Article group code.",
            "format": "int64",
            "nullable": true
          },
          "ean": {
            "maxLength": 13,
            "type": "string",
            "description": "EAN of the article.",
            "nullable": true
          },
          "customsTariffNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Customs tariff number.",
            "nullable": true
          },
          "countryOfOrigin": {
            "maxLength": 2,
            "type": "string",
            "description": "ISO code of the country of origin.",
            "nullable": true
          },
          "vat": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaterialManagementArticleVat"
            },
            "description": "List of vat entries.",
            "nullable": true,
            "readOnly": true
          },
          "localizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaterialManagementArticleLocalization"
            },
            "description": "List of localizations.",
            "nullable": true,
            "readOnly": true
          },
          "attributeValueSet": {
            "$ref": "#/components/schemas/AttributeValueSet"
          }
        },
        "additionalProperties": false,
        "description": "Represents a (material management) article entry."
      },
      "MaterialManagementArticleLocalization": {
        "required": [
          "description",
          "language",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "language": {
            "maxLength": 2,
            "minLength": 1,
            "type": "string",
            "description": "Language as ISO code."
          },
          "description": {
            "maxLength": 300,
            "minLength": 1,
            "type": "string",
            "description": "Full description in the given language."
          },
          "shortDescription": {
            "maxLength": 80,
            "minLength": 1,
            "type": "string",
            "description": "Short description in the given language."
          }
        },
        "additionalProperties": false,
        "description": "Represents a (material management) article localization entry."
      },
      "MaterialManagementArticlePrice": {
        "required": [
          "articleId",
          "price",
          "priceTypeCode",
          "validFrom"
        ],
        "type": "object",
        "properties": {
          "changeId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Change id of the entry.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "changeDate": {
            "type": "string",
            "description": "Change date of the entry.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "priceId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Internal identifier of the article price.",
            "format": "int64",
            "nullable": true
          },
          "modifyUser": {
            "maxLength": 30,
            "type": "string",
            "description": "User who last modified the entry.",
            "nullable": true,
            "readOnly": true
          },
          "modifyDate": {
            "type": "string",
            "description": "Date the entry was last modified.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "origin": {
            "maxLength": 200,
            "type": "string",
            "description": "The entry's system of origin.",
            "nullable": true,
            "readOnly": true
          },
          "externalPriceId": {
            "maxLength": 200,
            "type": "string",
            "description": "Indentificaion of the article price in the external system.",
            "nullable": true
          },
          "articleId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Unique identifier of the article.",
            "format": "int64"
          },
          "priceTypeCode": {
            "maximum": 4079999,
            "minimum": 4070001,
            "type": "integer",
            "description": "C4074 - Type of price (standard, avarage, last purchase price).",
            "format": "int64"
          },
          "validFrom": {
            "type": "string",
            "description": "Date from which the price entry is valid.",
            "format": "date"
          },
          "price": {
            "maximum": 99999999,
            "minimum": 0,
            "type": "number",
            "description": "Price per price Unit in balance sheet currency.",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Represents a article price entry."
      },
      "MaterialManagementArticleVat": {
        "required": [
          "taxSystem",
          "vatTypeCode"
        ],
        "type": "object",
        "properties": {
          "taxSystem": {
            "maxLength": 2,
            "minLength": 1,
            "type": "string",
            "description": "Country of tax system as ISO code."
          },
          "vatTypeCode": {
            "maximum": 839999,
            "minimum": 830001,
            "type": "integer",
            "description": "C83 - Tax type (normal rate, reduced rate,...).",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "Represents a (material management) article vat entry."
      },
      "PresenceTime": {
        "required": [
          "companyNo",
          "hours",
          "locked",
          "origin",
          "originId",
          "presenceDate",
          "timeFrom"
        ],
        "type": "object",
        "properties": {
          "changeId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Change id of the entity.",
            "format": "int64",
            "nullable": true
          },
          "changeDate": {
            "type": "string",
            "description": "Change date of the entity.",
            "format": "date-time",
            "nullable": true
          },
          "presenceTimeId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Unique identifier of the presence time dataset.",
            "format": "int64",
            "nullable": true
          },
          "companyNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "The company number identifies the customer via the corresponding number in the mandate system.",
            "format": "int64"
          },
          "serviceProviderId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Id of the \"Leistungsträger\".",
            "format": "int64",
            "nullable": true
          },
          "serviceProviderDayId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Identifier to the \"Leistungsträger-Tag\".",
            "format": "int64",
            "nullable": true
          },
          "personnelNo": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Id of the \"Leistungsträger\" in the external system.",
            "nullable": true
          },
          "presenceDate": {
            "type": "string",
            "description": "Date of presence.",
            "format": "date"
          },
          "hours": {
            "type": "number",
            "description": "Hours the service provider was present.",
            "format": "double"
          },
          "timeFrom": {
            "type": "string",
            "description": "Time the service provider started work.",
            "format": "time"
          },
          "timeUntil": {
            "type": "string",
            "description": "Time the service provider ended work.",
            "format": "time",
            "nullable": true
          },
          "locked": {
            "type": "boolean",
            "description": "The presence time record is locked for all but the origin system."
          },
          "origin": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "The system of origin."
          },
          "originId": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Id of the system of origin."
          }
        },
        "additionalProperties": false,
        "description": "The DTO for a presence time."
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "PurchaseSupplier": {
        "required": [
          "active",
          "automaticCompletion",
          "currency",
          "deliveryDays",
          "invoiceBusinessPartnerAddressId",
          "origin",
          "paymentTermsCode",
          "printPrices",
          "supplierCategoryCode",
          "supplierId",
          "supplierNo"
        ],
        "type": "object",
        "properties": {
          "changeId": {
            "type": "integer",
            "description": "Change identification of the entry.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "changeDate": {
            "type": "string",
            "description": "Change date of the entry.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "active": {
            "type": "boolean",
            "description": "Is this entry active or not?"
          },
          "modifyUser": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "User who last modified the entry.",
            "nullable": true,
            "readOnly": true
          },
          "modifyDate": {
            "type": "string",
            "description": "Date the entry was last modified.",
            "format": "date-time",
            "readOnly": true
          },
          "supplierId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Technical identification of the entry.",
            "format": "int64"
          },
          "businessPartnerAddressId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Business partner address id of the entry.",
            "format": "int64"
          },
          "externalSupplierId": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "External id of the entry - may be used instead of the technical identification.",
            "nullable": true
          },
          "origin": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Origin of the entry."
          },
          "companyNo": {
            "maximum": 999999,
            "minimum": 0,
            "type": "integer",
            "description": "Company identification of the entry.",
            "format": "int64",
            "nullable": true
          },
          "supplierNo": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Supplier number of the entry.",
            "format": "int64"
          },
          "isLocked": {
            "type": "boolean",
            "description": "Is supplier locked for purchasing?"
          },
          "supplierCategoryCode": {
            "maximum": 24659999,
            "minimum": 24650001,
            "type": "integer",
            "description": "C2465 - Category of the supplier.",
            "format": "int64"
          },
          "supplierRatingCode": {
            "maximum": 24669999,
            "minimum": 24660001,
            "type": "integer",
            "description": "C2466 - User code to set the rating of the supplier.",
            "format": "int64",
            "nullable": true
          },
          "ourCustomerNo": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "Our customer identification with the supplier.",
            "nullable": true
          },
          "paymentTermsCode": {
            "maximum": 279999,
            "minimum": 270001,
            "type": "integer",
            "description": "C27 - Payment terms with the supplier.",
            "format": "int64"
          },
          "printoutCopyQuantity": {
            "maximum": 99,
            "minimum": 0,
            "type": "integer",
            "description": "Quantity of the purchase order printout copies.",
            "format": "int64",
            "nullable": true
          },
          "printPrices": {
            "type": "boolean",
            "description": "Are the purchase prices shown on the purchase order document?"
          },
          "orderChannelCode": {
            "maximum": 24629999,
            "minimum": 24620001,
            "type": "integer",
            "description": "C2462 - Order channel, how to order from this supplier e.g. by post,by email, by telephone, by fax, by internet.",
            "format": "int64",
            "nullable": true
          },
          "confirmationPeriod": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "description": "Number of days until an order confirmation is expected.",
            "format": "int64",
            "nullable": true
          },
          "reminderConfirmationPeriod": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "description": "Number of days until a reminder is generated for order confirmation - after confirmation period.",
            "format": "int64",
            "nullable": true
          },
          "reminderDeliveryPeriod": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "description": "Number of days until a reminder is generated for a missed delivery.",
            "format": "int64",
            "nullable": true
          },
          "currency": {
            "maxLength": 3,
            "minLength": 1,
            "type": "string",
            "description": "Currency ISO code."
          },
          "landedCostsInPercentage": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "description": "Landed costs are additional charges or costs incurred for the purchase order.",
            "format": "double"
          },
          "vatCode": {
            "maximum": 239999,
            "minimum": 230001,
            "type": "integer",
            "description": "Default input tax applied for the suppliers invoices.",
            "format": "int64",
            "nullable": true
          },
          "freightTypeCode": {
            "maximum": 24639999,
            "minimum": 24630001,
            "type": "integer",
            "description": "C2463 - Freight type e.g. lorry, post, truck, courier, collection etc.",
            "format": "int64",
            "nullable": true
          },
          "incoTermsCode": {
            "maximum": 24679999,
            "minimum": 24670001,
            "type": "integer",
            "description": "C2467 - Incoterms define the responsibilities of exporters and importers in the arrangement of shipments and the transfer of liability involved at various stages of the transaction.",
            "format": "int64",
            "nullable": true
          },
          "incoTermsLocation": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Location for the incoterms.",
            "nullable": true
          },
          "deliveryDuration": {
            "maximum": 9999,
            "minimum": 1,
            "type": "integer",
            "description": "Delivery time for order proposal calculations and warning in the order programme (e.g. 5 days delivery time no longer works for tomorrow) Specification in whole days.",
            "format": "int64",
            "nullable": true
          },
          "deliveryDays": {
            "maxLength": 7,
            "minLength": 7,
            "type": "string",
            "description": "Delivery days from dropdown box (multiselect) for delivery date proposal, default Monday - Friday checked. Bitmap, starting with Monday (1st digit) 0=not selected, 1=selected."
          },
          "invoiceBusinessPartnerAddressId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Business partner address id for invoicing.",
            "format": "int64"
          },
          "pickupBusinessPartnerAddressId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Business partner address id for pickup.",
            "format": "int64",
            "nullable": true
          },
          "notes": {
            "maxLength": 2000,
            "type": "string",
            "description": "Supplier related notes and remarks.",
            "nullable": true
          },
          "automaticCompletion": {
            "type": "boolean",
            "description": "Default for the automatic completion of purchase orders with this supplier"
          }
        },
        "additionalProperties": false,
        "description": "Represents a supplier entry."
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Please enter a valid token",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}