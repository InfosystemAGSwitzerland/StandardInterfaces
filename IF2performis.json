{
  "openapi": "3.0.1",
  "info": {
    "title": "IF2performis API",
    "description": "Interface to access performis modules",
    "contact": {
      "name": "Infosystem AG",
      "url": "https://www.infosystem.ch",
      "email": "info@infosystem.ch"
    },
    "version": "v1"
  },
  "paths": {
    "/api/v1/finance/cost-accounting/entries": {
      "get": {
        "tags": [
          "Finance"
        ],
        "summary": "Searches for cost accounting entries.",
        "description": "Returns all matching cost accounting entries.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries since the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries since the specified change id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "companyNo",
            "in": "query",
            "description": "Get the entries of the specified company number.",
            "schema": {
              "maximum": 999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "entryId",
            "in": "query",
            "description": "Unique identifier of the entry.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "entryNo",
            "in": "query",
            "description": "Entry number of the cost accounting entry. May be used together with the company number.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "externalEntryId",
            "in": "query",
            "description": "External entry id of the cost accounting entry.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries to skip for pagination.",
            "schema": {
              "maximum": 1000000,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 10000,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 10000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CostAccountingEntry"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      },
      "post": {
        "tags": [
          "Finance"
        ],
        "summary": "Creates a cost accounting entries.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "A list of cost accounting entries to persist.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CostAccountingEntry"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CostAccountingEntry"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/finance/cost-accounting/journals": {
      "get": {
        "tags": [
          "Finance"
        ],
        "summary": "Retrieves cost accounting journals.",
        "description": "Returns all matching cost accounting journals.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries since the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries since the specified change id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "companyNo",
            "in": "query",
            "description": "Get the entries of the specified company number.",
            "schema": {
              "maximum": 999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "journalId",
            "in": "query",
            "description": "Get the journal with the specified identification.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries to skip for pagination.",
            "schema": {
              "maximum": 1000000,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 10000,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CostAccountingJournal"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/finance/accounting/receivables/payment-statuses": {
      "get": {
        "tags": [
          "Finance"
        ],
        "summary": "Gets receivables payment status information.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries which were added or edited since the date time specified.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries which were added or edited since the change id specified.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "openItemId",
            "in": "query",
            "description": "Get the entry with the specified unique open item id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "companyNo",
            "in": "query",
            "description": "Get all entries with the specified company number.",
            "schema": {
              "maximum": 999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "voucherType",
            "in": "query",
            "description": "Get all entries with the specified voucher type. Voucher no, voucher type and company no may be used together to identify the open items of a specifiy voucher.",
            "schema": {
              "maxLength": 4,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "voucherNo",
            "in": "query",
            "description": "Get all entries with the specified voucher number. Voucher no, voucher type and company no may be used together to identify the open items of a specifiy voucher.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "financialInterfaceId",
            "in": "query",
            "description": "Get all the entries with the specified financial interface identification. Normally there is only one open item per voucher.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries to skip for pagination.",
            "schema": {
              "maximum": 100000,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 1000,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 10000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Receivables payment status information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceivablesPaymentStatus"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      },
      "put": {
        "tags": [
          "Finance"
        ],
        "summary": "Set the status of an open item payment status.",
        "description": "To settle an receivable, provide an identification for the open item which is either:\r\n            \r\n- Open Item No & Company No\r\n            \r\n- Voucher No, Voucher Type, Company No & Line No\r\n            \r\n- Financial Interface Id & line no\r\n            \r\nYou must provide the amount which is still open. This allows to settle a receivable partly.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The receivable payment status to update.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ReceivablesPaymentStatus"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Open item payment status information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReceivablesPaymentStatus"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/master-data/material-management/articles": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get article information.",
        "description": "Returns all matching articles.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries since the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries since the specified change id.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "articleId",
            "in": "query",
            "description": "Get the entry with the specified article id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "origin",
            "in": "query",
            "description": "Get all entries with the specified origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "externalArticleId",
            "in": "query",
            "description": "Get all entries with the specified external article id - should be used with an origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "articleNo",
            "in": "query",
            "description": "Get all entries with the specified article number - only unique with company no.",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "name": "companyNo",
            "in": "query",
            "description": "Get all entries with the specified company number.",
            "schema": {
              "maximum": 999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries to skip for pagination.",
            "schema": {
              "maximum": 100000,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Article information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MaterialManagementArticle"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/master-data/material-management/articles/prices": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get price information.",
        "description": "Returns all matching article prices.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries since the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries since the specified change id.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "articleId",
            "in": "query",
            "description": "Get a list with all the entries for the specified article id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "articleNo",
            "in": "query",
            "description": "Get a list with all the entries for the specified article number.",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "name": "companyNo",
            "in": "query",
            "description": "Get a list with all the entries for the specified company number.",
            "schema": {
              "maximum": 999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "origin",
            "in": "query",
            "description": "Get all entries with the specified origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries to skip for pagination.",
            "schema": {
              "maximum": 100000,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 1000,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Price information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MaterialManagementArticlePrice"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      },
      "put": {
        "tags": [
          "MasterData"
        ],
        "summary": "Put price information.",
        "description": "Updates an existing entry if internal or external Id match. Creates an entry if neither internal or external Id is provided or no matching entry could be found.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The article price to create or update.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaterialManagementArticlePrice"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaterialManagementArticlePrice"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MaterialManagementArticlePrice"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MaterialManagementArticlePrice"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/master-data/material-management/warehouses": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Gets material management warehouses.",
        "description": "Returns all matching warehouses.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries which were added or edited since the date time specified.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries which were added or edited since the change id specified.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "warehouseId",
            "in": "query",
            "description": "Get the entry with the specified warehouse id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries to skip for pagination.",
            "schema": {
              "maximum": 100000,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 1000,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Warehouse information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MaterialManagementWarehouse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/master-data/purchase/suppliers": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get supplier information.",
        "description": "Returns all matching suppliers.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries since the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries since the specified change id.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "supplierId",
            "in": "query",
            "description": "Get the entry with the specified supplier id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "externalSupplierId",
            "in": "query",
            "description": "Get all entries with the specified external supplier id - should be used with an origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "origin",
            "in": "query",
            "description": "Get all entries with the specified origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "supplierNo",
            "in": "query",
            "description": "Get all entries with the specified supplier number - only unique with company no.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "companyNo",
            "in": "query",
            "description": "Get all entries of the specified company number.",
            "schema": {
              "maximum": 999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries to skip for pagination.",
            "schema": {
              "maximum": 100000,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseSupplier"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/master-data/service-recording/service-providers": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "summary": "Get service providers.",
        "description": "Returns all matching service providers.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries since the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries since the specified change id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "serviceProviderId",
            "in": "query",
            "description": "Get the entry with the specified service provider id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "origin",
            "in": "query",
            "description": "Get all entries with the specified origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "originId",
            "in": "query",
            "description": "Get all entries with the specified external service provider id - should be used with an origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "employeeId",
            "in": "query",
            "description": "Get all entries with the specified employee id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "companyNo",
            "in": "query",
            "description": "Get all entries with the specified company number.",
            "schema": {
              "maximum": 999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries to skip for pagination.",
            "schema": {
              "maximum": 100000,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 1000,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Service providers.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceRecordingServiceProvider"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/material-management/delivery-notes": {
      "get": {
        "tags": [
          "MaterialManagement"
        ],
        "summary": "Gets material management delivery notes.",
        "description": "Returns all matching delivery notes.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries which were added or edited since the date time specified.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries which were added or edited since the change id specified.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "deliveryNoteId",
            "in": "query",
            "description": "Get the entries with the specified delivery note id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "supplierDeliveryNoteNo",
            "in": "query",
            "description": "Get the entries with specified delivery note no of the supplier.",
            "schema": {
              "maxLength": 20,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "companyNo",
            "in": "query",
            "description": "Get the entries with the specified company number.",
            "schema": {
              "maximum": 999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "deliveryDate",
            "in": "query",
            "description": "Get the entries with the specified delivery date.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries to skip for pagination.",
            "schema": {
              "maximum": 100000,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 1000,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MaterialManagementDeliveryNote"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/purchasing/orders": {
      "get": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Get purchase order information.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries which were added or edited since the date time specified.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries which were added or edited since the change id specified.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "purchaseOrderId",
            "in": "query",
            "description": "Get the entry with the specified purchase order id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "origin",
            "in": "query",
            "description": "Get the entries with the specified origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "externalPurchaseOrderId",
            "in": "query",
            "description": "Get the entries with the specified external purchase order id - should be used with an origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "purchaseOrderNo",
            "in": "query",
            "description": "Get the entries with the specified purchase order number - only unique with company number.",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "name": "companyNo",
            "in": "query",
            "description": "Get the entries with the specified company number.",
            "schema": {
              "maximum": 999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries to skip for pagination.",
            "schema": {
              "maximum": 100000,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 1000,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "includeDetails",
            "in": "query",
            "description": "Defines if order positions are included in the response.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Purchase order information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseOrder"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/purchasing/invoices": {
      "get": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Get purchase invoices.",
        "description": "Returns all matching purchase invoices.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries which were added or edited since the date time specified.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries which were added or edited since the change id specified.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "invoiceId",
            "in": "query",
            "description": "Get invoice with the invoice id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "origin",
            "in": "query",
            "description": "Get the entries with the specified origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "externalInvoiceId",
            "in": "query",
            "description": "Get the entries with the specified external invoice id - should be used with an origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "companyNo",
            "in": "query",
            "description": "Get the entries with the specified company number.",
            "schema": {
              "maximum": 999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries to skip for pagination.",
            "schema": {
              "maximum": 100000,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 10000,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PurchaseInvoice"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      },
      "put": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Creates or updates a purchase invoice.",
        "description": "The invoice data must always be provided completely.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "A single invoice.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseInvoice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseInvoice"
                }
              }
            }
          },
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PurchaseInvoice"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      },
      "delete": {
        "tags": [
          "Purchasing"
        ],
        "summary": "Deletes an purchase invoice.",
        "description": "Deletes a single purchase invoice. Only unposted purchase invoices can be deleted.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "invoiceId",
            "in": "query",
            "description": "Identifier of an purchase invoice.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "origin",
            "in": "query",
            "description": "The system of origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "originId",
            "in": "query",
            "description": "The identification in the system of origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "204": {
            "description": "The invoice was deleted successfully."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/service-recording/presence-times": {
      "get": {
        "tags": [
          "ServiceRecording"
        ],
        "summary": "Search presence times.",
        "description": "Returns all matching presence times.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries since the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries since the specified change id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "serviceProviderId",
            "in": "query",
            "description": "Get all entries with the specified service provider id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "serviceProviderDayId",
            "in": "query",
            "description": "Get all entries with the specified service provider day id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "servicePerformanceDay",
            "in": "query",
            "description": "Date the service was performed.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "personnelNo",
            "in": "query",
            "description": "Get all entries with the specified personnel number - only unique with company no.",
            "schema": {
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "companyNo",
            "in": "query",
            "description": "Get all entries with the specified company number.",
            "schema": {
              "maximum": 999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "approvedOnly",
            "in": "query",
            "description": "Get only the entries that are approved.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries to skip for pagination.",
            "schema": {
              "maximum": 100000,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 1000,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceRecordingPresenceTime"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      },
      "put": {
        "tags": [
          "ServiceRecording"
        ],
        "summary": "Updates an existing presence time if internal or external Id match. Creates a presence time if neither internal or external Id is provided or no matching record could be found.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "A list of presence times to update or create.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceRecordingPresenceTime"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceRecordingPresenceTime"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceRecordingPresenceTime"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceRecordingPresenceTime"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      },
      "delete": {
        "tags": [
          "ServiceRecording"
        ],
        "summary": "Deletes a presence time either by presenceTimeId\"/> or origin and originId.",
        "description": "Deletes a presence time.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "presenceTimeId",
            "in": "query",
            "description": "Unique identifier of the presence time to delete.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "origin",
            "in": "query",
            "description": "The system of origin of the presence time to delete. Used together with the originId.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originId",
            "in": "query",
            "description": "Id in the system of origin of the presence time to delete. Used together with the origin.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "204": {
            "description": "The presence time was deleted successfully."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/service-recording/service-records": {
      "get": {
        "tags": [
          "ServiceRecording"
        ],
        "summary": "Searches for service records.",
        "description": "Returns all matching service records.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries since the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries since the specified change id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "serviceProviderDayId",
            "in": "query",
            "description": "Get the entries with the specified service provider day id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "serviceRecordDate",
            "in": "query",
            "description": "Get the entries with the date specified.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "serviceProviderId",
            "in": "query",
            "description": "Get the entries with the specified service provider id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "personnelNo",
            "in": "query",
            "description": "Get the entries for the employee with the specified personnel number.",
            "schema": {
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "companyNo",
            "in": "query",
            "description": "Get the entries with the specified company number.",
            "schema": {
              "maximum": 999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "approvedOnly",
            "in": "query",
            "description": "Get only the entries that are approved.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries to skip for pagination.",
            "schema": {
              "maximum": 100000,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 1000,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceRecordingServiceRecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      },
      "put": {
        "tags": [
          "ServiceRecording"
        ],
        "summary": "Updates an existing service record if internal or external Id match. Creates a service record if neither internal or external Id is provided or no matching record could be found.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "A list of service records to update or create.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceRecordingServiceRecord"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceRecordingServiceRecord"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceRecordingServiceRecord"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceRecordingServiceRecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      },
      "delete": {
        "tags": [
          "ServiceRecording"
        ],
        "summary": "Deletes a service record.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "serviceRecordId",
            "in": "query",
            "description": "Id of the service record.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "origin",
            "in": "query",
            "description": "The system of origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "originId",
            "in": "query",
            "description": "Id in the system of origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "204": {
            "description": "The service record was deleted successfully."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/service-recording/absences": {
      "get": {
        "tags": [
          "ServiceRecording"
        ],
        "summary": "Get absences.",
        "description": "Returns all matching absences.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries which were added or edited since the date time specified.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries which were added or edited since the change id specified.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "serviceProviderDayId",
            "in": "query",
            "description": "Get the entries with the specified service provider day id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "absenceDate",
            "in": "query",
            "description": "Get the entries with the specified date.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "serviceProviderId",
            "in": "query",
            "description": "Get the entries with the specified service provider id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "personnelNo",
            "in": "query",
            "description": "Get the entries for the employee with the specified personnel number.",
            "schema": {
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "companyNo",
            "in": "query",
            "description": "Get the entries with the specified company number.",
            "schema": {
              "maximum": 999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "approvedOnly",
            "in": "query",
            "description": "Get only the entries that are approved.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries to skip for pagination.",
            "schema": {
              "maximum": 100000,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 1000,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceRecordingAbsence"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      },
      "put": {
        "tags": [
          "ServiceRecording"
        ],
        "summary": "Updates an existing absence if internal or external Id match. Creates an absence if neither internal or external Id is provided or no matching record could be found.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "A list of absences to update or create.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceRecordingAbsence"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceRecordingAbsence"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      },
      "delete": {
        "tags": [
          "ServiceRecording"
        ],
        "summary": "Deletes an absence.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "absenceId",
            "in": "query",
            "description": "Identifies the absence.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "origin",
            "in": "query",
            "description": "The system of origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "originId",
            "in": "query",
            "description": "Id in the system of origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "204": {
            "description": "The absence was deleted successfully."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/api/v1/service-recording/allowances": {
      "get": {
        "tags": [
          "ServiceRecording"
        ],
        "summary": "Get allowances.",
        "description": "Returns all matching allowances.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries which were added or edited since the date time specified.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries which were added or edited since the change id specified.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "serviceProviderDayId",
            "in": "query",
            "description": "Get the entries with the specified service provider day id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "serviceProviderId",
            "in": "query",
            "description": "Get the entries with the specified service provider id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "personnelNo",
            "in": "query",
            "description": "Get the entries for the employee with the specified personnel number.",
            "schema": {
              "maxLength": 50,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "allowanceDate",
            "in": "query",
            "description": "Get the entries with the specified date.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "companyNo",
            "in": "query",
            "description": "Get the entries with the specified company number.",
            "schema": {
              "maximum": 999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "approvedOnly",
            "in": "query",
            "description": "Get only the entries that are approved.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries to skip for pagination.",
            "schema": {
              "maximum": 100000,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 10000,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceRecordingAllowance"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      },
      "put": {
        "tags": [
          "ServiceRecording"
        ],
        "summary": "Updates an existing day allowance if internal or external Id match. Creates a day allowance if neither internal or external Id is provided or no matching record could be found.",
        "description": "Updates an existing absence if internal or external Id match. Creates an absence if neither internal or external Id is provided or no matching record could be found.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "A list of allowances to update or create.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ServiceRecordingAllowance"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceRecordingAllowance"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service unavailable due to maintenance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      },
      "delete": {
        "tags": [
          "ServiceRecording"
        ],
        "summary": "Deletes an allowance.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 128,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "allowanceId",
            "in": "query",
            "description": "Identifier of an allowance.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "origin",
            "in": "query",
            "description": "The system of origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "originId",
            "in": "query",
            "description": "The identification in the system of origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input, object invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaintenanceWindow"
                }
              }
            }
          },
          "204": {
            "description": "The allowance was deleted successfully."
          },
          "401": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Requestor has insufficient rights."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CostAccountingEntry": {
        "required": [
          "amountBSC",
          "budgetOrActual",
          "companyNo",
          "costType",
          "entryDate",
          "period",
          "voucherNo"
        ],
        "type": "object",
        "properties": {
          "changeId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets change identification of the entry.",
            "format": "int64",
            "nullable": true,
            "readOnly": true,
            "example": 322784
          },
          "changeDate": {
            "type": "string",
            "description": "Gets change date of the entry.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "example": "2024-08-24T14:15:22Z"
          },
          "modifyUser": {
            "maxLength": 30,
            "type": "string",
            "description": "Gets user who last modified the entry.",
            "nullable": true,
            "readOnly": true,
            "example": "STJ"
          },
          "modifyDate": {
            "type": "string",
            "description": "Gets date the entry was last modified.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "entryId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique identifier of the entry.",
            "format": "int64",
            "nullable": true,
            "example": 12345
          },
          "externalEntryId": {
            "maxLength": 200,
            "type": "string",
            "description": "Gets or sets id of the entry in the external system.",
            "nullable": true,
            "example": "C47C97C0F4B04096855955CB5AD47444"
          },
          "origin": {
            "maxLength": 200,
            "type": "string",
            "description": "Gets the entry's system of origin.",
            "nullable": true,
            "readOnly": true,
            "example": "ISBRW"
          },
          "companyNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets company identification of the entry.",
            "format": "int64",
            "example": 37
          },
          "entryNo": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets identifier of entry in combination with the CompanyNo. Not unique.",
            "format": "int64",
            "nullable": true,
            "example": 12345
          },
          "costCenterNo": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets cost center identifier. Either costCenterNo, costUnitNo or orderNo may be used at once.",
            "nullable": true,
            "example": "135"
          },
          "costUnitNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets cost unit identifier. Either costCenterNo, costUnitNo or orderNo may be used at once.",
            "nullable": true,
            "example": "6548217"
          },
          "orderNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets order no identifier. Either costCenterNo, costUnitNo or orderNo may be used at once.",
            "nullable": true,
            "example": "4712"
          },
          "salesChannel": {
            "maxLength": 3,
            "type": "string",
            "description": "Gets or sets the sales channel. May be used together with costCenterNo, CostUnitNo or orderNo.",
            "nullable": true,
            "example": "20"
          },
          "costType": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets cost type of the entry.",
            "example": "4547"
          },
          "period": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets accounting period of the entry.",
            "format": "int64",
            "example": 202401
          },
          "budgetOrActual": {
            "maxLength": 1,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets B => Budget / I => Actual / P => Plan / K => Shortterm income statement.",
            "example": "I"
          },
          "voucherType": {
            "maxLength": 4,
            "type": "string",
            "description": "Gets or sets voucher type from financial accounting.",
            "nullable": true,
            "example": "INV"
          },
          "voucherNo": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets voucher number from financial accounting.",
            "format": "int64",
            "example": 658421
          },
          "entryDate": {
            "type": "string",
            "description": "Gets or sets date of the entry.",
            "format": "date",
            "example": "2024-08-24"
          },
          "text": {
            "maxLength": 1000,
            "type": "string",
            "description": "Gets or sets entry text.",
            "nullable": true,
            "example": "Budget 202403"
          },
          "amountBSC": {
            "type": "number",
            "description": "Gets or sets amount of the entry in balance sheet currency.",
            "format": "decimal",
            "example": 18000.65
          },
          "quantity": {
            "type": "number",
            "description": "Gets or sets quantity in the unit defined on the cost type.",
            "format": "decimal",
            "nullable": true,
            "example": 2.1234
          },
          "isMarkedForDeletion": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the entry is going to be deleted in the next cost accounting processing."
          },
          "isProcessed": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the entry is processed and will therefore be shown in reports."
          },
          "generated": {
            "maxLength": 1,
            "type": "string",
            "description": "Gets or sets the type of system generated entries. E => Debit bookings for combined cc & cu entries / F => Fix cost entries / K => Short term income statement / V => Cost allocation / Z => Additional entries / B => Credit bookings for allocations / T => Debit bookings for allocations.",
            "nullable": true,
            "example": "U"
          },
          "financialDimensions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostAccountingFinancialDimension"
            },
            "description": "Gets a list of financial dimensions.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a entry in the cost accounting."
      },
      "CostAccountingFinancialDimension": {
        "required": [
          "financialDimensionNo",
          "financialDimensionValue"
        ],
        "type": "object",
        "properties": {
          "costAccountingFinancialDimensionId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique id of the cost accounting financial dimension entry.",
            "format": "int64",
            "nullable": true,
            "example": 123456
          },
          "financialDimensionNo": {
            "maximum": 99,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets the financial dimension.",
            "format": "int64",
            "example": 23
          },
          "financialDimensionValue": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the financial dimension value.",
            "example": "321.2"
          }
        },
        "additionalProperties": false,
        "description": "Represents a cost accounting financial dimension entry."
      },
      "CostAccountingJournal": {
        "required": [
          "companyNo",
          "journalId",
          "period"
        ],
        "type": "object",
        "properties": {
          "changeId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets change identification of the entry.",
            "format": "int64",
            "nullable": true,
            "readOnly": true,
            "example": 5214698741
          },
          "changeDate": {
            "type": "string",
            "description": "Gets change date of the entry.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "modifyUser": {
            "maxLength": 30,
            "type": "string",
            "description": "Gets user who last modified the entry.",
            "nullable": true,
            "readOnly": true
          },
          "modifyDate": {
            "type": "string",
            "description": "Gets date the entry was last modified.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "journalId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets identification of the cost accountig journal.",
            "format": "int64",
            "example": 123456
          },
          "companyNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets the company number of the cost accountig journal.",
            "format": "int64",
            "example": 100
          },
          "period": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets the period of the cost accountig journal.",
            "format": "int64",
            "example": 100
          },
          "journalEntries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostAccountingJournalEntry"
            },
            "description": "Gets the list of journal entries.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a cost accounting journal."
      },
      "CostAccountingJournalEntry": {
        "required": [
          "amountBSC",
          "budgetOrActual",
          "costType",
          "entryDate"
        ],
        "type": "object",
        "properties": {
          "caccJournalEntryId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique identifier of the entry.",
            "format": "int64",
            "nullable": true,
            "example": 12345
          },
          "origin": {
            "maxLength": 200,
            "type": "string",
            "description": "Gets or sets the entry's system of origin.",
            "nullable": true,
            "example": "ISLE"
          },
          "originId": {
            "maxLength": 200,
            "type": "string",
            "description": "Gets or sets the identification of the entry's system of origin.",
            "nullable": true,
            "example": "LEIST:12345"
          },
          "budgetOrActual": {
            "maxLength": 1,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets B => Budget / I => Actual / P => Plan / K => Shortterm income statement.",
            "example": "I"
          },
          "costCenterNo": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets cost center identifier. Either costCenterNo, costUnitNo or orderNo may be used at once.",
            "nullable": true,
            "example": "135"
          },
          "costUnitNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets cost unit identifier. Either costCenterNo, costUnitNo or orderNo may be used at once.",
            "nullable": true,
            "example": "6548217"
          },
          "orderNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets order no identifier. Either costCenterNo, costUnitNo or orderNo may be used at once.",
            "nullable": true,
            "example": "4712"
          },
          "salesChannel": {
            "maxLength": 3,
            "type": "string",
            "description": "Gets or sets the sales channel. May be used together with costCenterNo, CostUnitNo or orderNo.",
            "nullable": true,
            "example": "20"
          },
          "costType": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets cost type of the entry.",
            "example": "4547"
          },
          "voucherType": {
            "maxLength": 4,
            "type": "string",
            "description": "Gets or sets voucher type from financial accounting.",
            "nullable": true,
            "example": "INV"
          },
          "voucherNo": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets voucher number from financial accounting.",
            "format": "int64",
            "nullable": true,
            "example": 658421
          },
          "entryDate": {
            "type": "string",
            "description": "Gets or sets date of the entry.",
            "format": "date",
            "example": "2024-08-24"
          },
          "text": {
            "maxLength": 1000,
            "type": "string",
            "description": "Gets or sets entry text.",
            "nullable": true,
            "example": "Budget 202403"
          },
          "amountBSC": {
            "type": "number",
            "description": "Gets or sets amount of the entry in balance sheet currency.\r\nValue has 18 digits before the decimal point and 2 decimal places.",
            "format": "decimal",
            "example": 18000.65
          },
          "quantity": {
            "type": "number",
            "description": "Gets or sets quantity in the unit defined on the cost type.\r\nValue has 18 digits before the decimal point and 4 decimal places.",
            "format": "decimal",
            "nullable": true,
            "example": 2.1234
          },
          "isReversal": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the entry is a reversal."
          },
          "financialDimensions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostAccountingJournalEntryFinancialDimension"
            },
            "description": "Gets a list of financial dimensions.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a entry in the cost accounting journal."
      },
      "CostAccountingJournalEntryFinancialDimension": {
        "required": [
          "financialDimensionNo",
          "financialDimensionValue"
        ],
        "type": "object",
        "properties": {
          "financialDimensionNo": {
            "maximum": 99,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets the financial dimension.",
            "format": "int64",
            "example": 23
          },
          "financialDimensionValue": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets the financial dimension value.",
            "example": "321.2"
          }
        },
        "additionalProperties": false,
        "description": "Represents a cost accounting financial dimension of the journal entry."
      },
      "MaintenanceWindow": {
        "type": "object",
        "properties": {
          "maintenanceWindowId": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "active": {
            "type": "boolean"
          },
          "fromDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "untilDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "info": {
            "type": "string",
            "nullable": true
          },
          "clientStartAllowed": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MaterialManagementArticle": {
        "required": [
          "articleNo",
          "companyNo",
          "description",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "changeId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets change id of the entry.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "changeDate": {
            "type": "string",
            "description": "Gets change date of the entry.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "active": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this entry is active or not."
          },
          "modifyUser": {
            "maxLength": 30,
            "type": "string",
            "description": "Gets user who last modified the entry.",
            "nullable": true,
            "readOnly": true
          },
          "modifyDate": {
            "type": "string",
            "description": "Gets date the entry was last modified.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "articleId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique identifier of the article.",
            "format": "int64",
            "nullable": true
          },
          "origin": {
            "maxLength": 200,
            "type": "string",
            "description": "Gets the entry's system of origin.",
            "nullable": true,
            "readOnly": true
          },
          "externalArticleId": {
            "maxLength": 200,
            "type": "string",
            "description": "Gets or sets id of the article in the external system.",
            "nullable": true
          },
          "articleNo": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets article number for identification by the users."
          },
          "companyNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets company identification of the entry.",
            "format": "int64"
          },
          "description": {
            "maxLength": 300,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets article description for external usage."
          },
          "shortDescription": {
            "maxLength": 80,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets article description for internal usage."
          },
          "stockUnitCode": {
            "maximum": 289999,
            "minimum": 280001,
            "type": "integer",
            "description": "Gets or sets c28 - Stock unit code.",
            "format": "int64",
            "nullable": true
          },
          "priceUnitCode": {
            "maximum": 289999,
            "minimum": 280001,
            "type": "integer",
            "description": "Gets or sets c28 - Price unit code.",
            "format": "int64",
            "nullable": true
          },
          "conversionFactorStockUnitPriceUnit": {
            "maximum": 9999999,
            "minimum": 0,
            "type": "number",
            "description": "Gets or sets the conversion factor to convert StockUnit to PriceUnit e.g. 1 (stockUnitCode).",
            "format": "decimal"
          },
          "conversionFactorPriceUnitStockUnit": {
            "maximum": 9999999,
            "minimum": 0,
            "type": "number",
            "description": "Gets or sets the conversion factor to convert PriceUnit to StockUnit e.g. 12 (priceUnitCode).",
            "format": "decimal"
          },
          "stockManagement": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the stock level is managed on a quantity basis."
          },
          "inventoryManagement": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the stock level is managed on an inventory basis."
          },
          "articleGroupCode": {
            "maximum": 4599999,
            "minimum": 4590001,
            "type": "integer",
            "description": "Gets or sets c459 - Article group code.",
            "format": "int64",
            "nullable": true
          },
          "itemCategoryCode": {
            "type": "integer",
            "description": "Gets or sets unique identifier of the item category.",
            "format": "int64",
            "nullable": true
          },
          "itemMainGroupId": {
            "type": "integer",
            "description": "Gets or sets unique identifier of the item main group.",
            "format": "int64",
            "nullable": true
          },
          "itemGroupId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique identifier of the item group.",
            "format": "int64",
            "nullable": true
          },
          "ean": {
            "maxLength": 13,
            "type": "string",
            "description": "Gets or sets the EAN of the article.",
            "nullable": true
          },
          "customsTariffNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets customs tariff number.",
            "nullable": true
          },
          "countryOfOrigin": {
            "maxLength": 2,
            "type": "string",
            "description": "Gets or sets ISO code of the country of origin.",
            "nullable": true
          },
          "intrastatCommodityCode": {
            "maximum": 1359999,
            "minimum": 1350001,
            "type": "integer",
            "description": "Gets or sets the C135 - Intrastat commodity code.",
            "format": "int64",
            "nullable": true
          },
          "cn8Code": {
            "maxLength": 8,
            "type": "string",
            "description": "Gets or sets the CN8 Commodity Code.",
            "nullable": true
          },
          "vat": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaterialManagementArticleVat"
            },
            "description": "Gets list of vat entries.",
            "nullable": true,
            "readOnly": true
          },
          "localizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaterialManagementArticleLocalization"
            },
            "description": "Gets list of localizations.",
            "nullable": true,
            "readOnly": true
          },
          "attributeValueSet": {
            "$ref": "#/components/schemas/MaterialManagementAttributeValueSet"
          }
        },
        "additionalProperties": false,
        "description": "Represents a (material management) article entry."
      },
      "MaterialManagementArticleLocalization": {
        "required": [
          "description",
          "language",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "language": {
            "maxLength": 2,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets language as ISO code."
          },
          "description": {
            "maxLength": 300,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets full description in the given language."
          },
          "shortDescription": {
            "maxLength": 80,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets short description in the given language."
          }
        },
        "additionalProperties": false,
        "description": "Represents a (material management) article localization entry."
      },
      "MaterialManagementArticlePrice": {
        "required": [
          "price",
          "priceTypeCode",
          "validFrom"
        ],
        "type": "object",
        "properties": {
          "changeId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets change id of the entry.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "changeDate": {
            "type": "string",
            "description": "Gets change date of the entry.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "priceId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets internal identifier of the article price.",
            "format": "int64",
            "nullable": true
          },
          "modifyUser": {
            "maxLength": 30,
            "type": "string",
            "description": "Gets user who last modified the entry.",
            "nullable": true,
            "readOnly": true
          },
          "modifyDate": {
            "type": "string",
            "description": "Gets date the entry was last modified.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "origin": {
            "maxLength": 200,
            "type": "string",
            "description": "Gets the entry's system of origin.",
            "nullable": true,
            "readOnly": true
          },
          "externalPriceId": {
            "maxLength": 200,
            "type": "string",
            "description": "Gets or sets indentificaion of the article price in the external system.",
            "nullable": true
          },
          "articleId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique identifier of the article.",
            "format": "int64",
            "nullable": true
          },
          "articleNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets article number for identification together with 'articleNo'.",
            "nullable": true
          },
          "companyNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets company for identification together with 'companyNo'.",
            "format": "int64",
            "nullable": true
          },
          "priceTypeCode": {
            "maximum": 4079999,
            "minimum": 4070001,
            "type": "integer",
            "description": "Gets or sets c4074 - Type of price (standard, avarage, last purchase price).",
            "format": "int64"
          },
          "validFrom": {
            "type": "string",
            "description": "Gets or sets date from which the price entry is valid.",
            "format": "date"
          },
          "price": {
            "maximum": 99999999,
            "minimum": 0,
            "type": "number",
            "description": "Gets or sets price per price Unit in balance sheet currency.",
            "format": "decimal"
          }
        },
        "additionalProperties": false,
        "description": "Represents a article price entry."
      },
      "MaterialManagementArticleVat": {
        "required": [
          "taxSystem",
          "vatTypeCode"
        ],
        "type": "object",
        "properties": {
          "taxSystem": {
            "maxLength": 2,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets country of tax system as ISO code."
          },
          "vatTypeCode": {
            "maximum": 839999,
            "minimum": 830001,
            "type": "integer",
            "description": "Gets or sets c83 - Tax type (normal rate, reduced rate,...).",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "Represents a (material management) article vat entry."
      },
      "MaterialManagementAttributeValue": {
        "required": [
          "attributeDefinitionId",
          "modifyUser"
        ],
        "type": "object",
        "properties": {
          "attributeValueId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets internal identification of attribute value.",
            "format": "int64",
            "nullable": true
          },
          "attributeDefinitionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets internal identification of attribute definition.",
            "format": "int64"
          },
          "modifyUser": {
            "maxLength": 30,
            "type": "string",
            "description": "Gets or sets user who last modified the entry.",
            "nullable": true
          },
          "modifyDate": {
            "type": "string",
            "description": "Gets or sets date the entry was last modified.",
            "format": "date-time",
            "nullable": true
          },
          "sortNo": {
            "maximum": 9999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets position within the attribute value set.",
            "format": "int64",
            "nullable": true
          },
          "companyNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets company identification of the entry.",
            "format": "int64",
            "nullable": true
          },
          "textValue": {
            "maxLength": 1000,
            "type": "string",
            "description": "Gets or sets a string value.",
            "nullable": true
          },
          "numberValue": {
            "type": "number",
            "description": "Gets or sets number or decimal value.",
            "format": "decimal",
            "nullable": true
          },
          "dateValue": {
            "type": "string",
            "description": "Gets or sets date value.",
            "format": "date-time",
            "nullable": true
          },
          "boolValue": {
            "type": "boolean",
            "description": "Gets or sets a true or false value.",
            "nullable": true
          },
          "codeValue": {
            "type": "integer",
            "description": "Gets or sets code value.",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The attribute value."
      },
      "MaterialManagementAttributeValueSet": {
        "required": [
          "attributeSetId",
          "modifyUser"
        ],
        "type": "object",
        "properties": {
          "attributeSetId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets internal identification of attribute set.",
            "format": "int64"
          },
          "attributeValueSetId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets internal identification of attribute value set.",
            "format": "int64",
            "nullable": true
          },
          "modifyUser": {
            "maxLength": 30,
            "type": "string",
            "description": "Gets or sets user who last modified the entry.",
            "nullable": true
          },
          "modifyDate": {
            "type": "string",
            "description": "Gets or sets date the entry was last modified.",
            "format": "date-time",
            "nullable": true
          },
          "attributeValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaterialManagementAttributeValue"
            },
            "description": "Gets a list of attribute values.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "The attribute value set."
      },
      "MaterialManagementDeliveryNote": {
        "required": [
          "companyNo",
          "deliveryNoteId"
        ],
        "type": "object",
        "properties": {
          "changeId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets change identification of the entry.",
            "format": "int64",
            "nullable": true,
            "readOnly": true,
            "example": 5214698741
          },
          "changeDate": {
            "type": "string",
            "description": "Gets change date of the entry.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "modifyUser": {
            "maxLength": 30,
            "type": "string",
            "description": "Gets user who last modified the entry.",
            "nullable": true,
            "readOnly": true
          },
          "modifyDate": {
            "type": "string",
            "description": "Gets date the entry was last modified.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "deliveryNoteId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets identification of the delivery note.",
            "format": "int64",
            "readOnly": true,
            "example": 123456
          },
          "supplierDeliveryNoteNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets delivery note no of the supplier.",
            "nullable": true,
            "example": "MAU"
          },
          "materialPostingTypeCode": {
            "maximum": 4129999,
            "minimum": 4120001,
            "type": "integer",
            "description": "Gets or sets c412 - material posting type\r\n\r\n4120010 - Input inventory\r\n\r\n4120011 - Purchase receipt\r\n\r\n4120012 - Purchase returns\r\n\r\n4120013 - Production input\r\n\r\n4120014 - Production returns\r\n\r\n4120015 - Sales returns\r\n\r\n4120016 - Cost center returns\r\n\r\n4120017 - Order returns\r\n\r\n4120020 - Production output\r\n\r\n4120021 - Sales output\r\n\r\n4120022 - Cost center output\r\n\r\n4120023 - Store difference\r\n\r\n4120024 - Order output\r\n\r\n4120030 - Material transfer\r\n\r\n4120031 - Reclassification.",
            "format": "int64",
            "example": 4120011
          },
          "companyNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets the company number of the delivery note.",
            "format": "int64",
            "example": 100
          },
          "deliveryDate": {
            "type": "string",
            "description": "Gets date and time of the delivery.",
            "format": "date",
            "nullable": true,
            "readOnly": true
          },
          "warehouseId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets identification of the warehouse.",
            "format": "int64",
            "nullable": true,
            "example": 123456
          },
          "targetWarehouseId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets identification of the target warehouse in case of material transfer.",
            "format": "int64",
            "nullable": true,
            "example": 654321
          },
          "orderNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets the purchase, sales, production or material order.",
            "nullable": true,
            "example": "E2024.0123"
          },
          "costCenterNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets cost center number.",
            "nullable": true,
            "example": "Digger 101"
          },
          "costUnitNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets cost unit number.",
            "nullable": true,
            "example": "C-222"
          },
          "isReversal": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this delivery note is a reversal."
          },
          "reversedDeliveryNoteId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets identification of the reversed delivery note on the reversal delivery note.",
            "format": "int64",
            "nullable": true,
            "readOnly": true,
            "example": 222333
          },
          "reversalDeliveryNoteId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets identification of the reversal delivery note on the reversed delivery note.",
            "format": "int64",
            "nullable": true,
            "readOnly": true,
            "example": 444555
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaterialManagementDeliveryNotePosition"
            },
            "description": "Gets list of positions of the delivery note.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a material management delivery."
      },
      "MaterialManagementDeliveryNotePosition": {
        "required": [
          "articleNo"
        ],
        "type": "object",
        "properties": {
          "positionNo": {
            "maximum": 9999.999,
            "minimum": 0.001,
            "type": "number",
            "description": "Gets position number in the delivery note.",
            "format": "decimal",
            "readOnly": true,
            "example": 123456
          },
          "positionSequenceNo": {
            "maximum": 9,
            "minimum": 1,
            "type": "integer",
            "description": "Gets sequence number in the delivery note position.\r\nNormaly 1, 2 for the add posting in case of a material transfer.",
            "format": "int64",
            "readOnly": true,
            "example": 1
          },
          "orderPosNo": {
            "maximum": 9999.999,
            "minimum": 0.001,
            "type": "number",
            "description": "Gets position number of the order position.",
            "format": "decimal",
            "nullable": true,
            "readOnly": true,
            "example": 123456
          },
          "articleId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique identifier of the article.",
            "format": "int64"
          },
          "articleNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets article number for identification by the users.",
            "nullable": true
          },
          "quantityInStockUnit": {
            "maximum": 9999999999.9999,
            "minimum": -9999999999.9999,
            "type": "number",
            "description": "Gets or sets delivery quantity in stock units.",
            "format": "decimal",
            "example": 100
          },
          "remarks": {
            "maxLength": 500,
            "type": "string",
            "description": "Gets or sets remarks for the delivery note position.",
            "nullable": true
          },
          "materialPostings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaterialManagementMaterialPosting"
            },
            "description": "Gets list of material postings for the managed articles.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a material management delivery position."
      },
      "MaterialManagementMaterialPosting": {
        "required": [
          "articleNo"
        ],
        "type": "object",
        "properties": {
          "materialPostingId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique identifier of the material posting.",
            "format": "int64"
          },
          "articleId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique identifier of the article.",
            "format": "int64"
          },
          "articleNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets article number for identification by the users.",
            "nullable": true
          },
          "storageBinId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique identifier of the storage bin.",
            "format": "int64"
          },
          "quantityInStockUnit": {
            "maximum": 9999999999.9999,
            "minimum": -9999999999.9999,
            "type": "number",
            "description": "Gets or sets delivery quantity in stock units.",
            "format": "decimal",
            "example": 100
          }
        },
        "additionalProperties": false,
        "description": "Represents a material management posting."
      },
      "MaterialManagementStorageArea": {
        "required": [
          "active",
          "storageAreaName"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this entry is active or not."
          },
          "modifyUser": {
            "maxLength": 30,
            "type": "string",
            "description": "Gets user who last modified the entry.",
            "nullable": true,
            "readOnly": true,
            "example": "STJ"
          },
          "modifyDate": {
            "type": "string",
            "description": "Gets date the entry was last modified.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "storageAreaId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique identifier of the storage area.",
            "format": "int64",
            "example": 398
          },
          "storageAreaName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets name of the storage area.",
            "example": "Halle 1"
          },
          "storageAreaShortName": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets short name of the storage area.",
            "nullable": true,
            "example": "H1"
          },
          "isNegativeStockAllowed": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether a negative stock quantity is allowed for this storage area."
          },
          "storageBins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaterialManagementStorageBin"
            },
            "description": "Gets the list of storage bins.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a material management storage area."
      },
      "MaterialManagementStorageBin": {
        "required": [
          "active",
          "storageBinName"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this entry is active or not."
          },
          "modifyUser": {
            "maxLength": 30,
            "type": "string",
            "description": "Gets user who last modified the entry.",
            "nullable": true,
            "readOnly": true,
            "example": "STJ"
          },
          "modifyDate": {
            "type": "string",
            "description": "Gets date the entry was last modified.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "storageBinId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique identifier of the storage bin.",
            "format": "int64",
            "example": 979
          },
          "storageBinName": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets name of the storage bin.",
            "example": "A2.5"
          }
        },
        "additionalProperties": false,
        "description": "Represents a material management storage bin."
      },
      "MaterialManagementWarehouse": {
        "required": [
          "active",
          "warehouseName"
        ],
        "type": "object",
        "properties": {
          "changeId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets change identification of the entry.",
            "format": "int64",
            "nullable": true,
            "readOnly": true,
            "example": 8971239429
          },
          "changeDate": {
            "type": "string",
            "description": "Gets change date of the entry.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "active": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this entry is active or not."
          },
          "modifyUser": {
            "maxLength": 30,
            "type": "string",
            "description": "Gets user who last modified the entry.",
            "nullable": true,
            "readOnly": true,
            "example": "STJ"
          },
          "modifyDate": {
            "type": "string",
            "description": "Gets date the entry was last modified.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "warehouseId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique identifier of the warehouse.",
            "format": "int64",
            "example": 326479517
          },
          "warehouseName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets name of the warehouse.",
            "example": "Warehouse AT01"
          },
          "warehouseShortName": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets short name of the warehouse.",
            "nullable": true,
            "example": "AT01"
          },
          "locationBusinessPartnerAddressId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique identifier of the location business partner address.",
            "format": "int64",
            "nullable": true,
            "example": 5927
          },
          "ownerBusinessPartnerAddressId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique identifier of the owner business partner address.",
            "format": "int64",
            "nullable": true,
            "example": 5927
          },
          "storageAreas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaterialManagementStorageArea"
            },
            "description": "Gets the list of storage areas.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a material management warehouse."
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "PurchaseAttributeValue": {
        "required": [
          "attributeDefinitionId",
          "modifyUser"
        ],
        "type": "object",
        "properties": {
          "attributeValueId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets internal identification of attribute value.",
            "format": "int64",
            "nullable": true
          },
          "attributeDefinitionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets internal identification of attribute definition.",
            "format": "int64"
          },
          "modifyUser": {
            "maxLength": 30,
            "type": "string",
            "description": "Gets or sets user who last modified the entry.",
            "nullable": true
          },
          "modifyDate": {
            "type": "string",
            "description": "Gets or sets date the entry was last modified.",
            "format": "date-time",
            "nullable": true
          },
          "sortNo": {
            "maximum": 9999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets position within the attribute value set.",
            "format": "int64",
            "nullable": true
          },
          "companyNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets company identification of the entry.",
            "format": "int64",
            "nullable": true
          },
          "textValue": {
            "maxLength": 1000,
            "type": "string",
            "description": "Gets or sets a string value.",
            "nullable": true
          },
          "numberValue": {
            "type": "number",
            "description": "Gets or sets number or decimal value.",
            "format": "decimal",
            "nullable": true
          },
          "dateValue": {
            "type": "string",
            "description": "Gets or sets date value.",
            "format": "date-time",
            "nullable": true
          },
          "boolValue": {
            "type": "boolean",
            "description": "Gets or sets a true or false value.",
            "nullable": true
          },
          "codeValue": {
            "type": "integer",
            "description": "Gets or sets code value.",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The attribute value."
      },
      "PurchaseAttributeValueSet": {
        "required": [
          "attributeSetId",
          "modifyUser"
        ],
        "type": "object",
        "properties": {
          "attributeSetId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets internal identification of attribute set.",
            "format": "int64"
          },
          "attributeValueSetId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets internal identification of attribute value set.",
            "format": "int64",
            "nullable": true
          },
          "modifyUser": {
            "maxLength": 30,
            "type": "string",
            "description": "Gets or sets user who last modified the entry.",
            "nullable": true
          },
          "modifyDate": {
            "type": "string",
            "description": "Gets or sets date the entry was last modified.",
            "format": "date-time",
            "nullable": true
          },
          "attributeValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseAttributeValue"
            },
            "description": "Gets a list of attribute values.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": "The attribute value set."
      },
      "PurchaseInvoice": {
        "required": [
          "companyNo",
          "currency",
          "entryDate",
          "invoiceTypeCode",
          "paymentTermsCode",
          "period",
          "totalAmountInBalanceSheetCurrency",
          "totalAmountInInvoiceCurrency",
          "valueDate",
          "vatDate",
          "voucherType"
        ],
        "type": "object",
        "properties": {
          "changeId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets change identification of the entry.",
            "format": "int64",
            "nullable": true,
            "readOnly": true,
            "example": 8971239429
          },
          "changeDate": {
            "type": "string",
            "description": "Gets change date of the entry.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "modifyUser": {
            "maxLength": 30,
            "type": "string",
            "description": "Gets user who last modified the entry.",
            "nullable": true,
            "readOnly": true,
            "example": "STJ"
          },
          "modifyDate": {
            "type": "string",
            "description": "Gets date the entry was last modified.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "invoiceId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets technical identification of the entry.",
            "format": "int64",
            "nullable": true,
            "example": 326479517
          },
          "origin": {
            "maxLength": 200,
            "type": "string",
            "description": "Gets the system of origin.",
            "nullable": true,
            "readOnly": true,
            "example": "WorkflowXY"
          },
          "originId": {
            "maxLength": 200,
            "type": "string",
            "description": "Gets or sets id in the system of origin.",
            "nullable": true,
            "example": "INV-319.321.898"
          },
          "companyNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets company identification of the entry.",
            "format": "int64",
            "example": 37
          },
          "invoiceTypeCode": {
            "maximum": 24719999,
            "minimum": 24710001,
            "type": "integer",
            "description": "Gets or sets c2471 - Type of invoice\r\n\r\n24710001 - invoice\r\n\r\n24710002 - credit note.",
            "format": "int64",
            "example": 24710001
          },
          "voucherType": {
            "maxLength": 4,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets voucher type for accounting system.",
            "example": "EFAK"
          },
          "voucherNo": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets voucher number for accounting system.",
            "format": "int64",
            "nullable": true,
            "example": 658421
          },
          "entryDate": {
            "type": "string",
            "description": "Gets or sets entry date of the invoice.",
            "format": "date",
            "example": "2024-06-28"
          },
          "valueDate": {
            "type": "string",
            "description": "Gets or sets value date of the invoice.",
            "format": "date",
            "example": "2024-06-24"
          },
          "vatDate": {
            "type": "string",
            "description": "Gets or sets relevant date for tax.",
            "format": "date",
            "example": "2024-05-24"
          },
          "period": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets accounting period of the invoice.\r\nFormat YYYYMM (e.g. 202401).",
            "format": "int64",
            "example": 202407
          },
          "accountPayableNo": {
            "type": "integer",
            "description": "Gets or sets number of the account payable.\r\nThe supplier number or the account payable number must be specified.",
            "format": "int64",
            "nullable": true
          },
          "supplierNo": {
            "type": "integer",
            "description": "Gets or sets supplier number of the invoice.\r\nThe supplier number or the account payable number must be specified.",
            "format": "int64",
            "nullable": true
          },
          "supplierInvoiceNo": {
            "maxLength": 50,
            "type": "string",
            "description": "Gets or sets invoice number of the supplier.",
            "nullable": true,
            "example": "INV-2024-1234"
          },
          "currency": {
            "maxLength": 3,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets ISO code of the currency."
          },
          "exchangeRate": {
            "maximum": 99999999.999999,
            "type": "number",
            "description": "Gets or sets exchange rate used for invoice when not in balance sheet currency.\r\nUse 1 when invoice is in balance sheet currency.\r\nIf the exchange rate is not specified, it is determined using the entry date.",
            "format": "decimal",
            "nullable": true,
            "example": 0.954
          },
          "invoiceStatusCode": {
            "maximum": 24729999,
            "minimum": 24720001,
            "type": "integer",
            "description": "Gets c2472 - Status of the invoice\r\n\r\n24720001 - open\r\n\r\n24720002 - posted to accounting system.\r\n",
            "format": "int64",
            "nullable": true,
            "readOnly": true,
            "example": 24720001
          },
          "paymentTermsCode": {
            "maximum": 279999,
            "minimum": 270001,
            "type": "integer",
            "description": "Gets or sets c27 - Payment terms code for the invoice.",
            "format": "int64"
          },
          "totalAmountInInvoiceCurrency": {
            "maximum": 999999999999.99,
            "minimum": -999999999999.99,
            "type": "number",
            "description": "Gets or sets total amount of the invoice in invoice currency.",
            "format": "decimal",
            "example": 108.1
          },
          "totalAmountInBalanceSheetCurrency": {
            "maximum": 999999999999.99,
            "minimum": -999999999999.99,
            "type": "number",
            "description": "Gets or sets total amount of the invoice in balance sheet currency.",
            "format": "decimal",
            "example": 108.1
          },
          "postingText": {
            "maxLength": 50,
            "type": "string",
            "description": "Gets or sets optional posting text for accountig system.",
            "nullable": true
          },
          "qrCode": {
            "maxLength": 4000,
            "type": "string",
            "description": "Gets or sets complete QR-Code for payment.",
            "nullable": true
          },
          "qrIban": {
            "maxLength": 34,
            "type": "string",
            "description": "Gets or sets QR-IBAN for payment.",
            "nullable": true
          },
          "qrQrrReference": {
            "maxLength": 27,
            "type": "string",
            "description": "Gets or sets QRR-Reference for payment.\r\nOnly numeric characters are allowed.",
            "nullable": true
          },
          "qrScorReference": {
            "maxLength": 25,
            "type": "string",
            "description": "Gets or sets SCOR-Reference for payment.",
            "nullable": true
          },
          "qrTypeCode": {
            "maximum": 9859999,
            "minimum": 9850001,
            "type": "integer",
            "description": "Gets or sets c985 - Type of QR-Code for payment\r\n\r\n9850001 - Switzerland qr with reference no\r\n\r\n9850002 - Switzerland qr with SCOR no\r\n\r\n9850003 - Switzerland qr without reference.",
            "format": "int64",
            "nullable": true,
            "example": 9850001
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseInvoicePosition"
            },
            "description": "Gets the list of invoice positions.",
            "nullable": true
          },
          "taxes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseInvoiceInputTax"
            },
            "description": "Gets the list of input taxes.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a purchase invoice entry."
      },
      "PurchaseInvoiceInputTax": {
        "required": [
          "amountInInvoiceCurrency",
          "vatAmountInInvoiceCurrency",
          "vatCode",
          "vatQuota",
          "vatRate"
        ],
        "type": "object",
        "properties": {
          "modifyUser": {
            "maxLength": 30,
            "type": "string",
            "description": "Gets user who last modified the entry.",
            "nullable": true,
            "readOnly": true,
            "example": "STJ"
          },
          "modifyDate": {
            "type": "string",
            "description": "Gets date the entry was last modified.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "purchaseInvoiceVatId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets technical identification of the entry.",
            "format": "int64",
            "nullable": true,
            "example": 326479517
          },
          "vatCode": {
            "maximum": 239999,
            "minimum": 230001,
            "type": "integer",
            "description": "Gets or sets c23 - Type of applied input tax.",
            "format": "int64",
            "example": 230006
          },
          "vatRate": {
            "maximum": 999.99,
            "minimum": 0,
            "type": "number",
            "description": "Gets or sets input tax rate.",
            "format": "decimal",
            "example": 19
          },
          "vatQuota": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets input tax quota.",
            "format": "int64",
            "example": 100
          },
          "amountInInvoiceCurrency": {
            "maximum": 9999999999.99,
            "minimum": -9999999999.99,
            "type": "number",
            "description": "Gets or sets amount for the tax code excluding input tax in invoice currency.",
            "format": "decimal",
            "example": 100
          },
          "vatAmountInInvoiceCurrency": {
            "maximum": 9999999999.99,
            "minimum": -9999999999.99,
            "type": "number",
            "description": "Gets or sets tax amount for the tax code in invoice currency.",
            "format": "decimal",
            "example": 19
          }
        },
        "additionalProperties": false,
        "description": "Represents a purchase invoice input tax record."
      },
      "PurchaseInvoicePosition": {
        "required": [
          "invoicePositionNo",
          "positionTypeCode"
        ],
        "type": "object",
        "properties": {
          "modifyUser": {
            "maxLength": 30,
            "type": "string",
            "description": "Gets user who last modified the entry.",
            "nullable": true,
            "readOnly": true,
            "example": "STJ"
          },
          "modifyDate": {
            "type": "string",
            "description": "Gets date the entry was last modified.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "invoicePositionId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets technical identification of the entry.",
            "format": "int64",
            "nullable": true,
            "example": 326479517
          },
          "positionTypeCode": {
            "maximum": 24559999,
            "minimum": 24550001,
            "type": "integer",
            "description": "Gets or sets c2455 - Type of the position\r\n\r\n24550001 - article position\r\n\r\n24550002 - amount position\r\n\r\n24550003 - text position.",
            "format": "int64",
            "example": 24550001
          },
          "invoicePositionNo": {
            "maximum": 9999.999,
            "minimum": 0,
            "type": "number",
            "description": "Gets or sets get or set the invoice position number. Must be unique in a invoice.",
            "format": "decimal",
            "example": 2.2
          },
          "orderPositionId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets technical identification of the purchase order position.",
            "format": "int64",
            "nullable": true,
            "example": 326479517
          },
          "goodsReceiptPositionId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets technical identification of the goods receipt position.",
            "format": "int64",
            "nullable": true,
            "example": 326479517
          },
          "deliveryNoteId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets technical identification of the delivery note in the material management system.",
            "format": "int64",
            "nullable": true,
            "example": 326479517
          },
          "deliveryNotePositionNo": {
            "maximum": 9999.999,
            "minimum": 0.001,
            "type": "number",
            "description": "Gets or sets position number of the delivery note position in the material management system.",
            "format": "decimal",
            "nullable": true,
            "example": 2.2
          },
          "quantityInDeliveryUnit": {
            "maximum": 9999999999.9999,
            "minimum": -9999999999.9999,
            "type": "number",
            "description": "Gets or sets invoice quantity in delivery units.\r\nRequired for position type article .",
            "format": "decimal",
            "nullable": true,
            "example": 100
          },
          "deliveryUnitCode": {
            "maximum": 289999,
            "minimum": 280001,
            "type": "integer",
            "description": "Gets or sets c28 - Delivery unit code.\r\nRequired for position type article .",
            "format": "int64",
            "nullable": true,
            "example": 280005
          },
          "quantityInPriceUnit": {
            "maximum": 9999999999.9999,
            "minimum": -9999999999.9999,
            "type": "number",
            "description": "Gets or sets invoice quantity in price units.\r\nRequired for position type article.",
            "format": "decimal",
            "nullable": true,
            "example": 100
          },
          "priceUnitCode": {
            "maximum": 289999,
            "minimum": 280001,
            "type": "integer",
            "description": "Gets or sets c28 - Price unit code.\r\nRequired for position type article .",
            "format": "int64",
            "nullable": true,
            "example": 280005
          },
          "price": {
            "maximum": 9999999999.9999,
            "minimum": 0,
            "type": "number",
            "description": "Gets or sets price per price unit.",
            "format": "decimal",
            "nullable": true,
            "example": 2568.25
          },
          "surchargePercent": {
            "maximum": 999.99,
            "minimum": 0,
            "type": "number",
            "description": "Gets or sets surcharge in percent. If this value is specified, the surcharge amount must also be specified.",
            "format": "decimal",
            "nullable": true,
            "example": 1.25
          },
          "surchargeAmount": {
            "maximum": 9999999999.99,
            "minimum": -9999999999.99,
            "type": "number",
            "description": "Gets or sets the amount of a surcharge.",
            "format": "decimal",
            "nullable": true,
            "example": 10.25
          },
          "discountPercent": {
            "maximum": 999.99,
            "minimum": 0,
            "type": "number",
            "description": "Gets or sets discount in percent. If this value is specified, the discount amount must also be specified.",
            "format": "decimal",
            "nullable": true,
            "example": 1.25
          },
          "discountAmount": {
            "maximum": 9999999999.99,
            "minimum": -9999999999.99,
            "type": "number",
            "description": "Gets or sets the amount of a discount.",
            "format": "decimal",
            "nullable": true,
            "example": 10.25
          },
          "vatCode": {
            "maximum": 239999,
            "minimum": 230001,
            "type": "integer",
            "description": "Gets or sets c23 - Type of applied input tax.",
            "format": "int64",
            "nullable": true,
            "example": 230006
          },
          "vatRate": {
            "maximum": 999.99,
            "minimum": 0,
            "type": "number",
            "description": "Gets or sets input tax rate.",
            "format": "decimal",
            "nullable": true,
            "example": 19
          },
          "vatQuota": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets input tax quota.",
            "format": "int64",
            "nullable": true,
            "example": 100
          },
          "amountInInvoiceCurrency": {
            "type": "number",
            "description": "Gets or sets amount of position excluding input tax in invoice currency.",
            "format": "decimal",
            "nullable": true,
            "example": 2159.53
          },
          "amountInBalanceSheetCurrency": {
            "type": "number",
            "description": "Gets or sets amount of position excluding input tax in balance sheet currency.",
            "format": "decimal",
            "nullable": true,
            "example": 2159.53
          },
          "text": {
            "maxLength": 2000,
            "type": "string",
            "description": "Gets or sets text of the position.",
            "nullable": true,
            "example": "Transport costs"
          },
          "accountNo": {
            "maxLength": 10,
            "type": "string",
            "description": "Gets or sets identifier of the expense account.",
            "nullable": true,
            "example": "321.2"
          },
          "costCenterNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets cost center responsible for the order.",
            "nullable": true,
            "example": "2-563.7"
          },
          "costUnitNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets cost unit responsible for the order.",
            "nullable": true,
            "example": "6-7.25"
          },
          "orderNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets identifier of the accounting order for posting expense.",
            "nullable": true,
            "example": "20240315.02"
          },
          "salesChannelNo": {
            "maxLength": 3,
            "type": "string",
            "description": "Gets or sets the sale channel.",
            "nullable": true,
            "example": "449"
          },
          "assetNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets identifier of the asset the order is placed for.",
            "nullable": true,
            "example": "digger 254"
          },
          "costAllocationTypeCode": {
            "maximum": 24569999,
            "minimum": 24560001,
            "type": "integer",
            "description": "Gets or sets c2456 - Type of cost allocation code.\r\n\r\n24560001 - Allocation by amount\r\n\r\n24560002 - Allocation by quantity\r\n\r\n24560003 - Manual allocation.",
            "format": "int64",
            "nullable": true,
            "example": 24560003
          },
          "portionCosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseInvoicePositionPortionOfCosts"
            },
            "description": "Gets list of portion of cost for cost allocations.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a purchase invoice position."
      },
      "PurchaseInvoicePositionPortionOfCosts": {
        "required": [
          "allocationAmount"
        ],
        "type": "object",
        "properties": {
          "modifyUser": {
            "maxLength": 30,
            "type": "string",
            "description": "Gets user who last modified the entry.",
            "nullable": true,
            "readOnly": true,
            "example": "STJ"
          },
          "modifyDate": {
            "type": "string",
            "description": "Gets date the entry was last modified.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "invoicePositionPortionOfCostsId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets technical identification of the entry.",
            "format": "int64",
            "nullable": true,
            "example": 326479517
          },
          "goodsReceiptPositionId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets technical identification of the goods receipt position to which costs are allocated.",
            "format": "int64",
            "nullable": true,
            "example": 326479517
          },
          "invoicePositionNo": {
            "maximum": 9999.999,
            "minimum": 0,
            "type": "number",
            "description": "Gets or sets the invoice position number to which costs are allocated.\r\nItem to which the costs are allocated. Can be specified as an alternative to the goods receipt item.",
            "format": "decimal",
            "nullable": true,
            "example": 2.2
          },
          "allocationPercent": {
            "maximum": 999.99,
            "minimum": 0,
            "type": "number",
            "description": "Gets or sets allocation in percent.",
            "format": "decimal",
            "nullable": true,
            "example": 1.25
          },
          "allocationAmount": {
            "maximum": 999999999999.99,
            "minimum": -999999999999.99,
            "type": "number",
            "description": "Gets or sets the amount of a allocation.",
            "format": "decimal",
            "example": 10.25
          }
        },
        "additionalProperties": false,
        "description": "Represents a purchase invoice position cost allocation."
      },
      "PurchaseOrder": {
        "required": [
          "companyNo",
          "currency",
          "orderDate",
          "orderTypeCode",
          "origin",
          "purchaseOrderNo",
          "supplierId"
        ],
        "type": "object",
        "properties": {
          "changeId": {
            "type": "integer",
            "description": "Gets change identification of the entry.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "changeDate": {
            "type": "string",
            "description": "Gets change date of the entry.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "example": "2019-08-24T14:15:22Z"
          },
          "modifyUser": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "Gets user who last modified the entry.",
            "nullable": true,
            "readOnly": true,
            "example": "STJ"
          },
          "modifyDate": {
            "type": "string",
            "description": "Gets last modification date of the entry.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "purchaseOrderId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets technical identification of the entry.",
            "format": "int64",
            "nullable": true,
            "example": 322784
          },
          "orderTypeCode": {
            "maximum": 24509999,
            "minimum": 24500000,
            "type": "integer",
            "description": "Gets or sets c2450 - Type of the order.",
            "format": "int64",
            "example": 24500002
          },
          "orderDate": {
            "type": "string",
            "description": "Gets or sets date of the order.",
            "format": "date"
          },
          "companyNo": {
            "maximum": 999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets company identification of the entry.",
            "format": "int64",
            "example": 100
          },
          "purchaseOrderNo": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets purchase order number of the entry.",
            "example": "B24.1234"
          },
          "externalPurchseOrderId": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets external id of the entry - may be used instead of the technical identification.",
            "nullable": true,
            "example": "S-35-50932"
          },
          "origin": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Gets origin of the entry.",
            "readOnly": true,
            "example": "MYERP"
          },
          "supplierId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets id of the supplier of the entry.",
            "format": "int64",
            "example": 322784
          },
          "supplierNo": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets the supplier number of the purchase order.",
            "format": "int64"
          },
          "purchaseOrderTypeCode": {
            "maximum": 24629999,
            "minimum": 24620001,
            "type": "integer",
            "description": "Gets or sets c2462 - How was the order placed? Post, eMail,...",
            "format": "int64",
            "nullable": true,
            "example": 24620001
          },
          "purchaseOrderStateCode": {
            "maximum": 24529999,
            "minimum": 24520001,
            "type": "integer",
            "description": "Gets or sets c2452 - State of the order e.g. recorded, placed, partially delivered,...",
            "format": "int64",
            "nullable": true,
            "example": 24520002
          },
          "currency": {
            "maxLength": 3,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets currency ISO code.",
            "example": "CHF"
          },
          "exchangeRate": {
            "maximum": 99999999.999999,
            "type": "number",
            "description": "Gets or sets exchange rate used for purchase when not in balance sheet currency.",
            "format": "decimal",
            "nullable": true,
            "example": 0.954
          },
          "isPurchaseOrderSent": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the purchase order was been sent."
          },
          "purchaseOrderSendDate": {
            "type": "string",
            "description": "Gets or sets date the purchase order was sent.",
            "format": "date",
            "nullable": true,
            "example": "2024-03-01"
          },
          "deliveryDateRequested": {
            "type": "string",
            "description": "Gets or sets requested delivery date, if no confirmation, this is written to the delivery date.",
            "format": "date",
            "nullable": true,
            "example": "2024-03-15"
          },
          "deliveryDate": {
            "type": "string",
            "description": "Gets or sets confirmed delivery date. Equals requested delivery date if not confirmed.",
            "format": "date",
            "nullable": true,
            "example": "2024-03-17"
          },
          "priceDate": {
            "type": "string",
            "description": "Gets or sets date of the price information the purchase is based on.",
            "format": "date",
            "nullable": true,
            "example": "2024-02-25"
          },
          "orderConfirmationDateRequested": {
            "type": "string",
            "description": "Gets or sets date the supplier should confirm the order.",
            "format": "date",
            "nullable": true,
            "example": "2024-01-05"
          },
          "orderConfirmationDate": {
            "type": "string",
            "description": "Gets or sets date the order was confirmed.",
            "format": "date",
            "nullable": true,
            "example": "2024-01-05"
          },
          "orderConfirmationNo": {
            "maxLength": 40,
            "type": "string",
            "description": "Gets or sets order confirmation no from the supplier.",
            "nullable": true,
            "example": "A18.223232"
          },
          "warehouseId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets identifier of the warehouse.",
            "format": "int64",
            "nullable": true,
            "example": 2315
          },
          "storageAreaId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets identifier of the storage area.",
            "format": "int64",
            "nullable": true,
            "example": 231
          },
          "shippingAddressCode": {
            "maximum": 24649999,
            "minimum": 24640001,
            "type": "integer",
            "description": "Gets or sets c2464 - Where is the purchase delivered? (24640001 - pickup address, 24640002 - shipping address).",
            "format": "int64",
            "nullable": true,
            "example": 24640002
          },
          "shippingBusinessPartnerAddressId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique identifier of the shipping business partner address (Required for shippings).",
            "format": "int64",
            "nullable": true,
            "example": 3215
          },
          "pickupBusinessPartnerAddressId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique identifier of the pickup business partner address (Required for pickups).",
            "format": "int64",
            "nullable": true,
            "example": 3216
          },
          "pickupEmployeeBusinessPartnerId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique identifier of the contact person at the pickup address.",
            "format": "int64",
            "nullable": true,
            "example": 2345
          },
          "shippingTypeCode": {
            "maximum": 24639999,
            "minimum": 24630001,
            "type": "integer",
            "description": "Gets or sets c2463 - How is the purchase shipped? Pick up, lorry, post,...",
            "format": "int64",
            "nullable": true,
            "example": 24630010
          },
          "incoTermsCode": {
            "maximum": 24679999,
            "minimum": 24670001,
            "type": "integer",
            "description": "Gets or sets c2467 - Incoterms define the responsibilities of exporters and importers in the arrangement of shipments and the transfer of liability involved at various stages of the transaction.",
            "format": "int64",
            "nullable": true,
            "example": 24670002
          },
          "incoTermsLocation": {
            "maxLength": 50,
            "type": "string",
            "description": "Gets or sets location for the incoterms.",
            "nullable": true,
            "example": "Zürich"
          },
          "destinationDeliveryDateRequested": {
            "type": "string",
            "description": "Gets or sets requested destination delivery date, e.g. date of transfer of responsibility.",
            "format": "date",
            "nullable": true,
            "example": "2024-05-06"
          },
          "destinationDeliveryDate": {
            "type": "string",
            "description": "Gets or sets destination delivery date, e.g. date of transfer of responsibility.",
            "format": "date",
            "nullable": true,
            "example": "2024-05-05"
          },
          "ordererBusinessPartnerAddressId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique identifier of the business partner address of the orderer.",
            "format": "int64",
            "nullable": true,
            "example": 1394
          },
          "ordererEmployeeBusinessPartnerId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique identifier of the orderer.",
            "format": "int64",
            "nullable": true,
            "example": 3264
          },
          "supplierBusinessPartnerAddressId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique identifier of the supplier business partner address.",
            "format": "int64",
            "nullable": true,
            "example": 3215
          },
          "supplierEmployeeBusinessPartnerId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique identifier of the contact person at the supplier.",
            "format": "int64",
            "nullable": true,
            "example": 2345
          },
          "supplierNotes": {
            "maxLength": 2000,
            "type": "string",
            "description": "Gets or sets supplier related notes and remarks.",
            "nullable": true,
            "example": "Every year in early summer, the supplier runs a promotion on all metal goods. Internal task recorded in the info centre so that we can place a bulk order for screws and fasteners."
          },
          "ordererPersonnelNo": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets the personnel number of the orderer.",
            "format": "int64",
            "nullable": true
          },
          "internalRemarks": {
            "maxLength": 2000,
            "type": "string",
            "description": "Gets or sets internal remarks about the supplier.",
            "nullable": true,
            "example": "Promised delivery dates are never met."
          },
          "externalRemarks": {
            "maxLength": 2000,
            "type": "string",
            "description": "Gets or sets remarks added to the supplier order.",
            "nullable": true,
            "example": "Please let us know the delivery dates in more detail."
          },
          "openingText": {
            "maxLength": 4000,
            "type": "string",
            "description": "Gets or sets text opening the supplier order.",
            "nullable": true,
            "example": "You have received the following order. Please check the items and confirm the delivery by means of an order confirmation."
          },
          "footerText": {
            "maxLength": 4000,
            "type": "string",
            "description": "Gets or sets final remarks concerning the order put in the footer of the order.",
            "nullable": true,
            "example": "Please inform us of any price changes in writing at the e-mail address purchase@memor.ch. Thank you very much."
          },
          "attributeValueSet": {
            "$ref": "#/components/schemas/PurchaseAttributeValueSet"
          },
          "materialRequirementsPlanningGroupCode": {
            "maximum": 4029999,
            "minimum": 4020001,
            "type": "integer",
            "description": "Gets or sets c402 - Material requirements planning (MRP) group.",
            "format": "int64",
            "nullable": true,
            "example": 4020005
          },
          "reference": {
            "maxLength": 100,
            "type": "string",
            "description": "Gets or sets reference that helps reidentify the purchase.",
            "nullable": true,
            "example": "E24-26873-F3"
          },
          "originOrderNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets order number of the associated sales or production order.",
            "nullable": true,
            "example": "V24.1234"
          },
          "automaticCompletion": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the purchase order is automatically completed once it has been fully delivered and invoiced."
          },
          "sourcePurchaseOrderId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets technical identification of the source purchase order.\r\nIf Infosystem.Performis.WebApi.IF2Performis.Dtos.PurchaseOrder.OrderTypeCode equals 24500002, this is the original order.",
            "format": "int64",
            "nullable": true,
            "example": 322783
          },
          "sourcePurchaseOrderNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets purchase order number of the source purchase order.\r\nIf Infosystem.Performis.WebApi.IF2Performis.Dtos.PurchaseOrder.OrderTypeCode equals 24500002, this is the original order.",
            "nullable": true,
            "example": "B24.1233"
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PurchaseOrderPosition"
            },
            "description": "Gets positions.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a purchase order entry."
      },
      "PurchaseOrderPosition": {
        "required": [
          "isPrinted",
          "positionTypeCode"
        ],
        "type": "object",
        "properties": {
          "positionId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique id of the order position.",
            "format": "int64",
            "nullable": true,
            "example": 123456
          },
          "positionNo": {
            "maximum": 9999.999,
            "minimum": 0,
            "type": "number",
            "description": "Gets or sets item number. Format and conditions via company settings.",
            "format": "decimal",
            "nullable": true,
            "example": 2.2
          },
          "modifyUser": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets user who last modified the entry.",
            "nullable": true,
            "example": "STJ"
          },
          "modifyDate": {
            "type": "string",
            "description": "Gets or sets date the entry was last modified.",
            "format": "date-time",
            "nullable": true
          },
          "positionTypeCode": {
            "maximum": 24559999,
            "minimum": 24550001,
            "type": "integer",
            "description": "Gets or sets c2455 - Type of the position 1: article 2: amount 3: text.",
            "format": "int64",
            "example": 24550003
          },
          "articleId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique identifier of the article.",
            "format": "int64",
            "nullable": true,
            "example": 365972
          },
          "articleNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets article number for identification by the users.",
            "nullable": true
          },
          "text": {
            "maxLength": 2000,
            "type": "string",
            "description": "Gets or sets text of the position.",
            "nullable": true,
            "example": "WD-40"
          },
          "conversionFactorStockUnitDeliveryUnit": {
            "maximum": 9999999.999999,
            "minimum": 0,
            "type": "number",
            "description": "Gets or sets coefficient stock unit -> delivery unit.",
            "format": "decimal",
            "nullable": true,
            "example": 1
          },
          "conversionFactorDeliveryUnitStockUnit": {
            "maximum": 9999999.999999,
            "minimum": 0,
            "type": "number",
            "description": "Gets or sets coefficient delivery unit -> stock unit.",
            "format": "decimal",
            "nullable": true,
            "example": 1
          },
          "conversionFactorDeliveryUnitPriceUnit": {
            "maximum": 9999999.999999,
            "minimum": 0,
            "type": "number",
            "description": "Gets or sets coefficient delivery unit -> price unit.",
            "format": "decimal",
            "nullable": true,
            "example": 2
          },
          "conversionFactorPriceUnitDeliveryUnit": {
            "maximum": 9999999.999999,
            "minimum": 0,
            "type": "number",
            "description": "Gets or sets coefficient price unit -> delivery unit.",
            "format": "decimal",
            "nullable": true,
            "example": 0.5
          },
          "orderQuantityStockUnit": {
            "maximum": 9999999999.9999,
            "minimum": -9999999999.9999,
            "type": "number",
            "description": "Gets or sets order quantity in stock units.",
            "format": "decimal",
            "nullable": true,
            "example": 1000
          },
          "orderQuantityDeliverUnit": {
            "maximum": 9999999999.9999,
            "minimum": -9999999999.9999,
            "type": "number",
            "description": "Gets or sets order quantity in delivery units.",
            "format": "decimal",
            "nullable": true,
            "example": 100
          },
          "orderQuantityPriceUnit": {
            "maximum": 9999999999.9999,
            "minimum": -9999999999.9999,
            "type": "number",
            "description": "Gets or sets order quantity in price units.",
            "format": "decimal",
            "nullable": true,
            "example": 200
          },
          "deliveryUnitCode": {
            "maximum": 289999,
            "minimum": 280001,
            "type": "integer",
            "description": "Gets or sets c28 - Delivery unit code.",
            "format": "int64",
            "nullable": true,
            "example": 280005
          },
          "priceUnitCode": {
            "maximum": 289999,
            "minimum": 280001,
            "type": "integer",
            "description": "Gets or sets c28 - Price unit code.",
            "format": "int64",
            "nullable": true,
            "example": 280002
          },
          "priceTypeCode": {
            "maximum": 24589999,
            "minimum": 24580001,
            "type": "integer",
            "description": "Gets or sets c2458 - Pricetype 1: Normal price 2: Special offer price.",
            "format": "int64",
            "nullable": true,
            "example": 24580002
          },
          "price": {
            "maximum": 9999999999.9999,
            "minimum": 0,
            "type": "number",
            "description": "Gets or sets price per unit.",
            "format": "decimal",
            "nullable": true,
            "example": 2568.25
          },
          "isVatInPriceIncluded": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether vat is in price included."
          },
          "vatCode": {
            "maximum": 239999,
            "minimum": 230001,
            "type": "integer",
            "description": "Gets or sets c23 - Type of input tax (vat, input tax).",
            "format": "int64",
            "nullable": true,
            "example": 230006
          },
          "discountPercentage": {
            "maximum": 999.99,
            "minimum": 0,
            "type": "number",
            "description": "Gets or sets discount in percent.",
            "format": "decimal",
            "nullable": true,
            "example": 2.5
          },
          "surchargePercentage": {
            "maximum": 999.99,
            "minimum": 0,
            "type": "number",
            "description": "Gets or sets surcharge in percent.",
            "format": "decimal",
            "nullable": true,
            "example": 3.2
          },
          "discountAmount": {
            "type": "number",
            "description": "Gets or sets discount in money.",
            "format": "decimal",
            "nullable": true,
            "example": 3658.51
          },
          "surchargeAmount": {
            "type": "number",
            "description": "Gets or sets surcharge in money.",
            "format": "decimal",
            "nullable": true,
            "example": 5026.73
          },
          "warehouseId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets identifier of the warehouse - Overrides values in header.",
            "format": "int64",
            "nullable": true,
            "example": 2315
          },
          "storageAreaId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets identifier of the storage location - Overrides values in header.",
            "format": "int64",
            "nullable": true,
            "example": 231
          },
          "shippingTypeCode": {
            "maximum": 24639999,
            "minimum": 24630001,
            "type": "integer",
            "description": "Gets or sets c2463 - How is the purchase delivered? Pick up, lorry, post,...  - Overrides values in header.",
            "format": "int64",
            "nullable": true,
            "example": 24630005
          },
          "priceOriginCode": {
            "maximum": 24599999,
            "minimum": 24590001,
            "type": "integer",
            "description": "Gets or sets c2459 - Origin of the price information 1: Set manually 2: Supplier article price 3: Supplier article scale price 4: Current materials purchase price.",
            "format": "int64",
            "nullable": true,
            "example": 24590002
          },
          "accountNo": {
            "maxLength": 10,
            "type": "string",
            "description": "Gets or sets identifier of the expense account.",
            "nullable": true,
            "example": "321.2"
          },
          "assetNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets identifier of the asset the order is placed for.",
            "nullable": true,
            "example": "digger 254"
          },
          "costCenterNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets cost center responsible for the order.",
            "nullable": true,
            "example": "2-563.7"
          },
          "costUnitNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets cost unit responsible for the order.",
            "nullable": true,
            "example": "6-7.25"
          },
          "salesChannelNo": {
            "maxLength": 3,
            "type": "string",
            "description": "Gets or sets identifies the sale channel.",
            "nullable": true,
            "example": "449"
          },
          "orderNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets identifier of the accounting order for posting expense.",
            "nullable": true,
            "example": "20240315.02"
          },
          "attributeValueSet": {
            "$ref": "#/components/schemas/PurchaseAttributeValueSet"
          },
          "deliveryDateRequested": {
            "type": "string",
            "description": "Gets or sets requested delivery date, if no confirmation, this is written to the delivery date. - Overrides value from the header.",
            "format": "date",
            "nullable": true,
            "example": "2024-04-21"
          },
          "deliveryDate": {
            "type": "string",
            "description": "Gets or sets confirmed delivery date. Equals requested delivery date if not confirmed. - Overrides value from the header.",
            "format": "date",
            "nullable": true,
            "example": "2024-04-30"
          },
          "destinationDeliveryDateRequested": {
            "type": "string",
            "description": "Gets or sets requested destination delivery date, e.g. date of transfer of responsibility. - Overrides value from the header.",
            "format": "date",
            "nullable": true,
            "example": "2024-04-21"
          },
          "destinationDeliveryDate": {
            "type": "string",
            "description": "Gets or sets destination delivery date, e.g. date of transfer of responsibility. - Overrides value from the header.",
            "format": "date",
            "nullable": true,
            "example": "2024-04-30"
          },
          "countryOfOrigin": {
            "maxLength": 2,
            "type": "string",
            "description": "Gets or sets ISO code of country of origin.",
            "nullable": true,
            "example": "CN"
          },
          "tariffCode": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets c28 - Customs tariff number.",
            "nullable": true,
            "example": "12412"
          },
          "orderConfirmationDate": {
            "type": "string",
            "description": "Gets or sets date the order was confirmed. - Overrides value from the header.",
            "format": "date",
            "nullable": true,
            "example": "2024-01-05"
          },
          "orderConfirmationNo": {
            "maxLength": 40,
            "type": "string",
            "description": "Gets or sets order confirmation no from the supplier. - Overrides value from the header.",
            "nullable": true,
            "example": "A23.98709"
          },
          "orderConfirmationDateRequested": {
            "type": "string",
            "description": "Gets or sets date the supplier should confirm the order. - Overrides value from the header.",
            "format": "date",
            "nullable": true,
            "example": "2024-05-04"
          },
          "isFullyCharged": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the purchase position has been fully charged or whether it is still partially open."
          },
          "netAmount": {
            "type": "number",
            "description": "Gets or sets net amount (gross - tax) of the order position.",
            "format": "decimal",
            "nullable": true,
            "example": 2159.53
          },
          "grossAmount": {
            "type": "number",
            "description": "Gets or sets total cost of order position.",
            "format": "decimal",
            "nullable": true,
            "example": 2436.85
          },
          "vatAmount": {
            "type": "number",
            "description": "Gets or sets amount of taxes for the order position.",
            "format": "decimal",
            "nullable": true,
            "example": 277.32
          },
          "isPrinted": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether an item is printed on the order document or not."
          }
        },
        "additionalProperties": false,
        "description": "Represents a purchase order position."
      },
      "PurchaseSupplier": {
        "required": [
          "active",
          "automaticCompletion",
          "currency",
          "deliveryDays",
          "invoiceBusinessPartnerAddressId",
          "origin",
          "paymentTermsCode",
          "printPrices",
          "supplierCategoryCode",
          "supplierId",
          "supplierNo"
        ],
        "type": "object",
        "properties": {
          "changeId": {
            "type": "integer",
            "description": "Gets change identification of the entry.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "changeDate": {
            "type": "string",
            "description": "Gets change date of the entry.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "active": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this entry is active or not."
          },
          "modifyUser": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "Gets user who last modified the entry.",
            "nullable": true,
            "readOnly": true
          },
          "modifyDate": {
            "type": "string",
            "description": "Gets date the entry was last modified.",
            "format": "date-time",
            "readOnly": true
          },
          "supplierId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets technical identification of the entry.",
            "format": "int64"
          },
          "businessPartnerAddressId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets business partner address id of the entry.",
            "format": "int64"
          },
          "externalSupplierId": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets external id of the entry - may be used instead of the technical identification.",
            "nullable": true
          },
          "origin": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets origin of the entry."
          },
          "companyNo": {
            "maximum": 999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets company identification of the entry.",
            "format": "int64",
            "nullable": true
          },
          "supplierNo": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets supplier number of the entry.",
            "format": "int64"
          },
          "isLocked": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether supplier is locked for purchasing."
          },
          "supplierCategoryCode": {
            "maximum": 24659999,
            "minimum": 24650001,
            "type": "integer",
            "description": "Gets or sets c2465 - Category of the supplier.",
            "format": "int64"
          },
          "supplierRatingCode": {
            "maximum": 24669999,
            "minimum": 24660001,
            "type": "integer",
            "description": "Gets or sets c2466 - User code to set the rating of the supplier.",
            "format": "int64",
            "nullable": true
          },
          "ourCustomerNo": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets our customer identification with the supplier.",
            "nullable": true
          },
          "paymentTermsCode": {
            "maximum": 279999,
            "minimum": 270001,
            "type": "integer",
            "description": "Gets or sets c27 - Payment terms with the supplier.",
            "format": "int64"
          },
          "printoutCopyQuantity": {
            "maximum": 99,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets quantity of the purchase order printout copies.",
            "format": "int64",
            "nullable": true
          },
          "printPrices": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the purchase prices are shown on the purchase order document."
          },
          "orderChannelCode": {
            "maximum": 24629999,
            "minimum": 24620001,
            "type": "integer",
            "description": "Gets or sets c2462 - Order channel, how to order from this supplier e.g. by post,by email, by telephone, by fax, by internet.",
            "format": "int64",
            "nullable": true
          },
          "confirmationPeriod": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets number of days until an order confirmation is expected.",
            "format": "int64",
            "nullable": true
          },
          "reminderConfirmationPeriod": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets number of days until a reminder is generated for order confirmation - after confirmation period.",
            "format": "int64",
            "nullable": true
          },
          "reminderDeliveryPeriod": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets number of days until a reminder is generated for a missed delivery.",
            "format": "int64",
            "nullable": true
          },
          "currency": {
            "maxLength": 3,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets currency ISO code."
          },
          "landedCostsInPercentage": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "description": "Gets or sets landed costs are additional charges or costs incurred for the purchase order.",
            "format": "decimal"
          },
          "vatCode": {
            "maximum": 239999,
            "minimum": 230001,
            "type": "integer",
            "description": "Gets or sets default input tax applied for the suppliers invoices.",
            "format": "int64",
            "nullable": true
          },
          "freightTypeCode": {
            "maximum": 24639999,
            "minimum": 24630001,
            "type": "integer",
            "description": "Gets or sets c2463 - Freight type e.g. lorry, post, truck, courier, collection etc.",
            "format": "int64",
            "nullable": true
          },
          "incoTermsCode": {
            "maximum": 24679999,
            "minimum": 24670001,
            "type": "integer",
            "description": "Gets or sets c2467 - Incoterms define the responsibilities of exporters and importers in the arrangement of shipments and the transfer of liability involved at various stages of the transaction.",
            "format": "int64",
            "nullable": true
          },
          "incoTermsLocation": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets location for the incoterms.",
            "nullable": true
          },
          "deliveryDuration": {
            "maximum": 9999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets delivery time for order proposal calculations and warning in the order programme (e.g. 5 days delivery time no longer works for tomorrow) Specification in whole days.",
            "format": "int64",
            "nullable": true
          },
          "deliveryDays": {
            "maxLength": 7,
            "minLength": 7,
            "type": "string",
            "description": "Gets or sets delivery days from dropdown box (multiselect) for delivery date proposal, default Monday - Friday checked. Bitmap, starting with Monday (1st digit) 0=not selected, 1=selected."
          },
          "invoiceBusinessPartnerAddressId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets business partner address id for invoicing.",
            "format": "int64"
          },
          "pickupBusinessPartnerAddressId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets business partner address id for pickup.",
            "format": "int64",
            "nullable": true
          },
          "notes": {
            "maxLength": 2000,
            "type": "string",
            "description": "Gets or sets supplier related notes and remarks.",
            "nullable": true
          },
          "automaticCompletion": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether purchase orders with this supplier have automatic completion per default."
          },
          "attributeValueSet": {
            "$ref": "#/components/schemas/PurchaseAttributeValueSet"
          }
        },
        "additionalProperties": false,
        "description": "Represents a supplier entry."
      },
      "ReceivablesPaymentStatus": {
        "required": [
          "openAmount"
        ],
        "type": "object",
        "properties": {
          "changeId": {
            "type": "integer",
            "description": "Gets change identification of the entry.",
            "format": "int64",
            "nullable": true,
            "readOnly": true,
            "example": 378197
          },
          "changeDate": {
            "type": "string",
            "description": "Gets change date of the entry.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true,
            "example": "2019-08-24T14:15:22Z"
          },
          "modifyUser": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "Gets user who last modified the entry.",
            "nullable": true,
            "readOnly": true,
            "example": "STJ"
          },
          "modifyDate": {
            "type": "string",
            "description": "Gets date the entry was last modified.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "companyNo": {
            "maximum": 999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets company identification of the entry.",
            "format": "int64",
            "nullable": true,
            "example": 100
          },
          "voucherType": {
            "maxLength": 4,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets type of voucher e.g. 'FA' for invoice.",
            "nullable": true,
            "example": "FA"
          },
          "voucherNo": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets voucher number of the receivable.",
            "format": "int64",
            "nullable": true,
            "example": 322784
          },
          "lineNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets line number of the receivable within the voucher.",
            "format": "int64",
            "nullable": true,
            "example": 1
          },
          "openItemId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique open item identifier of receivable.",
            "format": "int64",
            "nullable": true,
            "example": 322784
          },
          "financialInterfaceId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets unique identifier of the voucher.",
            "format": "int64",
            "nullable": true,
            "example": 322784
          },
          "totalAmount": {
            "maximum": 99999999.99,
            "minimum": -99999999.99,
            "type": "number",
            "description": "Gets or sets total amount of the receivable.",
            "format": "decimal",
            "nullable": true,
            "example": 108.1
          },
          "openAmount": {
            "maximum": 99999999.99,
            "minimum": -99999999.99,
            "type": "number",
            "description": "Gets or sets amount still open. If value is 0, the receivable is fully settled.",
            "format": "decimal",
            "example": 108.1
          },
          "openItemCriterion1": {
            "maximum": 99999999,
            "minimum": 10000,
            "type": "integer",
            "description": "Gets or sets open item criterion - used to categorise open items.",
            "format": "int64",
            "nullable": true,
            "example": 63700001
          },
          "openItemCriterion2": {
            "maximum": 99999999,
            "minimum": 10000,
            "type": "integer",
            "description": "Gets or sets open item criterion - used to categorise open items.",
            "format": "int64",
            "nullable": true,
            "example": 12340001
          },
          "openItemCriterion3": {
            "maximum": 99999999,
            "minimum": 10000,
            "type": "integer",
            "description": "Gets or sets open item criterion - used to categorise open items.",
            "format": "int64",
            "nullable": true,
            "example": 45670001
          },
          "openItemCriterion4": {
            "maximum": 99999999,
            "minimum": 10000,
            "type": "integer",
            "description": "Gets or sets open item criterion - used to categorise open items.",
            "format": "int64",
            "nullable": true,
            "example": 12380001
          }
        },
        "additionalProperties": false,
        "description": "Information about the payment status of an open item."
      },
      "ServiceRecordingAbsence": {
        "required": [
          "absenceTypeId",
          "companyNo",
          "hours"
        ],
        "type": "object",
        "properties": {
          "changeId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets change identification of the entry.",
            "format": "int64",
            "nullable": true,
            "readOnly": true,
            "example": 322784
          },
          "changeDate": {
            "type": "string",
            "description": "Gets change date of the entry.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "absenceId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets technical identification of the entry.",
            "format": "int64",
            "nullable": true,
            "example": 665588
          },
          "serviceProviderDayId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets identification of the service provider day.",
            "format": "int64",
            "nullable": true,
            "example": 3269
          },
          "serviceProviderId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets identification of the service provider.",
            "format": "int64",
            "nullable": true,
            "example": 8715
          },
          "absenceDate": {
            "type": "string",
            "description": "Gets or sets date of the absence.",
            "format": "date",
            "nullable": true,
            "example": "2023-12-24"
          },
          "absenceTypeId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets identification of the absence type.",
            "format": "int64",
            "example": 3269
          },
          "hours": {
            "type": "number",
            "description": "Gets or sets duration of absence in hours.",
            "format": "decimal",
            "example": 8
          },
          "timeFrom": {
            "type": "string",
            "description": "Gets or sets start of absence.",
            "format": "date-time",
            "nullable": true,
            "example": "2023-02-25 08:00:00"
          },
          "timeUntil": {
            "type": "string",
            "description": "Gets or sets end of absence.",
            "format": "date-time",
            "nullable": true,
            "example": "2023-02-25 17:00:00"
          },
          "companyNo": {
            "maximum": 999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets company identification of the entry.",
            "format": "int64",
            "example": 25
          },
          "personnelNo": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets personnel number of the employee.",
            "nullable": true,
            "example": "1258"
          },
          "timePeriodCode": {
            "maximum": 5759999,
            "minimum": 5750001,
            "type": "integer",
            "description": "Gets or sets c575 - Predefined time periods\r\n\r\n5750020 - Entire day\r\n\r\n5750040 - Morning\r\n\r\n5750060 - Afternoon.",
            "format": "int64",
            "nullable": true,
            "example": 5750020
          },
          "absenceRequestId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets the identification for this absence request.",
            "format": "int64",
            "nullable": true,
            "example": 69874
          },
          "isLocked": {
            "type": "boolean",
            "description": "Gets or sets this absence is locked for changes in performis UI.",
            "nullable": true
          },
          "isApproved": {
            "type": "boolean",
            "description": "Gets a value indicating whether this absence is approved.",
            "readOnly": true
          },
          "origin": {
            "maxLength": 200,
            "type": "string",
            "description": "Gets the system of origin.",
            "nullable": true,
            "readOnly": true,
            "example": "20"
          },
          "originId": {
            "maxLength": 200,
            "type": "string",
            "description": "Gets or sets id in the system of origin.",
            "nullable": true,
            "example": "1023789456"
          }
        },
        "additionalProperties": false,
        "description": "Represents an absence entry."
      },
      "ServiceRecordingAllowance": {
        "required": [
          "allowanceDefinitionId",
          "apply",
          "companyNo",
          "exclude"
        ],
        "type": "object",
        "properties": {
          "changeId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets change identification of the entry.",
            "format": "int64",
            "nullable": true,
            "readOnly": true,
            "example": 369852147
          },
          "changeDate": {
            "type": "string",
            "description": "Gets change date of the entry.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "allowanceId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets identification of the allowance.",
            "format": "int64",
            "nullable": true,
            "example": 26873
          },
          "serviceProviderDayId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets identification of the service provider day.",
            "format": "int64",
            "nullable": true,
            "example": 36874
          },
          "serviceProviderId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets identification of the service provider.",
            "format": "int64",
            "nullable": true,
            "example": 555
          },
          "personnelNo": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets personnel number of the employee.",
            "nullable": true,
            "example": "1258"
          },
          "allowanceDate": {
            "type": "string",
            "description": "Gets or sets date of the allowance.",
            "format": "date",
            "nullable": true,
            "example": "2024-05-15"
          },
          "allowanceDefinitionId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets identification of the allowance definition.",
            "format": "int64",
            "example": 15795
          },
          "baseValue": {
            "type": "number",
            "description": "Gets or sets base value for the calculation.",
            "format": "decimal",
            "nullable": true,
            "example": 8.33333
          },
          "percentage": {
            "maximum": 999.99,
            "minimum": 0,
            "type": "number",
            "description": "Gets or sets percentage rate for the calculation.",
            "format": "decimal",
            "nullable": true,
            "example": 50
          },
          "amount": {
            "maximum": 10000000000,
            "minimum": 0,
            "type": "number",
            "description": "Gets or sets amount of the allowance.",
            "format": "decimal",
            "nullable": true,
            "example": 4.25
          },
          "apply": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the allowance will be applied or not."
          },
          "exclude": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the allowance is excluded from use."
          },
          "isLocked": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the allowance is locked for changes in performis UI.",
            "nullable": true
          },
          "companyNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets company identification of the entry.",
            "format": "int64",
            "example": 25
          },
          "orderNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets order identifier.",
            "nullable": true,
            "example": "K-658-55"
          },
          "costCenterNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets cost center identifier.",
            "nullable": true,
            "example": "C-222"
          },
          "isApproved": {
            "type": "boolean",
            "description": "Gets a value indicating whether this allowance is approved.",
            "readOnly": true
          },
          "origin": {
            "maxLength": 200,
            "type": "string",
            "description": "Gets the system of origin.",
            "nullable": true,
            "readOnly": true,
            "example": "B_HTR"
          },
          "originId": {
            "maxLength": 200,
            "type": "string",
            "description": "Gets or sets id in the system of origin.",
            "nullable": true,
            "example": "319"
          }
        },
        "additionalProperties": false,
        "description": "Represents an allowance entry."
      },
      "ServiceRecordingPresenceTime": {
        "required": [
          "companyNo",
          "hours",
          "isLocked",
          "originId",
          "personnelNo",
          "presenceDate",
          "timeFrom"
        ],
        "type": "object",
        "properties": {
          "changeId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets change identification of the entity.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "changeDate": {
            "type": "string",
            "description": "Gets change date of the entity.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "presenceTimeId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets unique identifier of the presence time dataset.",
            "format": "int64",
            "nullable": true
          },
          "companyNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets the company number identifies the customer via the corresponding number in the mandate system.",
            "format": "int64"
          },
          "serviceProviderId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets id of the \"Leistungsträger\".",
            "format": "int64",
            "nullable": true
          },
          "serviceProviderDayId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets identifier to the \"Leistungsträger-Tag\".",
            "format": "int64",
            "nullable": true
          },
          "personnelNo": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets personnel number of the employee.",
            "nullable": true
          },
          "presenceDate": {
            "type": "string",
            "description": "Gets or sets date of presence.",
            "format": "date"
          },
          "hours": {
            "type": "number",
            "description": "Gets or sets hours the service provider was present.",
            "format": "double"
          },
          "timeFrom": {
            "type": "string",
            "description": "Gets or sets time the service provider started work.",
            "format": "time"
          },
          "timeUntil": {
            "type": "string",
            "description": "Gets or sets time the service provider ended work.",
            "format": "time",
            "nullable": true
          },
          "isLocked": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the presence time record is locked for all but the origin system."
          },
          "isApproved": {
            "type": "boolean",
            "description": "Gets a value indicating whether this presence time is approved.",
            "readOnly": true
          },
          "origin": {
            "maxLength": 10,
            "type": "string",
            "description": "Gets the system of origin.",
            "nullable": true,
            "readOnly": true
          },
          "originId": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets id in the system of origin."
          }
        },
        "additionalProperties": false,
        "description": "Represents a presence time entry."
      },
      "ServiceRecordingServiceProvider": {
        "required": [
          "active",
          "companyNo",
          "description",
          "serviceProviderId",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "changeId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets change identification of the entry.",
            "format": "int64",
            "nullable": true,
            "readOnly": true,
            "example": 5214698741
          },
          "changeDate": {
            "type": "string",
            "description": "Gets change date of the entry.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "serviceProviderId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets id of the service provider.",
            "format": "int64",
            "example": 1265
          },
          "active": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this entry is active or not."
          },
          "companyNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets the company number identifies the customer via the corresponding number in the mandate system.",
            "format": "int64",
            "example": 20
          },
          "shortDescription": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets short identifier/abbreviation/acronym of the service provider.",
            "example": "MAU"
          },
          "description": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Gets or sets full description / Name of the service provider.",
            "example": "Martin Urfer"
          },
          "externalId": {
            "maxLength": 50,
            "type": "string",
            "description": "Gets or sets identification in an external system e.g. the card ID from a locking system can be included here. It is not the identification from the system of origin.",
            "nullable": true,
            "example": "C47C97C0F4B04096855955CB5AD47444"
          },
          "function": {
            "maxLength": 50,
            "type": "string",
            "description": "Gets or sets function, position or title of the service provider.",
            "nullable": true,
            "example": "Leiter Informatik"
          },
          "serviceProviderTypeCode": {
            "maximum": 2869999,
            "minimum": 2860001,
            "type": "integer",
            "description": "Gets or sets c286 - Type of the service provider\r\n\r\n1 - Mitarbeiter - Employees\r\n\r\n2 - Maschinen   - Machines\r\n\r\n3 - Kleingeräte - Small devices\r\n\r\n5 - Allgemein   - Universal.",
            "format": "int64",
            "nullable": true,
            "example": 2860003
          },
          "department": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets department the service provider is assigned to.",
            "nullable": true,
            "example": "Werkstatt"
          },
          "defaultServiceTypeId": {
            "type": "integer",
            "description": "Gets or sets default service type id of the service provider .",
            "format": "int64",
            "nullable": true,
            "example": 295676
          },
          "employeeId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets the employee in BAF.",
            "format": "int64",
            "nullable": true,
            "example": 1284
          },
          "origin": {
            "maxLength": 200,
            "type": "string",
            "description": "Gets the system of origin.",
            "nullable": true,
            "readOnly": true,
            "example": "25"
          },
          "originId": {
            "maxLength": 200,
            "type": "string",
            "description": "Gets or sets id in the system of origin.",
            "nullable": true,
            "example": "1023-7894-56"
          }
        },
        "additionalProperties": false,
        "description": "Represents a service provider entry."
      },
      "ServiceRecordingServiceRecord": {
        "required": [
          "companyNo",
          "quantity",
          "serviceTypeId"
        ],
        "type": "object",
        "properties": {
          "changeId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets change identification of the entry.",
            "format": "int64",
            "nullable": true,
            "readOnly": true,
            "example": 8971239429
          },
          "changeDate": {
            "type": "string",
            "description": "Gets change date of the entry.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "serviceRecordId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets technical identification of the entry.",
            "format": "int64",
            "nullable": true,
            "example": 326479517
          },
          "companyNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "Gets or sets company identification of the entry.",
            "format": "int64",
            "example": 37
          },
          "serviceProviderId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets identification of the service provider.",
            "format": "int64",
            "nullable": true,
            "example": 3366
          },
          "personnelNo": {
            "maxLength": 50,
            "type": "string",
            "description": "Gets or sets personnel number of the employee.",
            "nullable": true,
            "example": "3366"
          },
          "serviceRecordDate": {
            "type": "string",
            "description": "Gets or sets day on which the service was provided.",
            "format": "date",
            "nullable": true,
            "example": "2023-09-22"
          },
          "serviceTypeId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets identification of the service type.",
            "format": "int64",
            "example": 697
          },
          "serviceProviderDayId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets identification of the service provider day.",
            "format": "int64",
            "nullable": true,
            "example": 3698521470
          },
          "costCenterNo": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "Gets or sets cost center identifier.",
            "nullable": true,
            "example": "C68"
          },
          "costUnitNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets cost unit identifier.",
            "nullable": true,
            "example": "K-68"
          },
          "orderNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Gets or sets order identifier.",
            "nullable": true,
            "example": "E-3654.12"
          },
          "period": {
            "maximum": 999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets accounting period of the entry. Format YYYYMM (e.g. 202401).",
            "format": "int64",
            "nullable": true,
            "example": 202010
          },
          "text": {
            "maxLength": 240,
            "type": "string",
            "description": "Gets or sets description of the work done.",
            "nullable": true,
            "example": "Stahlträger montieren"
          },
          "quantity": {
            "type": "number",
            "description": "Gets or sets the amount of work performed. The unit depends on the type of service.",
            "format": "decimal",
            "example": 4
          },
          "timeFrom": {
            "type": "string",
            "description": "Gets or sets work start time.",
            "format": "time",
            "nullable": true,
            "example": "08:00:00"
          },
          "timeUntil": {
            "type": "string",
            "description": "Gets or sets work end time.",
            "format": "time",
            "nullable": true,
            "example": "12:45:00"
          },
          "serviceRecordStatusCode": {
            "type": "integer",
            "description": "Gets c291 - State of the service entry\r\n\r\n2910010 - Provisional              - Provisorisch\r\n\r\n2910020 - Recorded                 - Erfasst\r\n\r\n2910025 - Not ready for billing    - Nicht verrechnungsbereit\r\n\r\n2910030 - Ready for billing        - Verrechnungsbereit\r\n\r\n2910040 - Billed                   - Verrechnet\r\n\r\n2910045 - No billing               - Keine Verrechnung.",
            "format": "int64",
            "readOnly": true,
            "example": 2910020
          },
          "activityCode": {
            "maximum": 2909999,
            "minimum": 2900001,
            "type": "integer",
            "description": "Gets or sets c290 - Activity.",
            "format": "int64",
            "nullable": true
          },
          "isLocked": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the service record is locked for changes in performis UI.",
            "nullable": true
          },
          "machineServiceProviderDayId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Gets or sets for machine service records only. Identification of the service provider day of the machine operator (person).",
            "format": "int64",
            "nullable": true,
            "example": 842697135
          },
          "serviceRecordGuid": {
            "type": "string",
            "description": "Gets or sets globally Unique Identifier of the service record. Is set automatically if not specified.",
            "format": "uuid",
            "nullable": true,
            "example": "196f85a1-d8f6-4cb3-a7c1-4961d379af57"
          },
          "noCaccPosting": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the service record will not be posted to cost accounting.",
            "nullable": true
          },
          "isApproved": {
            "type": "boolean",
            "description": "Gets a value indicating whether this service record is approved.",
            "readOnly": true
          },
          "origin": {
            "maxLength": 200,
            "type": "string",
            "description": "Gets the system of origin.",
            "nullable": true,
            "readOnly": true,
            "example": "B_HTR"
          },
          "originId": {
            "maxLength": 200,
            "type": "string",
            "description": "Gets or sets id in the system of origin.",
            "nullable": true,
            "example": "319"
          },
          "originStatusCode": {
            "maximum": 5779999,
            "minimum": 5770001,
            "type": "integer",
            "description": "Gets or sets c577 - Status of the origin\r\n\r\n5770100 - not approved       - nicht freigegeben\r\n\r\n5770200 - partially approved - teilweise freigegeben\r\n\r\n5770500 - approved           - freigegeben.",
            "format": "int64",
            "nullable": true,
            "example": 5770100
          }
        },
        "additionalProperties": false,
        "description": "Represents a service record entry."
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Please enter a valid token",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}