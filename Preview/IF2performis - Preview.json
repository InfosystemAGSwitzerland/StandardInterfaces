{
  "openapi": "3.0.1",
  "info": {
    "title": "IF2performis",
    "version": "v3",
    "contact": {
      "name": "Infosystem AG",
      "email": "support@infosystem.ch",
      "url": "https://www.infosystem.ch"
    },
    "description": "IF2performis Rest API"
  },
  "servers": [],
  "paths": {
    "/api/v3/service-recording/service-provider-days": {
      "get": {
        "summary": "Searches for service provider days and all additional information (if requested)",
        "tags": [
          "ServiceRecording"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "serviceProviderDays": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/serviceRecordingServiceProviderDay"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "getServiceProviderDays",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          },
          {
            "name": "searchString",
            "in": "query",
            "description": "Optional search string for looking up a record within name and searchterm fields.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries  to skip  for pagination.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries since the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries since the specified change id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "servicePerformanceDay",
            "description": "Date the service was performed."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 50,
              "minLength": 1
            },
            "in": "query",
            "name": "personnelNo",
            "description": "Id of the performing unit in the external system - Is only unique togehter with the companyNo."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 999999,
              "minimum": 1
            },
            "in": "query",
            "name": "companyNo",
            "description": "The CompanyNo identifies the customer via the corresponding number in the mandate system."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "includeDetails",
            "description": "If set to true the service provider day is returned with all related additional information."
          }
        ],
        "description": "Returns a service provider day and all related information  (if requested)."
      },
      "parameters": []
    },
    "/api/v3/service-recording/service-records": {
      "get": {
        "summary": "Searches for service records",
        "tags": [
          "ServiceRecording"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/serviceRecordingServiceRecord"
                  }
                },
                "examples": {}
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "getServiceRecords",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          },
          {
            "name": "searchString",
            "in": "query",
            "description": "Optional search string for looking up a record within name and searchterm fields.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries  to skip  for pagination.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries since the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries since the specified change id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1234567890,
              "minimum": 0,
              "maximum": 9999999999
            },
            "in": "query",
            "name": "serviceProviderDayId",
            "description": "Key to fetch all services from the given day/performance/performing unit."
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "serviceProviderDay",
            "description": "Date the service was performed."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 50,
              "minLength": 1
            },
            "in": "query",
            "name": "personnelNo",
            "description": "Id of the performing unit in the external system - Is only unique togehter with the companyNo."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 999999,
              "minimum": 1
            },
            "in": "query",
            "name": "companyNo",
            "description": "The CompanyNo identifies the customer via the corresponding number in the mandate system."
          }
        ],
        "description": "Returns all matching service records."
      },
      "put": {
        "summary": "Updates an existing service record if internal or external Id match.\nCreates a service record if neither internal or external Id is provided or no matching record could be found.",
        "operationId": "putServiceRecords",
        "tags": [
          "ServiceRecording"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/serviceRecordingServiceRecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Requesting-System",
            "description": "Identifying the system calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Requesting-User",
            "description": "Identifying the user calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Flow-ID",
            "description": "Optional technical Id (GUID) for call identification."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          }
        ],
        "description": "Updates an existing service record if internal or external Id match.\nCreates a service record if neither internal or external Id is provided or no matching record could be found.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/serviceRecordingServiceRecord"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes a service record",
        "operationId": "deleteServiceRecords",
        "tags": [
          "ServiceRecording"
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "404": {
            "description": "No Record found"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Requesting-System",
            "description": "Identifying the system calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Requesting-User",
            "description": "Identifying the user calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Flow-ID",
            "description": "Optional technical Id (GUID) for call identification."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Id of the service.",
            "name": "servideRecordId"
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 10,
              "example": "B_HTR"
            },
            "in": "query",
            "name": "origin",
            "description": "The system of origin."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 50,
              "example": "319"
            },
            "in": "query",
            "name": "originId",
            "description": "Id of the system of origin."
          }
        ],
        "description": "Deletes a service record."
      },
      "parameters": []
    },
    "/api/v3/master-data/service-recording/allowance-definitions": {
      "get": {
        "summary": "Searches for allowance definitions",
        "tags": [
          "MasterData"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/serviceRecordingallowanceDefinition"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "getAllowanceDefinitions",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          },
          {
            "name": "searchString",
            "in": "query",
            "description": "Optional search string for looking up a record within name and searchterm fields.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries  to skip  for pagination.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries since the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries since the specified change id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 999999,
              "minimum": 1
            },
            "in": "query",
            "name": "companyNo",
            "description": "The CompanyNo identifies the customer via the corresponding number in the mandate system."
          }
        ],
        "description": "Returns all matching allowance definitions."
      },
      "parameters": []
    },
    "/api/v3/service-recording/presence-times": {
      "get": {
        "summary": "Search presence times",
        "tags": [
          "ServiceRecording"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/serviceRecordingPresenceTime"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "getPresenceTimes",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          },
          {
            "name": "searchString",
            "in": "query",
            "description": "Optional search string for looking up a record within name and searchterm fields.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries  to skip  for pagination.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries since the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries since the specified change id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1234567890,
              "minimum": 0,
              "maximum": 9999999999
            },
            "in": "query",
            "name": "serviceProviderDayId",
            "description": "Key to fetch all presence times from the given day/performance/performing unit."
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "servicePerformanceDay",
            "description": "Date the service was performed."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 50,
              "minLength": 1
            },
            "in": "query",
            "name": "personnelNo",
            "description": "Id of the performing unit in the external system - Is only unique togehter with the companyNo."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 999999,
              "minimum": 1
            },
            "in": "query",
            "name": "companyNo",
            "description": "The CompanyNo identifies the customer via the corresponding number in the mandate system."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0,
              "maximum": 9999999999,
              "example": 1234567890
            },
            "in": "query",
            "name": "serviceProviderId",
            "description": "Id of the service provider."
          }
        ],
        "description": "Returns all matching presence times."
      },
      "put": {
        "summary": "Updates an existing presence time if internal or external Id match.\nCreates a presence time if neither internal or external Id is provided or no matching record could be found.",
        "operationId": "putPresenceTimes",
        "tags": [
          "ServiceRecording"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/serviceRecordingPresenceTime"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Requesting-System",
            "description": "Identifying the system calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Requesting-User",
            "description": "Identifying the user calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Flow-ID",
            "description": "Optional technical Id (GUID) for call identification."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          }
        ],
        "description": "Updates an existing presence time if internal or external Id match.\nCreates a presence time if neither internal or external Id is provided or no matching record could be found.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/serviceRecordingPresenceTime"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes a presence time",
        "operationId": "deletePresenceTimes",
        "tags": [
          "ServiceRecording"
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "404": {
            "description": "No Record found"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Requesting-System",
            "description": "Identifying the system calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Requesting-User",
            "description": "Identifying the user calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Flow-ID",
            "description": "Optional technical Id (GUID) for call identification."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "presenceTimeId",
            "description": "Unique identifier of the presence time dataset."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 10,
              "example": "B_HTR"
            },
            "in": "query",
            "name": "origin",
            "description": "The system of origin."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 50,
              "example": "319"
            },
            "in": "query",
            "name": "originId",
            "description": "Id of the system of origin."
          }
        ],
        "description": "Deletes a presence time."
      },
      "parameters": []
    },
    "/api/v3/service-recording/absences": {
      "get": {
        "summary": "Search absences",
        "tags": [
          "ServiceRecording"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/serviceRecordingAbsence"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "getAbsences",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          },
          {
            "name": "searchString",
            "in": "query",
            "description": "Optional search string for looking up a record within name and searchterm fields.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries  to skip  for pagination.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries since the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries since the specified change id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1234567890,
              "minimum": 0,
              "maximum": 9999999999
            },
            "in": "query",
            "name": "serviceProviderDayId",
            "description": "Key to fetch all absences from the given day/performance/performing unit."
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "servicePerformanceDay",
            "description": "Date the service was performed."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 50,
              "minLength": 1
            },
            "in": "query",
            "name": "personnelNo",
            "description": "Id of the performing unit in the external system - Is only unique togehter with the companyNo."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 999999,
              "minimum": 1
            },
            "in": "query",
            "name": "companyNo",
            "description": "The CompanyNo identifies the customer via the corresponding number in the mandate system."
          }
        ],
        "description": "Returns all matching absences."
      },
      "put": {
        "summary": "Updates an existing absence if internal or external Id match.\nCreates an absence if neither internal or external Id is provided or no matching record could be found.",
        "operationId": "putAbsences",
        "tags": [
          "ServiceRecording"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/serviceRecordingAbsence"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Requesting-System",
            "description": "Identifying the system calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Requesting-User",
            "description": "Identifying the user calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Flow-ID",
            "description": "Optional technical Id (GUID) for call identification."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          }
        ],
        "description": "Updates an existing absence if internal or external Id match.\nCreates an absence if neither internal or external Id is provided or no matching record could be found.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/serviceRecordingAbsence"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes an absence",
        "operationId": "deleteAbsences",
        "tags": [
          "ServiceRecording"
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "404": {
            "description": "No Record found"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Requesting-System",
            "description": "Identifying the system calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Requesting-User",
            "description": "Identifying the user calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Flow-ID",
            "description": "Optional technical Id (GUID) for call identification."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "absenceId",
            "description": "Identifies the absence."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 10,
              "example": "B_HTR"
            },
            "in": "query",
            "name": "origin",
            "description": "The system of origin."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 50,
              "example": "319"
            },
            "in": "query",
            "name": "originId",
            "description": "Id of the system of origin."
          }
        ],
        "description": "Deletes an absence."
      },
      "parameters": []
    },
    "/api/v3/service-recording/allowances": {
      "get": {
        "summary": "Search all allowances",
        "tags": [
          "ServiceRecording"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/serviceRecordingAllowance"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "404": {
            "description": "No Record found"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "getAllowances",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          },
          {
            "name": "searchString",
            "in": "query",
            "description": "Optional search string for looking up a record within name and searchterm fields.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries  to skip  for pagination.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries since the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries since the specified change id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1234567890,
              "minimum": 0,
              "maximum": 9999999999
            },
            "in": "query",
            "name": "serviceProviderDayId",
            "description": "Key to fetch all allowances from the given day/performance/performing unit."
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "servicePerformanceDay",
            "description": "Date the service was performed."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 50,
              "minLength": 1
            },
            "in": "query",
            "name": "personnelNo",
            "description": "Id of the performing unit in the external system - Is only unique togehter with the companyNo."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 999999,
              "minimum": 1
            },
            "in": "query",
            "name": "companyNo",
            "description": "The CompanyNo identifies the customer via the corresponding number in the mandate system."
          }
        ],
        "description": "Returns all matching allowances."
      },
      "put": {
        "summary": "Updates an existing day allowance if internal or external Id match.\nCreates a day allowance if neither internal or external Id is provided or no matching record could be found.",
        "operationId": "putAllowances",
        "tags": [
          "ServiceRecording"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/serviceRecordingAllowance"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Requesting-System",
            "description": "Identifying the system calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Requesting-User",
            "description": "Identifying the user calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Flow-ID",
            "description": "Optional technical Id (GUID) for call identification."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          }
        ],
        "description": "Updates an existing absence if internal or external Id match.\nCreates an absence if neither internal or external Id is provided or no matching record could be found.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/serviceRecordingAllowance"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes an allowance",
        "operationId": "deleteAllowances",
        "tags": [
          "ServiceRecording"
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "404": {
            "description": "No Record found"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Requesting-System",
            "description": "Identifying the system calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Requesting-User",
            "description": "Identifying the user calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Flow-ID",
            "description": "Optional technical Id (GUID) for call identification."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "allowanceId",
            "description": "Identifier of an allowance."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 10,
              "example": "B_HTR"
            },
            "in": "query",
            "name": "origin",
            "description": "The system of origin."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 50,
              "example": "319"
            },
            "in": "query",
            "name": "originId",
            "description": "Id of the system of origin."
          }
        ],
        "description": "Deletes an allowance."
      },
      "parameters": []
    },
    "/api/v3/finance/cacc-entries": {
      "get": {
        "summary": "Searches for company accounting entries",
        "tags": [
          "Finance"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/finanaceCaccEntry"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "getCaccEntries",
        "description": "Returns all matching cacc entries.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          },
          {
            "name": "searchString",
            "in": "query",
            "description": "Optional search string for looking up a record within name and searchterm fields.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of entries  to skip  for pagination.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of entries to return.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all entries since the specified date time.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all entries since the specified change id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 999999,
              "minimum": 1
            },
            "in": "query",
            "name": "companyNo",
            "description": "The CompanyNo identifies the customer via the corresponding number in the mandate system."
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 9999999999,
              "format": "int64",
              "example": 658972
            },
            "in": "query",
            "name": "caccEntryNo",
            "description": "BookingNo on the in the mandate system - Only unique together with origin and companyNo."
          }
        ]
      },
      "put": {
        "summary": "Updates an existing company accounting entry if internal or external Id match.\nCreates acompany accounting entry if neither internal or external Id is provided or no matching record could be found.",
        "tags": [
          "Finance"
        ],
        "operationId": "putCaccEntries",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "entries": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/finanaceCaccEntry"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Requesting-System",
            "description": "Identifying the system calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Requesting-User",
            "description": "Identifying the user calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Flow-ID",
            "description": "Optional technical Id (GUID) for call identification."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          }
        ],
        "description": "Updates an existing entry if internal or external Id match.\nCreates an entry if neither internal or external Id is provided or no matching record could be found.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/finanaceCaccEntry"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/master-data/purchase/suppliers": {
      "get": {
        "summary": "Get supplier information",
        "tags": [
          "MasterData"
        ],
        "responses": {
          "200": {
            "description": "Supplier information.",
            "content": {
              "application/json": {
                "example": [
                  {
                    "changeID": 520057,
                    "changeDate": "2024-01-30T14:37:12",
                    "bpAddrID": 2992630,
                    "externalBpAddrID": null,
                    "origin": "ISP",
                    "active": true,
                    "modifyUser": "STJ",
                    "modifyDate": "2024-01-30T11:46:59",
                    "supplierId": 83930,
                    "externalSupplierId": "098ljljasd-08980",
                    "isLocked": false,
                    "supplierNo": 98098,
                    "supplierCategoryCode": 24650001,
                    "ourCustomerNo": "79967",
                    "paymentTermsCode": 270001,
                    "orderPrintCopies": 0,
                    "orderPrintPrices": false,
                    "orderType": "E-mail",
                    "currency": "CHF",
                    "taxType": "21 VST. Wa Einkauf",
                    "deliveryDays": "1111100",
                    "invoiceBpAddrID": 2992630,
                    "pickupBpAddrID": 2992630
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/purchaseSupplier"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "getSuppliers",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "maxLength": 50
            },
            "in": "header",
            "name": "X-Requesting-System",
            "description": "Identifying the system calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Requesting-User",
            "description": "Identifying the user calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Flow-ID",
            "description": "Optional technical Id (GUID) for call identification."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Optional search string for looking up a record within name and search term fields.",
            "name": "searchString"
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 2147483647
            },
            "in": "query",
            "name": "skip",
            "description": "Number of entries  to skip  for pagination."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 2147483647
            },
            "in": "query",
            "name": "limit",
            "description": "Maximum number of entries to return."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "changesSinceDateTime",
            "description": "Get all entries since the specified date time."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "changesSinceChangeId",
            "description": "Get all entries since the specified change id."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "maximum": 9999999999
            },
            "in": "query",
            "name": "supplierId",
            "description": "Filters entries of the supplier ID."
          },
          {
            "schema": {
              "type": "string",
              "example": "098ljljasd-08980",
              "maxLength": 50
            },
            "in": "query",
            "name": "externalSupplierId",
            "description": "Filters entries of the external supplier ID."
          },
          {
            "schema": {
              "type": "string",
              "example": "ISBRW",
              "maxLength": 10
            },
            "in": "query",
            "name": "origin",
            "description": "Get all the entities of a certain origin."
          }
        ],
        "description": "Returns all matching suppliers."
      }
    },
    "/api/v3/purchase/orders": {
      "get": {
        "summary": "Get purchase order information",
        "tags": [
          "Purchase"
        ],
        "responses": {
          "200": {
            "description": "Purchase order information.",
            "content": {
              "application/json": {
                "example": [
                  {
                    "changeID": 520057,
                    "changeDate": "2024-01-30T14:46:59",
                    "origin": "BBA",
                    "active": true,
                    "modifyUser": "STJ",
                    "modifyDate": "2024-01-30T11:46:59",
                    "purchaseOrderNo": "BE2024.011",
                    "companyNo": 100,
                    "supplierID": 568,
                    "purchaseOrderTypeCode": 24500001,
                    "purchaseOrderStateCode": 24520004,
                    "currency": "CHF",
                    "isPurchaseOrderSent": true,
                    "purchaseOrderSendDate": "2023-12-13",
                    "deliveryDatePlanned": "2024-01-05",
                    "deliveryDate": "2024-01-05",
                    "priceDate": "2023-12-14",
                    "desadvDatePlanned": "2023-12-15",
                    "desadvDate": "2023-12-15",
                    "desadvNo": "A18.223232",
                    "storageId": 253,
                    "deliveryPlaceCode": 24640001,
                    "freightTypeCode": 24630001,
                    "exchangeRate": 1,
                    "incotermPlace": "Zurich",
                    "plantDeliveryDateRequested": "2023-12-15",
                    "plantDeliveryDate": "2023-12-15",
                    "buyerBpId": 87908,
                    "supplierBpId": 78990,
                    "deliveryBpId": 8098,
                    "deliveryBpAddrId": 67898,
                    "supplierNote": "Der Lieferant hat jedes Jahr im Frühsommer eine Aktion auf alle Metallwaren am laufen...",
                    "remarkInternal": "Die Rechnung genau kontrollieren",
                    "remarkExternal": "Bitte die Liefertermine direkt bestätigen nach der Anfrage.",
                    "openingText": "Sie erhalten folgende Bestellung. Bitte überprüfen Sie die Positionen und bestätigen Sie uns die Lieferung mittels Auftragsbestätigung.",
                    "footerText": "Bitte geben Sie uns evtl. Preisänderungen schriftlich unter der Mailadresse purchase@memor.ch an. Besten Dank.",
                    "yourRef": "KST 43808",
                    "pos": [
                      {
                        "posnr": 1,
                        "positionTypeCode": 24550001,
                        "articleId": 808909,
                        "text": "Dienstleistung 80t Kran",
                        "coefficientLameLime": 1,
                        "coefficientLimeLame": 1,
                        "coefficientLimeLipe": 1,
                        "coefficientLipeLime": 1,
                        "totalQuantityLAME": 1,
                        "totalQuantityLIME": 1,
                        "totalQuantityLIPE": 1,
                        "limeCode": 280001,
                        "lime": "PCE",
                        "lipeCode": 280002,
                        "lipe": "HRS",
                        "price": 120,
                        "distributeBool": true,
                        "distributionKeyCode": 24560001,
                        "mvatCode": 230101,
                        "storageId": 11,
                        "storageLocationId": 1,
                        "freightTypeCode": 24630001,
                        "priceOriginCode": 24590001,
                        "salesChannel": null,
                        "orderNo": "A876808",
                        "deliveryDateRequested": "2023-12-15",
                        "deliveryDate": "2023-12-15",
                        "plantDeliveryDateRequested": "2023-12-15",
                        "plantDeliveryDate": "2023-12-15",
                        "materialBooking": true,
                        "c3CountryOrigin": 30001,
                        "tariffCode": "12412",
                        "desadvDate": "2023-12-15",
                        "desadvNoSupplier": "A23.98709",
                        "desadvSupplierDate": "2023-12-15",
                        "fullyChargedBool": true,
                        "netAmount": 134.5,
                        "grossAmount": 137.85,
                        "taxAmount": 3.35,
                        "printBool": true
                      }
                    ]
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/purchaseOrder"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "getPurchaseOrders",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "maxLength": 50
            },
            "in": "header",
            "name": "X-Requesting-System",
            "description": "Identifying the system calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Requesting-User",
            "description": "Identifying the user calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Flow-ID",
            "description": "Optional technical Id (GUID) for call identification."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Optional search string for looking up a record within name and search term fields.",
            "name": "searchString"
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 2147483647
            },
            "in": "query",
            "name": "skip",
            "description": "Number of entries  to skip  for pagination."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 2147483647
            },
            "in": "query",
            "name": "limit",
            "description": "Maximum number of entries to return."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "changesSinceDateTime",
            "description": "Get all entries since the specified date time."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "changesSinceChangeId",
            "description": "Get all entries since the specified change id."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "maximum": 9999999999
            },
            "in": "query",
            "name": "purchaseOrderNo",
            "description": "Filters entries of the purchase order number and company number."
          },
          {
            "schema": {
              "type": "string",
              "example": "ISBRW",
              "maxLength": 10
            },
            "in": "query",
            "name": "origin",
            "description": "Get all the entities of a certain origin."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "maximum": 999999
            },
            "in": "query",
            "name": "companyNo",
            "description": "Filters entries of the company number and purchase order number."
          }
        ],
        "description": "Returns all matching purchase orders."
      }
    },
    "/api/v3/material-management/delivery-notes": {
      "get": {
        "summary": "Get delivery information",
        "tags": [
          "MaterialManagement"
        ],
        "responses": {
          "200": {
            "description": "Delivery information.",
            "content": {
              "application/json": {
                "example": [
                  {
                    "deliveryNoteNo": 4798,
                    "entryTypeCode": 4120021,
                    "deliveryDate": "2024-01-31",
                    "companyNo": 100,
                    "storageLocationFrom": 25,
                    "storageLocationTo": 26,
                    "orderNo": "W4589",
                    "pos": [
                      {
                        "deliveryNotePos": 1,
                        "orderNoPos": 1,
                        "articleId": 27313,
                        "amount": 6,
                        "storageLocationFrom": 35,
                        "storagePlaceFrom": 3524,
                        "storageLocationTo": 47,
                        "storagePlaceTo": 4728
                      },
                      {
                        "deliveryNotePos": 2,
                        "orderNoPos": 5,
                        "articleId": 27353,
                        "amount": 4,
                        "storageLocationFrom": 55,
                        "storagePlaceFrom": 551235,
                        "storageLocationTo": 2,
                        "storagePlaceTo": 21435
                      }
                    ]
                  },
                  {
                    "deliveryNoteNo": 4801,
                    "entryTypeCode": 4120030,
                    "deliveryDate": "2024-01-31",
                    "companyNo": 100,
                    "storageLocationFrom": 101,
                    "storageLocationTo": 102,
                    "orderNo": "B-3269842",
                    "pos": [
                      {
                        "deliveryNotePos": 1,
                        "orderNoPos": 1,
                        "articleId": 27313,
                        "amount": 5,
                        "storageLocationFrom": 15,
                        "storagePlaceFrom": 151515,
                        "storageLocationTo": 61,
                        "storagePlaceTo": 61112
                      }
                    ]
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/materialManagementDeliveryNote"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "getDeliveryNotes",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "maxLength": 50
            },
            "in": "header",
            "name": "X-Requesting-System",
            "description": "Identifying the system calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Requesting-User",
            "description": "Identifying the user calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Flow-ID",
            "description": "Optional technical Id (GUID) for call identification."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Optional search string for looking up a record within name and search term fields.",
            "name": "searchString"
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 2147483647
            },
            "in": "query",
            "name": "skip",
            "description": "Number of entries  to skip  for pagination."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 2147483647
            },
            "in": "query",
            "name": "limit",
            "description": "Maximum number of entries to return."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "changesSinceDateTime",
            "description": "Get all entries since the specified date time."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "changesSinceChangeId",
            "description": "Get all entries since the specified change id."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "maximum": 9999999999
            },
            "in": "query",
            "name": "deliveryNoteNo",
            "description": "Filters entries of the delivery note number."
          },
          {
            "schema": {
              "type": "string",
              "example": "ISBRW",
              "maxLength": 10
            },
            "in": "query",
            "name": "origin",
            "description": "Get all the entities of a certain origin."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "maximum": 999999
            },
            "in": "query",
            "name": "companyNo",
            "description": "Filters entries of the company number."
          }
        ],
        "description": "Returns all matching delivery notes."
      },
      "parameters": []
    },
    "/api/v3/master-data/material-management/articles": {
      "get": {
        "summary": "Get article information",
        "tags": [
          "MasterData"
        ],
        "responses": {
          "200": {
            "description": "Article information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/materialManagementArticle"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "getMaterialManagementArticles",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "maxLength": 50
            },
            "in": "header",
            "name": "X-Requesting-System",
            "description": "Identifying the system calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Requesting-User",
            "description": "Identifying the user calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Flow-ID",
            "description": "Optional technical Id (GUID) for call identification."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 2147483647
            },
            "in": "query",
            "name": "skip",
            "description": "Number of entries to skip for pagination."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 2147483647
            },
            "in": "query",
            "name": "limit",
            "description": "Maximum number of entries to return."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "changesSinceDateTime",
            "description": "Get all entries since the specified date time."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "changesSinceChangeId",
            "description": "Get all entries since the specified change id."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "maximum": 9999999999
            },
            "in": "query",
            "name": "articleId",
            "description": "Get a specific entry by internal article number."
          },
          {
            "schema": {
              "type": "string",
              "example": "ISBRW",
              "maxLength": 200
            },
            "in": "query",
            "name": "origin",
            "description": "Get all the entities of a certain origin."
          },
          {
            "schema": {
              "type": "string",
              "example": "C47C97C0F4B04096855955CB5AD47444",
              "maxLength": 200
            },
            "in": "query",
            "name": "externalArticleId",
            "description": "Id of the article in the external system."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 20,
              "example": "15523"
            },
            "in": "query",
            "name": "articleNo",
            "description": "Filters entries of the specified article number. The same article number can be used in several companies. Also use the company number to get a specific article."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "maximum": 999999
            },
            "in": "query",
            "name": "companyNo",
            "description": "Filters entries of the specified company number."
          }
        ],
        "description": "Returns all matching articles."
      }
    },
    "/api/v3/master-data/material-management/articles/prices": {
      "get": {
        "summary": "Get price information",
        "tags": [
          "MasterData"
        ],
        "responses": {
          "200": {
            "description": "Price information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/materialManagementArticlePrice"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "getArticlePrices",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "maxLength": 50
            },
            "in": "header",
            "name": "X-Requesting-System",
            "description": "Identifying the system calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Requesting-User",
            "description": "Identifying the user calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Flow-ID",
            "description": "Optional technical Id (GUID) for call identification."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 2147483647
            },
            "in": "query",
            "name": "skip",
            "description": "Number of entries to skip for pagination."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 2147483647
            },
            "in": "query",
            "name": "limit",
            "description": "Maximum number of entries to return."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "changesSinceDateTime",
            "description": "Get all entries since the specified date time."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "changesSinceChangeId",
            "description": "Get all entries since the specified change id."
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "int64",
                "minimum": 1,
                "maximum": 9999999999
              }
            },
            "in": "query",
            "name": "articleId",
            "description": "Gets a list of articles by internal article ids.",
            "example": [
              1,
              21,
              321
            ]
          },
          {
            "schema": {
              "type": "string",
              "example": "ISBRW",
              "maxLength": 200
            },
            "in": "query",
            "name": "origin",
            "description": "Get all the entries of a certain origin."
          }
        ],
        "description": "Returns all matching article prices."
      },
      "put": {
        "summary": "Put price information",
        "tags": [
          "MasterData"
        ],
        "operationId": "PutArticlePrices",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/materialManagementArticlePrice"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Requesting-System",
            "description": "Identifying the system calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Requesting-User",
            "description": "Identifying the user calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Flow-ID",
            "description": "Optional technical Id (GUID) for call identification."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          }
        ],
        "description": "Updates an existing entry if internal or external Id match.\nCreates an entry if neither internal or external Id is provided or no matching entry could be found.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/materialManagementArticlePrice"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "serviceRecordingServiceProviderDay": {
        "title": "ServiceProviderDay",
        "type": "object",
        "description": "Represents a service provider day entry.",
        "properties": {
          "changeId": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9999999999,
            "description": "Change id of the entry.",
            "example": 123789
          },
          "changeDate": {
            "type": "string",
            "description": "Change date of the entry.",
            "format": "date-time",
            "example": "2022-05-12 08:00:00"
          },
          "serviceProviderDayId": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9999999999,
            "example": 1234567890,
            "description": "Identifies the service provider day."
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Date of the service.",
            "example": "2022-05-12"
          },
          "targetHours": {
            "type": "number",
            "example": 8,
            "description": "The amount of hours that should be spent on this.",
            "format": "double"
          },
          "presenceHours": {
            "type": "number",
            "example": 6,
            "description": "Hours the service provider was present.",
            "format": "double"
          },
          "hoursOfHoliday": {
            "type": "number",
            "example": 4,
            "description": "Time off in hours.",
            "format": "double"
          },
          "allowancesHours": {
            "type": "number",
            "example": 4,
            "description": "Hours that are relevant for allowences.",
            "format": "double"
          },
          "dayOff": {
            "type": "boolean",
            "description": "Is a day off."
          },
          "breakRuleViolated": {
            "type": "boolean",
            "description": "A work hour rule was violated."
          },
          "approved": {
            "type": "boolean",
            "description": "The service provider day was approved by the authorized user."
          },
          "serviceProviderId": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "maximum": 9999999999,
            "description": "Id of the service provider.",
            "example": 7684411397
          },
          "dayValid": {
            "type": "boolean",
            "description": "The record was checked by all rules and is valid."
          },
          "approvalUser": {
            "type": "string",
            "maxLength": 30,
            "description": "Name of the reviewing authority that approved the record.",
            "example": "XYZ"
          },
          "approvalDate": {
            "type": "string",
            "format": "date",
            "description": "Date the reviewing authority approved the record.",
            "example": "2021-08-24"
          },
          "dayError": {
            "type": "string",
            "maxLength": 2000,
            "description": "List of all reasons why the recoed could not be validated successfully.",
            "example": "Abwesenheitszeit darf nicht grösser als die Sollzeit sein."
          },
          "relevantChangeUser": {
            "type": "string",
            "maxLength": 30,
            "description": "Name of user who changed relevant information of the record other than the service provider.",
            "example": "ADM"
          },
          "relevantChangeDate": {
            "type": "string",
            "format": "date",
            "description": "Date someone changed relevant information of the record other than the service provider.",
            "example": "2021-08-31"
          },
          "onHourlyWage": {
            "type": "boolean",
            "description": "Ist the wage per hour."
          },
          "overlapHours": {
            "type": "integer",
            "format": "int64",
            "description": "Hours overlapping with other service provider day.",
            "example": 3
          },
          "serviceRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/serviceRecordingServiceRecord"
            }
          },
          "allowances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/serviceRecordingAllowance"
            }
          },
          "presenceTimes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/serviceRecordingPresenceTime"
            }
          },
          "absences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/serviceRecordingAbsence"
            }
          }
        },
        "required": [
          "date",
          "presenceHours",
          "hoursOfHoliday",
          "allowancesHours",
          "dayOff",
          "breakRuleViolated",
          "approved",
          "serviceProviderId",
          "dayValid",
          "onHourlyWage"
        ]
      },
      "serviceRecordingServiceRecord": {
        "title": "ServiceRecord",
        "type": "object",
        "properties": {
          "changeId": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9999999999,
            "description": "Change id of the entry.",
            "example": 8971239429
          },
          "changeDate": {
            "type": "string",
            "description": "Change date of the entry.",
            "format": "date-time",
            "example": "2020-07-22 09:45:00"
          },
          "serviceRecordId": {
            "type": "integer",
            "format": "int64",
            "maximum": 9999999999,
            "minimum": 0,
            "description": "Id of the service.",
            "example": 326479517
          },
          "companyNo": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 999999,
            "description": "The CompanyNo identifies the customer via the corresponding number in the mandate system.",
            "example": 37
          },
          "serviceProviderId": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "maximum": 9999999999,
            "description": "Id of the service provider.",
            "example": 3366
          },
          "personnelNo": {
            "type": "string",
            "description": "Id of the human service provider in the external system.",
            "minLength": 1,
            "maxLength": 50,
            "example": "138"
          },
          "machineNo": {
            "type": "string",
            "description": "Id of the machine service provider in the external system.",
            "minLength": 1,
            "maxLength": 50,
            "example": "139"
          },
          "serviceProviderDate": {
            "type": "string",
            "format": "date",
            "description": "Day on which the service was provided.",
            "example": "2023-09-22"
          },
          "serviceRecordTypeId": {
            "type": "integer",
            "minimum": 0,
            "maximum": 9999999999,
            "description": "Id of the service type.",
            "example": 697
          },
          "costCenterNo": {
            "type": "string",
            "maxLength": 6,
            "description": "Cost center identifier.",
            "minLength": 1,
            "example": "C68"
          },
          "costUnitNo": {
            "type": "string",
            "maxLength": 20,
            "description": "Cost unit identifier.",
            "example": "K-68"
          },
          "orderNo": {
            "type": "string",
            "maxLength": 20,
            "description": "The OrderNo identifies the order to be booked in accounting. This is the actual order no of the order.",
            "example": "E-3654.12"
          },
          "period": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "maximum": 999999,
            "description": "Year and month the service was provided\nFormat YYYYMM (e.g. 202401).",
            "example": 202010
          },
          "text": {
            "type": "string",
            "maxLength": 240,
            "description": "Description of the work done.",
            "example": "Stahlträger montieren"
          },
          "quantity": {
            "type": "integer",
            "format": "int64",
            "description": "Amount of hours to get work done.",
            "example": 4
          },
          "timeFrom": {
            "type": "string",
            "format": "time",
            "description": "Work start time.",
            "example": "08:00:00"
          },
          "timeUntil": {
            "type": "string",
            "format": "time",
            "description": "Work end time.",
            "example": "12:45:00"
          },
          "serviceProviderDayId": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "maximum": 9999999999,
            "description": "Id des service provider day.",
            "example": 3698521470
          },
          "serviceRecordStatusCode": {
            "type": "integer",
            "format": "int64",
            "minimum": 2910001,
            "maximum": 2919999,
            "description": "C291 - State of the service entry\n10 - Provisorisch                - Provisional\n20 - Erfasst                     - Recorded\n25 - Nicht verrechnungsbereit    - Not ready for billing\n30 - Verrechnungsbereit          - Ready for billing\n40 - Verrechnet                  - Billed\n45 - Keine Verrechnung           - No billing.",
            "example": 2910020
          },
          "activity": {
            "type": "string",
            "example": "Repairs",
            "minLength": 1,
            "maxLength": 200,
            "description": "Description of the work/task done."
          },
          "locked": {
            "type": "boolean",
            "description": "The service entry is locked for change."
          },
          "machineServiceProviderDayId": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "maximum": 9999999999,
            "description": "Id des service provider day of the machine.",
            "example": 842697135
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "maxLength": 36,
            "description": "Unique global external Id to identify the record .",
            "example": "196F85A1-D8F6-4CB3-A7C1-4961D379AF57"
          },
          "noRWPosting": {
            "type": "boolean",
            "description": "No post in accounting."
          },
          "origin": {
            "type": "string",
            "maxLength": 10,
            "description": "The system of origin.",
            "example": "B_HTR"
          },
          "originId": {
            "type": "string",
            "maxLength": 50,
            "description": "Id of the system of origin.",
            "example": "319"
          },
          "originStatusCode": {
            "type": "integer",
            "minimum": 5770001,
            "maximum": 5779999,
            "format": "int64",
            "description": "C577 - Status of the origin\n100 - nicht freigegeben     - not approved \n200 - teilweise freigegeben - partially approved\n500 - freigegeben           - approved.",
            "example": 5770100
          }
        },
        "required": [
          "serviceRecordId",
          "companyNo",
          "serviceProviderId",
          "personnelNo",
          "serviceProviderDate",
          "serviceRecordTypeId",
          "period",
          "quantity",
          "c291ServiceRecordStatus",
          "locked",
          "guid",
          "noRWPosting",
          "origin",
          "originId"
        ],
        "description": "Represents a service record entry."
      },
      "serviceRecordingServiceProvider": {
        "title": "ServiceProvider",
        "type": "object",
        "properties": {
          "changeId": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9999999999,
            "description": "Change id of the entry.",
            "example": 5214698741
          },
          "changeDate": {
            "type": "string",
            "description": "Change date of the entry.",
            "format": "date-time",
            "example": "2022-04-30 09:30:00"
          },
          "serviceProviderId": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "maximum": 9999999999,
            "description": "Id of the service provider.",
            "example": 1265
          },
          "inactive": {
            "type": "string",
            "maxLength": 1,
            "example": "Y",
            "description": "Entry is inactive."
          },
          "companyNo": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 999999,
            "description": "The CompanyNo identifies the customer via the corresponding number in the mandate system.",
            "example": 20
          },
          "shortDescription": {
            "type": "string",
            "description": "Short identifier/abbreviation/acronym of the service provider.",
            "maxLength": 10,
            "example": "MAU"
          },
          "description": {
            "type": "string",
            "description": "Full decription / Name of the service provider.",
            "maxLength": 100,
            "example": "Martin Urfer"
          },
          "serviceCompleted": {
            "type": "string",
            "maxLength": 1,
            "example": "Y",
            "description": "Indicates if the service has been completed."
          },
          "allowEditingInClosedPeriod": {
            "type": "boolean",
            "description": "Indicates if the service provider can be edited even if the period is closed."
          },
          "externalId": {
            "type": "string",
            "maxLength": 50,
            "example": "C47C97C0F4B04096855955CB5AD47444",
            "description": "Id of the service provider in the external system."
          },
          "role": {
            "type": "string",
            "maxLength": 50,
            "example": "Leiter Informatik",
            "description": "Role of the service provider."
          },
          "serviceProviderTypeCode": {
            "type": "integer",
            "format": "int64",
            "minimum": 2860001,
            "maximum": 2869999,
            "example": 2860003,
            "description": "C286 - Type of the service provider\n1 - Mitarbeiter - Employees\n2 - Maschinen   - Machines\n3 - Kleingeräte - Small devices\n5 - Allgemein   - Universal."
          },
          "department": {
            "type": "string",
            "example": "Werkstatt",
            "maxLength": 200,
            "minLength": 0,
            "description": "Department the service provider is assigned to."
          },
          "standardServiceType": {
            "type": "string",
            "example": "295676",
            "description": "Default servie type of the service provider ."
          },
          "bAEmployeeId": {
            "type": "integer",
            "minimum": 0,
            "maximum": 9999999999,
            "description": "Identifies the employee.",
            "example": 1284
          },
          "origin": {
            "type": "string",
            "maxLength": 10,
            "example": "25",
            "description": "The system of origin."
          },
          "originid": {
            "type": "number",
            "maximum": 9999999999,
            "minimum": 1,
            "example": 1023789456,
            "description": "Id of the system of origin the order."
          }
        },
        "required": [
          "serviceProviderId",
          "inactive",
          "companyNo",
          "shortDescription",
          "description",
          "serviceCompleted",
          "allowEditingInClosedPeriod",
          "c286ServiceProviderType",
          "origin",
          "originid"
        ],
        "description": "Represents a service provider entry."
      },
      "serviceRecordingAllowance": {
        "title": "Allowance",
        "type": "object",
        "properties": {
          "changeId": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9999999999,
            "description": "Change id of the entry.",
            "example": 369852147
          },
          "changeDate": {
            "type": "string",
            "description": "Change date of the entry.",
            "format": "date-time",
            "example": "2024-01-27 09:30:00"
          },
          "allowanceId": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "maximum": 9999999999,
            "description": "Id of the allowance.",
            "example": 26873
          },
          "serviceProviderDayId": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "maximum": 9999999999,
            "description": "Id of the service provider day.",
            "example": 36874
          },
          "allowanceid": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "maximum": 9999999999,
            "description": "Id of the allowance.",
            "example": 15795
          },
          "companyNo": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 999999,
            "description": "The CompanyNo identifies the customer via the corresponding number in the mandate system.",
            "example": 25
          },
          "personnelNo": {
            "type": "string",
            "description": "Id of the person/(human) service provider in the external system.",
            "minLength": 1,
            "maxLength": 50,
            "example": "1258"
          },
          "machineNo": {
            "type": "string",
            "description": "Id of the machine service provider in the external system.",
            "minLength": 1,
            "maxLength": 50,
            "example": "139"
          },
          "description": {
            "type": "string",
            "maxLength": 50,
            "example": "Pikett-Dienst",
            "description": "Discribes the details of the allowance."
          },
          "orderNo": {
            "type": "string",
            "maxLength": 20,
            "description": "The OrderNo identifies the order to be booked in accounting. This is the actual order no of the order.",
            "example": "K-658-55"
          },
          "base": {
            "type": "integer",
            "format": "int64",
            "description": "Amount of units declared.",
            "example": 8
          },
          "percentage": {
            "type": "number",
            "format": "double",
            "example": 50,
            "minimum": 0,
            "maximum": 100,
            "description": "Percentage rate of base amount being compensated."
          },
          "amount": {
            "type": "number",
            "description": "Actual amount being compensated\nbase (declared) 8h\npercentage 50%\namount (compensated) 4h.",
            "example": 4
          },
          "apply": {
            "type": "boolean",
            "description": "As all possible allowances are checked and calulated for all service provider days this flag declares if this specific allowance is relevant."
          },
          "locked": {
            "type": "boolean",
            "description": "The dataset is locked for change."
          },
          "exclude": {
            "type": "boolean",
            "description": "The allowence is not being granted even if would apply."
          },
          "costCenterNo": {
            "type": "string",
            "maxLength": 6,
            "description": "Cost center identifier.",
            "example": "C-222"
          },
          "period": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "maximum": 999999,
            "example": 202312,
            "description": "Year and month the service was provided\nFormat YYYYMM (e.g. 202401)."
          },
          "origin": {
            "type": "string",
            "maxLength": 10,
            "description": "The system of origin.",
            "example": "25"
          },
          "originId": {
            "type": "string",
            "maxLength": 50,
            "description": "Id of the system of origin.",
            "example": "1023789456"
          }
        },
        "required": [
          "allowanceid",
          "companyNo",
          "personnelNo",
          "apply",
          "locked",
          "exclude",
          "origin",
          "originId"
        ],
        "description": "Represents an allowance entry."
      },
      "serviceRecordingallowanceDefinition": {
        "title": "AllowanceDefinition",
        "type": "object",
        "description": "Represents an allowance definition entry.",
        "properties": {
          "changeId": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9999999999,
            "description": "Change id of the entry.",
            "example": 98764321
          },
          "changeDate": {
            "type": "string",
            "format": "date-time",
            "description": "Change date of the entry.",
            "example": "2023-12-31 09:05:00"
          },
          "allowanceId": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "maximum": 9999999999,
            "description": "Identifies the allowance.",
            "example": 321198745
          },
          "description": {
            "type": "string",
            "maxLength": 50,
            "description": "Discribes the details of the allowance.",
            "example": "Pikett-Dienst"
          },
          "companyNo": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 999999,
            "description": "The CompanyNo identifies the customer via the corresponding number in the mandate system."
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "usually the API will respond with this structure, when the maintenance window is active and the window has started."
          },
          "externalId": {
            "type": "string",
            "maxLength": 50,
            "description": "Id of the allowance definition in the external system.",
            "example": "C47C97C0F4B04096855955CB5AD47444"
          }
        },
        "required": [
          "allowanceId",
          "description",
          "companyNo",
          "active"
        ]
      },
      "serviceRecordingPresenceTime": {
        "title": "PresenceTime",
        "type": "object",
        "description": "Represents a presence time entry.",
        "properties": {
          "changeId": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9999999999,
            "description": "Change id of the entry.",
            "example": 321456987
          },
          "changeDate": {
            "type": "string",
            "description": "Change date of the entry.",
            "format": "date-time",
            "example": "2023-09-21 09:30:00"
          },
          "presenceTimeId": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "maximum": 9999999999,
            "description": "Unique identifier of the presence time dataset.",
            "example": 65987
          },
          "companyNo": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 999999,
            "description": "The CompanyNo identifies the customer via the corresponding number in the mandate system.",
            "example": 20
          },
          "serviceProviderId": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "maximum": 9999999999,
            "description": "Id of the service provider.",
            "example": 36547
          },
          "serviceProviderDayId": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "maximum": 9999999999,
            "description": "Identifier to the service provider day.",
            "example": 6584
          },
          "personnelNo": {
            "type": "string",
            "description": "Id of the person/(human) service provider in the external system.",
            "minLength": 1,
            "maxLength": 50,
            "example": "1287"
          },
          "presenceDate": {
            "type": "string",
            "format": "date",
            "description": "Date of presence.",
            "example": "2022-11-11"
          },
          "hours": {
            "type": "number",
            "description": "Hours the service provider was present.",
            "example": 4.5,
            "format": "double",
            "minimum": 0
          },
          "timeFrom": {
            "type": "string",
            "format": "time",
            "description": "Time the service provider started work.",
            "example": "08:00:00"
          },
          "timeUntil": {
            "type": "string",
            "format": "time",
            "description": "Time the service provider ended work.",
            "example": "12:15:00"
          },
          "locked": {
            "type": "boolean",
            "description": "The presence time record is locked for all but the origin system."
          },
          "origin": {
            "type": "string",
            "maxLength": 10,
            "description": "The system of origin.",
            "example": "25"
          },
          "originId": {
            "type": "string",
            "maxLength": 50,
            "description": " Id of the system of origin.",
            "example": "1023789456"
          }
        },
        "required": [
          "presenceTimeId",
          "companyNo",
          "presenceDate",
          "hours",
          "timeFrom",
          "locked",
          "origin",
          "originId"
        ]
      },
      "serviceRecordingAbsence": {
        "title": "Absence",
        "type": "object",
        "properties": {
          "changeId": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9999999999,
            "description": "Change id of the entry.",
            "example": 322784
          },
          "changeDate": {
            "type": "string",
            "description": "Change date of the entry.",
            "format": "date-time",
            "example": "2022-04-25 09:30:00"
          },
          "absenceId": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "maximum": 9999999999,
            "description": "Unique identifier of the absence.",
            "example": 665588
          },
          "serviceProviderId": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "maximum": 9999999999,
            "description": "Id of the service provider.",
            "example": 8715
          },
          "serviceProviderType": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "maximum": 9999999999,
            "description": "Type of the service provider\n 1 - Mitarbeiter - Employees\n 2 - Maschinen   - Machines\n 3 - Kleingeräte - Small devices\n 5 - Allgemein   - Universal.",
            "example": 2860005
          },
          "serviceProviderDayId": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "maximum": 9999999999,
            "description": "Id of the service provider.",
            "example": 3269
          },
          "dateOfAbsence": {
            "type": "string",
            "format": "date",
            "description": "Date of the absence.",
            "example": "2023-12-24"
          },
          "hours": {
            "type": "integer",
            "format": "int64",
            "description": "Duration of absence in hours.",
            "example": 8
          },
          "timeFrom": {
            "type": "string",
            "format": "datetime",
            "description": "start of absence.",
            "example": "2023-02-25 08:00:00"
          },
          "timeUntil": {
            "type": "string",
            "format": "datetime",
            "description": "nd of absence.",
            "example": "2023-02-25 17:00:00"
          },
          "companyNo": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "maximum": 999999,
            "description": "The CompanyNo identifies the customer via the corresponding number in the mandate system.",
            "example": 25
          },
          "personnelNo": {
            "type": "string",
            "description": "Id of the person/(human) service provider in the external system.",
            "minLength": 1,
            "maxLength": 50,
            "example": "1258"
          },
          "holiday": {
            "type": "boolean",
            "description": "Is the absence due to a holiday?."
          },
          "timePeriodCode": {
            "type": "integer",
            "format": "int64",
            "minimum": 5750001,
            "maximum": 5759999,
            "description": "C575 - Predefined time periods\n20 - Ganzer Tag - entire day\n40 - Vormittag - Morning\n60 - Nachmittag - Afternoon.",
            "example": 5750020
          },
          "absenceApplicationId": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "maximum": 9999999999,
            "description": "Indenties the application for this absence.",
            "example": 69874
          },
          "locked": {
            "type": "boolean",
            "description": "This absence is locked for change."
          },
          "origin": {
            "type": "string",
            "maxLength": 10,
            "description": "The system of origin.",
            "example": "20"
          },
          "originId": {
            "type": "string",
            "maxLength": 50,
            "description": "Id of the system of origin.",
            "example": "1023789456"
          }
        },
        "required": [
          "absenceId",
          "serviceProviderId",
          "serviceProviderType",
          "dateOfAbsence",
          "hours",
          "companyNo",
          "personnelNo",
          "holiday",
          "locked",
          "origin",
          "originId"
        ],
        "description": "Represents an absense entry."
      },
      "finanaceCaccEntry": {
        "title": "Entry",
        "type": "object",
        "description": "Represents a company accounting entry.",
        "properties": {
          "companyNo": {
            "type": "integer",
            "minimum": 1,
            "maximum": 999999,
            "example": 123456,
            "format": "int64",
            "description": "The CompanyNo identifies the customer via the corresponding number in the mandate system."
          },
          "caccEntryNo": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9999999999,
            "example": 12345,
            "description": "Unique identifier of entry in combination with the CompanyNo."
          },
          "costCenterNo": {
            "type": "string",
            "maxLength": 6,
            "description": "Cost center identifier.",
            "minLength": 1,
            "example": "135"
          },
          "costUnitNo": {
            "type": "string",
            "maxLength": 20,
            "description": "Cost unit identifier.",
            "example": "6548217"
          },
          "orderNo": {
            "type": "string",
            "maxLength": 20,
            "description": "The OrderNo identifies the order to be booked in accounting. This is the actual order no of the order.",
            "example": "4712"
          },
          "salesChannel": {
            "type": "string",
            "maxLength": 3,
            "example": "20",
            "description": "Identifies the sale channel."
          },
          "costType": {
            "type": "string",
            "maxLength": 10,
            "example": "4547",
            "description": "Type that the item is booked in."
          },
          "period": {
            "type": "integer",
            "example": 202401,
            "format": "int64",
            "minimum": 1,
            "maximum": 999999,
            "description": "booing period of the entry."
          },
          "budgetActual": {
            "type": "string",
            "description": "B => Budget / P => Plan / I => Ist / K => Ker.",
            "maxLength": 1,
            "example": "I"
          },
          "origin": {
            "type": "string",
            "maxLength": 10,
            "example": "ISRW",
            "description": "System of origin the order."
          },
          "originId": {
            "type": "string",
            "maxLength": 50,
            "description": "Id of the system of origin the order.",
            "example": "1023789456"
          },
          "voucherType": {
            "type": "string",
            "maxLength": 4,
            "example": "Budg",
            "description": "Type of booking."
          },
          "voucherNo": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9999999999,
            "example": 658421,
            "description": "Booking no / receipt no / voucher no on origin system."
          },
          "voucherDate": {
            "type": "string",
            "format": "date",
            "example": "2024-02-24",
            "description": "Date of the receipt/voucher."
          },
          "text": {
            "type": "string",
            "maxLength": 1000,
            "example": "Budget 202403",
            "description": "Booking text."
          },
          "amountBSC": {
            "type": "number",
            "format": "double",
            "description": "Amount of the voucher in the given currency."
          },
          "currency": {
            "type": "string",
            "maxLength": 3,
            "example": "EUR",
            "description": "Currency ISO code."
          },
          "amount": {
            "type": "number",
            "example": 2,
            "format": "double",
            "description": "Amount in the unit set by CostType."
          }
        },
        "required": [
          "companyNo",
          "caccEntryNo",
          "costType",
          "budgetActual",
          "origin",
          "voucherDate",
          "text",
          "amountBSC"
        ]
      },
      "purchaseSupplier": {
        "type": "object",
        "title": "Supplier",
        "description": "Represents a supplier entry.",
        "properties": {
          "changeId": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9999999999,
            "description": "ChangeId of the entry.",
            "example": 322784
          },
          "changeDate": {
            "type": "string",
            "format": "date-time",
            "description": "ChangeDate of the entry.",
            "example": "2022-04-25 09:30:00"
          },
          "bpAddrID": {
            "type": "integer",
            "format": "int64",
            "maximum": 2147483647,
            "minimum": 1,
            "description": "performis Address ID - This ID uniquely identifies an address in performis. For example, ID \\\"629\\\" for address \\\"Infosystem AG, Wil\\\". To identify the address, either the performis address ID (BpAddrID) or the ID of the external system (ExternalBpAddrID) is required."
          },
          "externalBPEmployeeID": {
            "type": "string",
            "maxLength": 50,
            "description": "Third-Party ID of employee, which is the selected recipient of the selected type of document.",
            "example": "K36584"
          },
          "origin": {
            "type": "string",
            "maxLength": 10,
            "description": "Origin of the business partner, name of the third-party system. Business partners and addresses with an origin can't be edited in performis.",
            "example": "ISBRW"
          },
          "active": {
            "type": "boolean",
            "description": "usually the API will respond with this structure, when the maintenance window is active and the window has started.",
            "default": true
          },
          "modifyUser": {
            "type": "string",
            "maxLength": 30,
            "description": "User which last modified the entry.",
            "example": "STJ"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date the entry was last modified",
            "example": "2024-01-30T11:46:59"
          },
          "supplierId": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9999999999,
            "description": "Internal ID of the entry.",
            "example": 322784
          },
          "externalSupplierId": {
            "type": "string",
            "maxLength": 50,
            "description": "Third-Party ID of supplier.",
            "example": "S-35-50932"
          },
          "isLocked": {
            "type": "boolean",
            "description": "Entry can only be modified by creator.",
            "default": false
          },
          "supplierNo": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9999999999,
            "description": "Supplier No.",
            "example": 322784
          },
          "supplierCategoryCode": {
            "type": "integer",
            "format": "int64",
            "minimum": 24650001,
            "maximum": 24659999,
            "description": "C2465 - Category of the supplier.",
            "example": 24650001
          },
          "supplierRatingCode": {
            "type": "integer",
            "format": "int64",
            "minimum": 24660001,
            "maximum": 24669999,
            "description": "C2466 - User code to set the rating of the supplier.",
            "example": 24660003
          },
          "ourCustomerNo": {
            "type": "string",
            "maxLength": 10,
            "description": "Our customer identification with the supplier.",
            "example": "K2711"
          },
          "paymentTermsCode": {
            "type": "integer",
            "format": "int64",
            "minimum": 270001,
            "maximum": 279999,
            "description": "C27 - Payment terms with the supplier.",
            "example": 270004
          },
          "orderPrintCopies": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 99,
            "description": "Number of copies of the order to ne printed.",
            "example": 2
          },
          "orderPrintPrices": {
            "type": "boolean",
            "description": "Are the prices printed on the order."
          },
          "orderTypeCode": {
            "type": "integer",
            "format": "int64",
            "minimum": 24620001,
            "maximum": 24629999,
            "description": "C2462 - Type of order, by post / by e-mail / by telephone / by fax / Internet / etc.",
            "example": 24620003
          },
          "confirmationPeriod": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 999,
            "description": "Number of days added to order date until reminder for confiramation date.",
            "example": 10
          },
          "reminderPeriodDispatchAdvice": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 999,
            "description": "Number of days (+confirmationPeriod) added to order date until reminder for confiramation.",
            "example": 5
          },
          "reminderPeriodDelivery": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 999,
            "description": "Number of days added to promissed delivery date until reminder for delivery.",
            "example": 5
          },
          "currency": {
            "type": "string",
            "maxLength": 3,
            "description": "Currency ISO code.",
            "example": "EUR"
          },
          "purchaseCostsInPercentage": {
            "type": "number",
            "format": "double",
            "minimum": 0.01,
            "maximum": 100,
            "description": "Expected percentage of procurement costs for the supplier invoice."
          },
          "taxSystem": {
            "type": "string",
            "maxLength": 2,
            "description": "Country of tax system as ISO code.",
            "example": "AT"
          },
          "incoTermsFreightTypeCode": {
            "type": "integer",
            "format": "int64",
            "minimum": 24630001,
            "maximum": 24639999,
            "description": "C2463 - Incoterms define the responsibilities of exporters and importers in the arrangement of shipments and the transfer of liability involved at various stages of the transaction.\nFreight type e.g. lorry, post, truck, courier, collection etc.",
            "example": 24630002
          },
          "incoTermsCode": {
            "type": "integer",
            "format": "int64",
            "minimum": 24670001,
            "maximum": 24679999,
            "description": "C2467 - Incoterms define the responsibilities of exporters and importers in the arrangement of shipments and the transfer of liability involved at various stages of the transaction.",
            "example": 24670001
          },
          "deliveryDuration": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9999,
            "description": "Delivery time for order proposal calculations and warning in the order programme (e.g. 5 days delivery time no longer works for tomorrow) Specification in whole days.",
            "example": 14
          },
          "deliveryDays": {
            "type": "string",
            "maxLength": 7,
            "description": "Delivery days from dropdown box (multiselect) for delivery date proposal, default Monday - Friday checked. Bitmap, starting with Monday (1st digit) 0=not selected, 1=selected.",
            "example": "1010100"
          },
          "invoiceBpAddrID": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 2147483647,
            "description": "performis Address ID - This ID uniquely identifies an address in performis. For example, ID \\\"629\\\" for address \\\"Infosystem AG, Wil\\\". To identify the address, either the performis address ID (BpAddrID) or the ID of the external system (ExternalBpAddrID) is required.",
            "example": 236571
          },
          "invoiceExternalBpAddrID": {
            "type": "string",
            "maxLength": 50,
            "description": "Third-Party ID of employee, which is the selected recipient of the selected type of document.",
            "example": "329-517"
          },
          "pickupBpAddrID": {
            "type": "integer",
            "format": "int64",
            "maximum": 2147483647,
            "minimum": 1,
            "description": "performis Address ID - This ID uniquely identifies an address in performis. For example, ID \\\"629\\\" for address \\\"Infosystem AG, Wil\\\". To identify the address, either the performis address ID (BpAddrID) or the ID of the external system (ExternalBpAddrID) is required.",
            "example": 22
          },
          "pickupExternalBpAddrID": {
            "type": "string",
            "maxLength": 50,
            "description": "Third-Party ID of employee, which is the selected recipient of the selected type of document.",
            "example": "P27"
          },
          "notes": {
            "type": "string",
            "maxLength": 2000,
            "description": "Supplier related notes and remarks.",
            "example": "Every year in early summer, the supplier runs a promotion on all metal goods. Internal task recorded in the info centre so that we can place a bulk order for screws and fasteners."
          }
        },
        "required": [
          "bpAddrID",
          "origin",
          "active",
          "supplierId",
          "externalSupplierId",
          "supplierNo",
          "c2465SupplierCategory",
          "ourCustomerNo",
          "c27PaymentTerms",
          "orderPrintCopies",
          "orderPrintPrices",
          "currency",
          "deliveryDays",
          "invoiceBpAddrID",
          "pickupBpAddrID"
        ]
      },
      "purchaseOrder": {
        "type": "object",
        "title": "PurchaseOrder",
        "description": "Represents a purchase order entry.",
        "properties": {
          "changeId": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9999999999,
            "description": "ChangeId of the entry.",
            "example": 322784
          },
          "changeDate": {
            "type": "string",
            "format": "date-time",
            "description": "ChangeDate of the entry.",
            "example": "2022-04-25 09:30:00"
          },
          "origin": {
            "type": "string",
            "maxLength": 10,
            "description": "The system of origin the order.",
            "example": "ISBRW"
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "usually the API will respond with this structure, when the maintenance window is active and the window has started."
          },
          "modifyUser": {
            "type": "string",
            "maxLength": 30,
            "description": "User which last modified the entry.",
            "example": "STJ"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date the entry was last modified",
            "example": "2024-01-30T11:46:59"
          },
          "purchaseOrderNo": {
            "type": "string",
            "maxLength": 20,
            "description": "Generated order number according to code 2451.",
            "example": "BE2024.011"
          },
          "companyNo": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "maximum": 999999,
            "description": "Company no for which the codevalue is available. 0 = all companies.",
            "example": 25
          },
          "supplierID": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9999999999,
            "description": "Internal ID of the entry.",
            "example": 322784
          },
          "purchaseOrderTypeCode": {
            "type": "integer",
            "format": "int64",
            "minimum": 24620001,
            "maximum": 24629999,
            "description": "C2462 - How was the order placed? Post, eMail,...",
            "example": 24620001
          },
          "purchaseOrderStateCode": {
            "type": "integer",
            "format": "int64",
            "minimum": 24520001,
            "maximum": 24529999,
            "description": "C2452 - State of the order e.g. recorded, placed, partially delivered,...",
            "example": 24520002
          },
          "currency": {
            "type": "string",
            "maxLength": 3,
            "description": "Currency as ISO code.",
            "example": "CHF"
          },
          "isPurchaseOrderSent": {
            "type": "boolean",
            "description": "Flag if order was been sent."
          },
          "purchaseOrderSendDate": {
            "type": "string",
            "format": "datetime",
            "description": "Date the order was sent.",
            "example": "2024-03-01"
          },
          "deliveryDatePlanned": {
            "type": "string",
            "format": "datetime",
            "description": "Desired cross-item delivery date, if no confirmation, this is written to the delivery date.",
            "example": "2024-03-15"
          },
          "deliveryDate": {
            "type": "string",
            "format": "datetime",
            "description": "Confirmed cross-item delivery date.",
            "example": "2024-03-17"
          },
          "priceDate": {
            "type": "string",
            "format": "datetime",
            "description": "Date of the price information the purchase is based on.",
            "example": "2024-02-25"
          },
          "desadvDatePlanned": {
            "type": "string",
            "format": "datetime",
            "description": "Date the supplier should confirm the order.",
            "example": "2024-01-05"
          },
          "desadvDate": {
            "type": "string",
            "format": "datetime",
            "description": "Date the order was confirmed.",
            "example": "2024-01-05"
          },
          "desadvNo": {
            "type": "string",
            "maxLength": 40,
            "description": "Order confirmation no.",
            "example": "A18.223232"
          },
          "storageId": {
            "type": "integer",
            "format": "Int64",
            "minimum": 0,
            "maximum": 9999999999,
            "description": "Identifier of the storage.",
            "example": 2315
          },
          "storageLocationId": {
            "type": "integer",
            "format": "Int64",
            "minimum": 0,
            "maximum": 9999999999,
            "description": "Identifier of the storage location.",
            "example": 231
          },
          "deliveryLocationCode": {
            "type": "integer",
            "format": "int64",
            "minimum": 24640001,
            "maximum": 24649999,
            "description": "C2464 - Where is the purchase delivered? Delivery address, pickup addess,...",
            "example": 24640002
          },
          "freightTypeCode": {
            "type": "integer",
            "format": "int64",
            "minimum": 24630001,
            "maximum": 24639999,
            "description": "C2463 - How is the purchase delivered? Pick up, lorry, post,...",
            "example": 24630010
          },
          "exchangeRate": {
            "type": "number",
            "format": "double",
            "minimum": 0.000001,
            "maximum": 99999999.999999,
            "description": "Exchange rate used for purchase when not in own currency.",
            "example": 0.954
          },
          "incotermCode": {
            "type": "integer",
            "format": "int64",
            "minimum": 24670001,
            "maximum": 24679999,
            "description": "C2467 - INCO terms applying for this order.",
            "example": 24670002
          },
          "incotermPlace": {
            "type": "string",
            "maxLength": 50,
            "description": "Agreed place of delivery where the risk passes from the seller to the buyer.",
            "example": "Zürich"
          },
          "plantDeliveryDateRequested": {
            "type": "string",
            "format": "datetime",
            "description": "Desired cross-item delivery date to a plant, if no confirmation, this is written to the delivery date.",
            "example": "2024-05-06"
          },
          "plantDeliveryDate": {
            "type": "string",
            "format": "datetime",
            "description": "Confirmed cross-item delivery date to a plant.",
            "example": "2024-05-05"
          },
          "buyerBpId": {
            "type": "integer",
            "format": "Int64",
            "minimum": 1,
            "maximum": 9999999999,
            "description": "Unique identifier of the buyer.",
            "example": 3264
          },
          "supplierBpId": {
            "type": "integer",
            "format": "Int64",
            "minimum": 1,
            "maximum": 9999999999,
            "description": "Unique identifier of the supplier.",
            "example": 6584
          },
          "supplierBpAddrId": {
            "type": "integer",
            "format": "Int64",
            "minimum": 1,
            "maximum": 9999999999,
            "description": "Unique identifier of the supplier address.",
            "example": 1394
          },
          "deliveryBpId": {
            "type": "integer",
            "format": "Int64",
            "minimum": 1,
            "maximum": 9999999999,
            "description": "Unique identifier of the shipping partner e.g. courier, carrier,...",
            "example": 2345
          },
          "deliveryBpAddrId": {
            "type": "integer",
            "format": "Int64",
            "minimum": 1,
            "maximum": 9999999999,
            "description": "Unique identifier of the shipping partner address.",
            "example": 3215
          },
          "supplierNote": {
            "type": "string",
            "maxLength": 2000,
            "description": "Addtional information about the supplier.",
            "example": "Every year in early summer, the supplier runs a promotion on all metal goods. Internal task recorded in the info centre so that we can place a bulk order for screws and fasteners."
          },
          "remarkInternal": {
            "type": "string",
            "maxLength": 2000,
            "description": "Internal remarks about the supplier.",
            "example": "Promised delivery dates are never met."
          },
          "remarkExternal": {
            "type": "string",
            "maxLength": 2000,
            "description": "Remarks added to the supplier order.",
            "example": "Please let us know the delivery dates in more detail."
          },
          "openingText": {
            "type": "string",
            "maxLength": 4000,
            "description": "Text opening the supplier order.",
            "example": "You have received the following order. Please check the items and confirm the delivery by means of an order confirmation."
          },
          "footerText": {
            "type": "string",
            "maxLength": 4000,
            "description": "Final remarks concerning the order put in the footer of the order.",
            "example": "Please inform us of any price changes in writing at the e-mail address purchase@memor.ch. Thank you very much."
          },
          "attributeValueSet": {
            "type": "object",
            "$ref": "#/components/schemas/attributeValueSet"
          },
          "dispogroupCode": {
            "type": "integer",
            "format": "int64",
            "minimum": 4020001,
            "maximum": 4029999,
            "description": "C402 - Dispo group.",
            "example": 4020005
          },
          "yourRef": {
            "type": "string",
            "maxLength": 100,
            "description": "Reference that helps reidentify the purchase.",
            "example": "E24-26873-F3"
          },
          "pos": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "posnr": {
                  "type": "number",
                  "format": "double",
                  "minimum": 0,
                  "maximum": 9999.999,
                  "description": "Item number. Format and conditions via company settings.",
                  "example": 2.2
                },
                "positionTypeCode": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": 24550001,
                  "maximum": 24559999,
                  "description": "C2455 - Type of the position\n1: article\n2: amount\n3: text.",
                  "example": 24550003
                },
                "articleId": {
                  "type": "integer",
                  "format": "Int64",
                  "minimum": 1,
                  "maximum": 9999999999,
                  "description": "Supplier identifier of the article.",
                  "example": 365972
                },
                "text": {
                  "type": "string",
                  "maxLength": 2000,
                  "description": "Product text.",
                  "example": "WD-40"
                },
                "coefficientLameLime": {
                  "type": "number",
                  "format": "double",
                  "minimum": 0,
                  "maximum": 9999999.999999,
                  "description": "Coefficient stock unit -> delivery unit.",
                  "example": 1
                },
                "coefficientLimeLame": {
                  "type": "number",
                  "format": "double",
                  "minimum": 0,
                  "maximum": 9999999.999999,
                  "description": "Coefficient delivery unit -> stock unit.",
                  "example": 1
                },
                "coefficientLimeLipe": {
                  "type": "number",
                  "format": "double",
                  "minimum": 0,
                  "maximum": 9999999.999999,
                  "description": "Coefficient delivery unit -> price unit.",
                  "example": 2
                },
                "coefficientLipeLime": {
                  "type": "number",
                  "format": "double",
                  "minimum": 0,
                  "maximum": 9999999.999999,
                  "description": "Coefficient price -> delivery unit.",
                  "example": 0.5
                },
                "totalQuantityLAME": {
                  "type": "number",
                  "format": "double",
                  "minimum": 0,
                  "maximum": 9999999999.9999,
                  "description": "Total quantity in stock units.",
                  "example": 1000
                },
                "totalQuantityLIME": {
                  "type": "number",
                  "format": "double",
                  "minimum": 0,
                  "maximum": 9999999999.9999,
                  "description": "Total quantity in delivery units.",
                  "example": 100
                },
                "totalQuantityLIPE": {
                  "type": "number",
                  "format": "double",
                  "minimum": 0,
                  "maximum": 9999999999.9999,
                  "description": "Total quantity in price units.",
                  "example": 200
                },
                "limeCode": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": 280001,
                  "maximum": 289999,
                  "description": "C28 - Delivery unit code.",
                  "example": 280005
                },
                "lime": {
                  "type": "string",
                  "description": "Delivery unit.",
                  "maxLength": 40,
                  "example": "pallet"
                },
                "lipeCode": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": 280001,
                  "maximum": 289999,
                  "description": "C28 - Price unit code.",
                  "example": 280002
                },
                "lipe": {
                  "type": "string",
                  "description": "Price unit.",
                  "maxLength": 40,
                  "example": "pcs"
                },
                "preisartCode": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": 24580001,
                  "maximum": 24589999,
                  "description": "C2458 - Pricetype\n1: Normal price\n2: Special offer price.",
                  "example": 24580002
                },
                "price": {
                  "type": "number",
                  "format": "double",
                  "minimum": 0,
                  "maximum": 9999999999.9999,
                  "description": "Price per unit.",
                  "example": 2568.25
                },
                "distributeBool": {
                  "type": "boolean",
                  "description": "Cost distribution to this item."
                },
                "distributionKeyCode": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": 24560001,
                  "maximum": 24569999,
                  "description": "C2456 - Positions are split\n1: manually\n2: by amount\n3: by quantity.",
                  "example": 24560001
                },
                "mvatCode": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": 230001,
                  "maximum": 239999,
                  "description": "C23 - Type of applied tax (vat, input tax).",
                  "example": 230006
                },
                "discountPercent": {
                  "type": "number",
                  "format": "double",
                  "minimum": 0,
                  "maximum": 999.99,
                  "description": "Discount in per cent.",
                  "example": 2.5
                },
                "surchargePercent": {
                  "type": "number",
                  "format": "double",
                  "minimum": 0,
                  "maximum": 999.99,
                  "description": "Surcharge in per cent.",
                  "example": 3.2
                },
                "discountAmount": {
                  "type": "number",
                  "format": "double",
                  "minimum": 0,
                  "maximum": 1000000000000000000,
                  "description": "Discount in money.",
                  "example": 3658.51
                },
                "surchargeAmount": {
                  "type": "number",
                  "format": "double",
                  "minimum": 0,
                  "maximum": 1000000000000000000,
                  "description": "Surcharge in money.",
                  "example": 5026.73
                },
                "storageId": {
                  "type": "integer",
                  "format": "Int64",
                  "minimum": 0,
                  "maximum": 9999999999,
                  "description": "Identifier of the storage.",
                  "example": 2315
                },
                "storageLocationId": {
                  "type": "integer",
                  "format": "Int64",
                  "minimum": 0,
                  "maximum": 9999999999,
                  "description": "Identifier of the storage location.",
                  "example": 231
                },
                "freightTypeCode": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": 24630001,
                  "maximum": 24639999,
                  "description": "C2463 - How is the purchase delivered? Pick up, lorry, post,...",
                  "example": 24630005
                },
                "priceOriginCode": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": 24590001,
                  "maximum": 24599999,
                  "description": "C2459 - Origin of the price information\n1: Set manually\n2: Supplier article price\n3: Supplier article scale price\n4: Current materials purchase price.",
                  "example": 24590002
                },
                "assetNo": {
                  "type": "string",
                  "maxLength": 20,
                  "description": "Identifier of the asset the order is placed for.",
                  "example": "digger 254"
                },
                "costCenterNo": {
                  "type": "string",
                  "maxLength": 20,
                  "description": "Cost center responsible for the order.",
                  "example": "2-563.7"
                },
                "costUnitNo": {
                  "type": "string",
                  "maxLength": 20,
                  "description": "Cost unit responsible for the order.",
                  "example": "6-7.25"
                },
                "salesChannelNo": {
                  "type": "string",
                  "maxLength": 20,
                  "description": "Identifies the sale channel.",
                  "example": "44-2579"
                },
                "orderNo": {
                  "type": "string",
                  "maxLength": 20,
                  "description": "Identifier of the order sent set by the ordering system.",
                  "example": "20240315.02"
                },
                "attributeValueSet": {
                  "type": "object"
                },
                "deliveryDateRequested": {
                  "type": "string",
                  "format": "datetime",
                  "description": "Was a request to commit to a delivery date sent to the supplier?.",
                  "example": "2024-04-21"
                },
                "deliveryDate": {
                  "type": "string",
                  "format": "datetime",
                  "description": "Commited delivery date by supplier.",
                  "example": "2024-04-30"
                },
                "plantDeliveryDateRequested": {
                  "type": "string",
                  "format": "datetime",
                  "description": "Was a request to commit to a delivery date to the plant sent to the supplier?.",
                  "example": "2024-04-21"
                },
                "plantDeliveryDate": {
                  "type": "string",
                  "format": "datetime",
                  "description": "Commited delivery date to plant by supplier.",
                  "example": "2024-04-30"
                },
                "materialBooking": {
                  "type": "boolean",
                  "description": "Shows if the item is a physical product or, for example, a service."
                },
                "countryOfOrigin": {
                  "type": "string",
                  "maxLength": 2,
                  "description": "ISO code of country of origin.",
                  "example": "CN"
                },
                "tariffCode": {
                  "type": "string",
                  "maxLength": 20,
                  "description": "C28 - Customs tariff number.",
                  "example": "12412"
                },
                "desadvDate": {
                  "type": "string",
                  "format": "datetime",
                  "description": "Date the supplier confirmed the order.",
                  "example": "2024-01-05"
                },
                "desadvNoSupplier": {
                  "type": "string",
                  "maxLength": 40,
                  "description": "Order confirmation no.",
                  "example": "A23.98709"
                },
                "desadvSupplierDate": {
                  "type": "string",
                  "format": "datetime",
                  "description": "Date the supplier should confirm the order.",
                  "example": "2024-05-04"
                },
                "fullyChargedBool": {
                  "type": "boolean",
                  "description": "Indicates whether the purchase position has been fully booked or whether it is still partially open."
                },
                "netAmount": {
                  "type": "number",
                  "format": "double",
                  "minimum": 0.01,
                  "maximum": 1000000000000000000,
                  "description": "Net amount (gross - tax) of the order.",
                  "example": 2159.53
                },
                "grossAmount": {
                  "type": "number",
                  "format": "double",
                  "minimum": 0.01,
                  "maximum": 1000000000000000000,
                  "description": "Total cost of order.",
                  "example": 2436.85
                },
                "taxAmount": {
                  "type": "number",
                  "format": "double",
                  "minimum": 0.01,
                  "maximum": 1000000000000000000,
                  "description": "Amount of taxes for the order.",
                  "example": 277.32
                },
                "printBool": {
                  "type": "boolean",
                  "description": "Determines whether an item is printed on the order document or not, default = 1."
                }
              },
              "required": [
                "posnr",
                "c2455PositionType",
                "articleId",
                "text",
                "price",
                "distributeBool",
                "c2456DistributionKey",
                "c23Mvat",
                "storageId",
                "storageLocationId",
                "c2463FreightType",
                "c2459PriceOrigin",
                "orderNo",
                "deliveryDateRequested",
                "deliveryDate",
                "plantDeliveryDateRequested",
                "plantDeliveryDate",
                "materialBooking",
                "tariffCode",
                "desadvDate",
                "desadvNoSupplier",
                "desadvSupplierDate",
                "fullyChargedBool",
                "netAmount",
                "grossAmount",
                "taxAmount",
                "printBool"
              ]
            }
          }
        },
        "required": [
          "origin",
          "active",
          "purchaseOrderNo",
          "companyNo",
          "supplierID",
          "currency"
        ]
      },
      "materialManagementDeliveryNote": {
        "type": "object",
        "title": "DeliveryNote",
        "description": "Represents a delivery note entry.",
        "properties": {
          "deliveryNoteNo": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 999999999999,
            "description": "Unique internal identifier of the delivery note.",
            "example": 326547
          },
          "externalDeliveryNoteNo": {
            "type": "string",
            "maxLength": 20,
            "description": "Unique identifier of the delivery note given by the supplier.",
            "example": "dn240318001"
          },
          "entryTypeCode": {
            "type": "integer",
            "format": "int64",
            "minimum": 4120001,
            "maximum": 4129999,
            "description": "C412 - Trigger of teh delivery note (purchase, retuning itmes,...).",
            "example": 4120004
          },
          "deliveryDate": {
            "type": "string",
            "format": "datetime",
            "description": "Date of the delivery, usally the creation date of the delivery note.",
            "example": "2024-04-01"
          },
          "companyNo": {
            "type": "integer",
            "format": "int32",
            "maximum": 999999,
            "minimum": 0,
            "description": "Company no for which the codevalue is available. 0 = all companies.",
            "example": 5
          },
          "storageLocationFrom": {
            "type": "integer",
            "format": "Int64",
            "minimum": 0,
            "maximum": 9999999999,
            "description": "Identifier of the delivering storage location.",
            "example": 231
          },
          "storageLocationTo": {
            "type": "integer",
            "format": "Int64",
            "minimum": 0,
            "maximum": 9999999999,
            "description": "Identifier of the receiving storage location.",
            "example": 235
          },
          "orderNo": {
            "type": "string",
            "maxLength": 20,
            "description": "Our order number ussed when sending the purchase.",
            "example": "25-240318-012"
          },
          "costCenterNo": {
            "type": "string",
            "maxLength": 20,
            "description": "Cost center responsible for the order.",
            "example": "12-259.30"
          },
          "costUnitNo": {
            "type": "string",
            "maxLength": 20,
            "description": "Cost unit responsible for the order.",
            "example": "25.3"
          },
          "pos": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "deliveryNotePos": {
                  "type": "number",
                  "format": "double",
                  "minimum": 0,
                  "maximum": 9999.999,
                  "description": "Sequence number of articles on the delivery note.",
                  "example": 3.1
                },
                "orderNoPos": {
                  "type": "number",
                  "format": "double",
                  "minimum": 0,
                  "maximum": 9999.999,
                  "description": "Position of article on the placed order.",
                  "example": 10.1
                },
                "articleId": {
                  "type": "integer",
                  "format": "Int64",
                  "minimum": 1,
                  "maximum": 9999999999,
                  "description": "Supplier identifier of the article.",
                  "example": 862785
                },
                "amount": {
                  "type": "number",
                  "format": "double",
                  "minimum": 0,
                  "maximum": 9999999999.9999,
                  "description": "Amount of the given article in the given position.",
                  "example": 2.5
                },
                "storageLocationFrom": {
                  "type": "integer",
                  "format": "Int64",
                  "minimum": 0,
                  "maximum": 9999999999,
                  "description": "Identifier of the delivering storage location.",
                  "example": 231
                },
                "storagePlaceFrom": {
                  "type": "integer",
                  "format": "Int64",
                  "minimum": 0,
                  "maximum": 9999999999,
                  "description": "Identifier of the delivering storage place.",
                  "example": 23153
                },
                "storageLocationTo": {
                  "type": "integer",
                  "format": "Int64",
                  "minimum": 0,
                  "maximum": 9999999999,
                  "description": "Identifier of the receiving storage location.",
                  "example": 235
                },
                "storagePlaceTo": {
                  "type": "integer",
                  "format": "Int64",
                  "minimum": 0,
                  "maximum": 9999999999,
                  "description": "Identifier of the receiving storage place.",
                  "example": 23537
                }
              },
              "required": [
                "deliveryNotePos",
                "orderNoPos",
                "articleId",
                "amount",
                "storageLocationFrom",
                "storagePlaceFrom"
              ]
            }
          }
        },
        "required": [
          "deliveryNoteNo",
          "c412EntryType",
          "deliveryDate",
          "companyNo",
          "storageLocationFrom",
          "storageLocationTo",
          "pos"
        ]
      },
      "materialManagementArticle": {
        "type": "object",
        "title": "MaterialManagementArticle",
        "description": "Represents a (material management) article entry.",
        "properties": {
          "changeId": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9999999999,
            "description": "ChangeId of the entry.",
            "example": 322784,
            "readOnly": true
          },
          "changeDate": {
            "type": "string",
            "format": "date-time",
            "description": "ChangeDate of the entry.",
            "example": "2022-04-25 09:30:00",
            "readOnly": true
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "Is this entry active or not?"
          },
          "modifyUser": {
            "type": "string",
            "maxLength": 30,
            "description": "User who last modified the entry.",
            "example": "STJ",
            "readOnly": true
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date the entry was last modified.",
            "example": "2024-01-30T11:46:59",
            "readOnly": true
          },
          "articleId": {
            "type": "integer",
            "format": "Int64",
            "minimum": 1,
            "maximum": 9999999999,
            "description": "Unique identifier of the article.",
            "example": 236596874
          },
          "origin": {
            "type": "string",
            "maxLength": 200,
            "description": "The entry's system of origin.",
            "example": "ISBRW"
          },
          "externalArticleId": {
            "type": "string",
            "maxLength": 200,
            "description": "Id of the article in the external system.",
            "example": "C47C97C0F4B04096855955CB5AD47444"
          },
          "articleNo": {
            "type": "string",
            "maxLength": 20,
            "description": "Article number for identification by the users.",
            "example": "A123.456-B"
          },
          "companyNo": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 999999,
            "description": "Company identification of the entry.",
            "example": 37
          },
          "description": {
            "type": "string",
            "maxLength": 300,
            "description": "Article description for external usage.",
            "example": "UTTO VT 0W-20  Achsen/ Bremsöl WB 102"
          },
          "shortDescription": {
            "type": "string",
            "maxLength": 80,
            "nullable": false,
            "description": "Article description for internal usage.",
            "example": "UTTO VT 0W-20-WB 102"
          },
          "stockUnitCode": {
            "type": "integer",
            "format": "int64",
            "minimum": 280001,
            "maximum": 289999,
            "nullable": false,
            "description": "C28 - Stock unit code.",
            "example": 280003
          },
          "priceUnitCode": {
            "type": "integer",
            "format": "int64",
            "minimum": 280001,
            "maximum": 289999,
            "nullable": false,
            "description": "C28 - Price unit code.",
            "example": 280003
          },
          "conversionFactorStockUnitPriceUnit": {
            "type": "number",
            "format": "decimal",
            "minimum": 0.000001,
            "maximum": 9999999.999999,
            "description": "The conversion factor to convert StockUnit to PriceUnit e.g. 1 (stockUnitCode).",
            "example": 1
          },
          "conversionFactorPriceUnitStockUnit": {
            "type": "number",
            "format": "decimal",
            "minimum": 0.000001,
            "maximum": 9999999.999999,
            "description": "The conversion factor to convert PriceUnit to StockUnit e.g. 12 (priceUnitCode).",
            "example": 12
          },
          "stockManagement": {
            "type": "boolean",
            "description": "Is the stock level managed on a quantity basis?"
          },
          "inventoryManagement": {
            "type": "boolean",
            "description": "Is the stock level managed on an inventory basis?"
          },
          "articleGroupCode": {
            "type": "integer",
            "format": "int64",
            "minimum": 4590001,
            "maximum": 4599999,
            "description": "C459 - Article group code.",
            "example": 4590003
          },
          "ean": {
            "type": "string",
            "maxLength": 13,
            "description": "EAN of the article.",
            "example": "7610900129966",
            "nullable": true
          },
          "customsTariffNo": {
            "type": "string",
            "maxLength": 20,
            "description": "Customs tariff number.",
            "nullable": true
          },
          "countryOfOrigin": {
            "type": "string",
            "maxLength": 2,
            "description": "ISO code of the country of origin.",
            "example": "CH"
          },
          "vat": {
            "type": "array",
            "items": {
              "properties": {
                "taxSystem": {
                  "type": "string",
                  "maxLength": 2,
                  "description": "Country of tax system as ISO code.",
                  "example": "AT"
                },
                "vatTypeCode": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": 830001,
                  "maximum": 839999,
                  "description": "C83 - Tax type (normal rate, reduced rate,...).",
                  "example": 830002
                }
              },
              "required": [
                "taxSystem",
                "vatTypeCode"
              ]
            }
          },
          "localizations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "language": {
                  "type": "string",
                  "maxLength": 2,
                  "description": "Language as ISO code.",
                  "example": "EN"
                },
                "description": {
                  "type": "string",
                  "maxLength": 300,
                  "description": "Full description in the given language.",
                  "example": "Cardboard box - length = 100mm; width = 50mm; height = 20mm"
                },
                "shortDescription": {
                  "type": "string",
                  "maxLength": 80,
                  "description": "Short description in the given language.",
                  "example": "Cardboard box - (l*w*h) 100*50*20mm"
                }
              },
              "required": [
                "language",
                "description",
                "shortDescription"
              ]
            }
          },
          "attributeValueSet": {
            "$ref": "#/components/schemas/attributeValueSet"
          }
        },
        "required": [
          "articleNo",
          "companyNo",
          "description",
          "shortDescription"
        ]
      },
      "materialManagementArticlePrice": {
        "type": "object",
        "title": "MaterialManagementArticlePrice",
        "properties": {
          "changeId": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9999999999,
            "description": "ChangeId of the entry.",
            "example": 322784
          },
          "changeDate": {
            "type": "string",
            "format": "date-time",
            "description": "ChangeDate of the entry.",
            "example": "2022-04-25 09:30:00"
          },
          "priceId": {
            "type": "integer",
            "format": "Int64",
            "minimum": 1,
            "maximum": 9999999999,
            "description": "Internal identifier of the article price.",
            "example": 32667843
          },
          "origin": {
            "type": "string",
            "maxLength": 200,
            "description": "The entry's system of origin.",
            "example": "ISBRW"
          },
          "externalPriceId": {
            "type": "string",
            "maxLength": 200,
            "description": "Indentificaion of the article price in the external system.",
            "example": "C47C97C0F4B04096855955CB5AD47444"
          },
          "articleId": {
            "type": "integer",
            "format": "Int64",
            "minimum": 1,
            "maximum": 9999999999,
            "description": "Unique identifier of the article.",
            "example": 32667843
          },
          "externalArticleId": {
            "type": "string",
            "maxLength": 50,
            "description": "Id of the article in the external system.",
            "example": "C47C97C0F4B04096855955CB5AD47444"
          },
          "articleNo": {
            "type": "string",
            "maxLength": 20,
            "description": "Article number for identification by the users.",
            "example": "A123.456-B"
          },
          "priceTypeCode": {
            "type": "integer",
            "format": "int64",
            "minimum": 4070001,
            "maximum": 4079999,
            "description": "C4074 - Type of price (standard, avarage, last purchase price).",
            "example": 4070002
          },
          "validFrom": {
            "type": "string",
            "format": "datetime",
            "description": "Date from which the price entry is valid.",
            "example": "2024-03-13"
          },
          "price": {
            "type": "number",
            "format": "decimal",
            "minimum": 0,
            "maximum": 99999999.9999,
            "description": "Unit price in the given currency.",
            "example": 1268.25
          }
        },
        "required": [
          "articleId",
          "c407PriceType",
          "validFrom",
          "price"
        ],
        "description": "Represents a article price entry."
      },
      "attributeValue": {
        "description": "",
        "type": "object",
        "properties": {
          "attributeValueId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Internal identification of attribute value.",
            "format": "int64"
          },
          "attributeDefinitionId": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "description": "Internal identification of attribute definition.",
            "format": "int64"
          },
          "modifyUser": {
            "type": "string",
            "maxLength": 30,
            "description": "User who last modified the entry.",
            "example": "STJ"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date the entry was last modified.",
            "example": "2021-08-31 10:23:10"
          },
          "sortNo": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9999,
            "description": "Position within the attribute value set",
            "example": 3
          },
          "companyNo": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 999999,
            "description": "Company identification of the entry.",
            "example": 37
          },
          "textValue": {
            "type": "string",
            "maxLength": 1000,
            "description": "A string value"
          },
          "numberValue": {
            "type": "number",
            "format": "decimal",
            "description": "Number or decimal value"
          },
          "dateValue": {
            "type": "string",
            "format": "date-time",
            "description": "Date value"
          },
          "boolValue": {
            "type": "boolean",
            "description": "A true or false value"
          },
          "codes": {
            "type": "array",
            "items": {
              "properties": {
                "code": {
                  "minimum": 10000,
                  "maximum": 99999999,
                  "type": "integer",
                  "description": "ID of code",
                  "format": "int64"
                }
              }
            }
          }
        },
        "required": [
          "attributeDefinitionId"
        ]
      },
      "attributeValueSet": {
        "description": "",
        "type": "object",
        "properties": {
          "attributeSetId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Internal identification of attribute set.",
            "format": "int64"
          },
          "attributeValueSetId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Internal identification of attribute value set.",
            "format": "int64"
          },
          "modifyUser": {
            "type": "string",
            "maxLength": 30,
            "description": "User who last modified the entry.",
            "example": "STJ"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date the entry was last modified.",
            "example": "2021-08-31 10:23:10"
          },
          "attributeValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/attributeValue"
            }
          }
        },
        "required": [
          "attributeSetId"
        ]
      },
      "problemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {},
        "title": "ProblemDetails",
        "description": "",
        "x-examples": {
          "example1": {
            "type": "Warning",
            "title": "Sample Title",
            "status": -99,
            "detail": "This is a generic message to provide a sample return of how a message may be returned.",
            "instance": "TEST",
            "property1": null,
            "property2": null
          }
        }
      },
      "maintenanceWindow": {
        "type": "object",
        "additionalProperties": false,
        "title": "MaintenanceWindow",
        "description": "information structure for active maintenance windows.",
        "x-examples": {
          "example-1": {
            "id": 3511,
            "active": true,
            "fromDateTime": "2019-08-24T14:15:22Z",
            "toDateTime": "2019-08-24T14:15:22Z",
            "info": "monthly maintenance for patch installation",
            "clientStartAllowed": false
          }
        },
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 3511,
            "nullable": true,
            "readOnly": true
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "usually the API will respond with this structure, when the maintenance window is active and the window has started."
          },
          "fromDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "start of scheduled maintenance window."
          },
          "toDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "end of scheduled maintenance window."
          },
          "info": {
            "type": "string",
            "example": "monthly maintenance for patch installation",
            "nullable": true
          },
          "clientStartAllowed": {
            "type": "boolean",
            "default": false,
            "description": "defines wether or not clients may continue to work while the maintenance window applies."
          }
        }
      }
    }
  }
}