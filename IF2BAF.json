{
  "openapi": "3.0.2",
  "info": {
    "title": "IF2BAF",
    "version": "v3",
    "contact": {
      "name": "Infosystem AG",
      "email": "support@infosystem.ch",
      "url": "https://www.infosystem.ch"
    },
    "description": "IF2performis Rest API"
  },
  "paths": {
    "/api/v3/master-data/fixed-assets": {
      "get": {
        "summary": "Get a list of fixed assets",
        "tags": [
          "MasterData"
        ],
        "responses": {
          "200": {
            "description": "List of fixed assets",
            "content": {
              "application/json": {
                "example": [
                  {
                    "changeID": 520057,
                    "changeDate": "2024-01-30T14:46:59",
                    "origin": "BBA",
                    "active": true,
                    "modifyUser": "STJ",
                    "modifyDate": "2024-01-30T11:46:59",
                    "fixedAssetNo": "4040000.001",
                    "externalFixedAssetNo": "aasd9lkj-jklajsd",
                    "companyNo": 100,
                    "description": "Kran, 100t",
                    "costCenterNo": "3657"
                  }
                ],
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/fixedAssetDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "getFixedAssets",
        "description": "Returns all fixed assets",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "maxLength": 50
            },
            "in": "header",
            "name": "X-Requesting-System",
            "description": "Identifying the system calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Requesting-User",
            "description": "Identifying the user calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Flow-ID",
            "description": "Optional technical Id (GUID) for call identification."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Optional Searches string for looking up a record within name and searchterm fields.",
            "name": "searchString"
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 2147483647
            },
            "in": "query",
            "name": "skip",
            "description": "Number of records to skip for pagination."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 2147483647
            },
            "in": "query",
            "name": "limit",
            "description": "Maximum number of records to return."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "changesSinceDateTime",
            "description": "Get all the entities which were added/edited after a specific date and time. Cannot be used together with search\\r\\nparameters (searchString, internalOrderId,\\r\\nexternalOrderId)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "changesSinceChangeId",
            "description": "Get all the entities which were added/edited after a specific change id. Cannot be used together with search\\r\\nparameters (searchString, internalOrderId,\\r\\nexternalOrderId)."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "maximum": 9999999999
            },
            "in": "query",
            "name": "fixedAssetNo",
            "description": "Retrieve a specific record by internal fixed asset. Ignores other search options if provided."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 50,
              "example": "aasd9lkj-jklajsd"
            },
            "in": "query",
            "name": "externalFixedAssetNo",
            "description": "Retrieve a specific record by external fixed asset. Ignores other search options if provided."
          },
          {
            "schema": {
              "type": "string",
              "example": "ISBRW",
              "maxLength": 10
            },
            "in": "query",
            "name": "origin",
            "description": "Get all the entities of a certain origin"
          }
        ]
      }
    },
    "/api/v3/base/orders": {
      "get": {
        "summary": "Searches for base orders",
        "tags": [
          "base"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/orderDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "operationId": "getBaseOrders",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "maxLength": 50
            },
            "in": "header",
            "name": "X-Requesting-System",
            "description": "Identifying the system calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Requesting-User",
            "description": "Identifying the user calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Flow-ID",
            "description": "Optional technical Id (GUID) for call identification."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Optional Searches string for looking up a record within name and searchterm fields.",
            "name": "searchString"
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 2147483647
            },
            "in": "query",
            "name": "skip",
            "description": "Number of records to skip for pagination."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 2147483647
            },
            "in": "query",
            "name": "limit",
            "description": "Maximum number of records to return."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "changesSinceDatetime",
            "description": "Get all the entities which were added/edited since a specific datetime. Cannot be used together with search\\r\\nparameters (searchString, internalOrderId,\\r\\nexternalOrderId)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "changesSinceChangeId",
            "description": "Get all the entities which were added/edited since a specific OrderId. Cannot be used together with search\\r\\nparameters (searchString, internalOrderId,\\r\\nexternalOrderId)."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "maximum": 9999999999
            },
            "in": "query",
            "name": "internalOrderId",
            "description": "Retrieve a specific record by internal order Id. Ignores other search options if provided."
          },
          {
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1,
              "maximum": 9999999999
            },
            "in": "query",
            "name": "externalOrderId",
            "description": "Retrieve a specific record by external order Id. Ignores other search options if provided."
          },
          {
            "schema": {
              "type": "string",
              "example": "V",
              "maxLength": 1
            },
            "in": "query",
            "name": "orderType",
            "description": "Get all the entities of a certain order type (M: Material P: Production V: Sales E: Purchase A: Other)"
          },
          {
            "schema": {
              "type": "string",
              "example": "ISBRW",
              "maxLength": 10
            },
            "in": "query",
            "name": "origin",
            "description": "Get all the entities of a certain origin"
          }
        ],
        "description": "Returns all matching orders"
      },
      "put": {
        "summary": "Updates an existing base order if internal or external Id match.\nCreates a base order if neither internal or external Id is provided or no matching record could be found",
        "operationId": "putBaseOrders",
        "tags": [
          "base"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/orderDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/maintenanceWindow"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Requesting-System",
            "description": "Identifying the system calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Requesting-User",
            "description": "Identifying the user calling the service.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "X-Flow-ID",
            "description": "Optional technical Id (GUID) for call identification."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 30
            },
            "in": "header",
            "name": "X-Client-Type",
            "description": "Optional client type calling the service."
          }
        ],
        "description": "Updates an existing order if internal or external Id match.\nCreates an order if neither internal or external Id is provided or no matching record could be found."
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "fixedAssetDto": {
        "type": "object",
        "title": "fixedAsset",
        "x-examples": {
          "example-1": {
            "changeID": 8971239429,
            "changeDate": "2020-07-22 09:45:00",
            "origin": "B_HTR",
            "originId": "319",
            "active": true,
            "modifyUser": "STJ",
            "modifyDate": "2021-08-31",
            "fixedAssetNo": 123456789,
            "externalFixedAssetNo": "aasd9lkj-jklajsd",
            "companyNo": 20,
            "description": "Kran, 100t",
            "costCenterNo": "C-222",
            "attributeValueSet": {
              "required": [
                {}
              ],
              "type": "string",
              "properties": {
                "attributeSetId": {
                  "maximum": 0,
                  "minimum": 0,
                  "type": "string",
                  "description": "string",
                  "format": "string"
                },
                "attributSetDescription": {
                  "maxLength": 0,
                  "type": "string",
                  "description": "string"
                },
                "attributeValues": {
                  "required": [
                    {}
                  ],
                  "type": "string",
                  "properties": {
                    "attributeDefinitionId": {
                      "type": "string",
                      "description": "string",
                      "format": "string"
                    },
                    "attributeDefinitionDescription": {
                      "maxLength": 0,
                      "type": "string",
                      "description": "string",
                      "nullable": true
                    },
                    "stringValue": {
                      "maxLength": 0,
                      "type": "string",
                      "description": "string",
                      "nullable": true
                    },
                    "numberValue": {
                      "type": "string",
                      "description": "string",
                      "format": "string",
                      "nullable": true
                    },
                    "dateValue": {
                      "type": "string",
                      "description": "string",
                      "format": "string",
                      "nullable": true
                    },
                    "boolValue": {
                      "type": "string",
                      "description": "string",
                      "nullable": true
                    },
                    "codeValues": {
                      "required": [
                        {}
                      ],
                      "type": "string",
                      "properties": {
                        "companyNo": {
                          "maximum": 0,
                          "minimum": 0,
                          "type": "string",
                          "description": "string",
                          "format": "string"
                        },
                        "code": {
                          "maximum": 0,
                          "minimum": 0,
                          "type": "string",
                          "description": "string",
                          "format": "string"
                        },
                        "text": {
                          "maxLength": 0,
                          "type": "string",
                          "description": "string"
                        },
                        "shorttext": {
                          "maxLength": 0,
                          "type": "string",
                          "description": "string",
                          "nullable": true
                        }
                      },
                      "additionalProperties": true,
                      "description": "string"
                    }
                  },
                  "additionalProperties": true,
                  "description": "string"
                }
              },
              "additionalProperties": true,
              "description": "string",
              "x-examples": {
                "example-1": {
                  "attributeSetId": 0,
                  "attributSetDescription": "string",
                  "attributeValues": [
                    {
                      "attributeDefinitionId": 0,
                      "attributeDefinitionDescription": "string",
                      "stringValue": "string",
                      "numberValue": 0,
                      "dateValue": "string",
                      "boolValue": true,
                      "codeValues": [
                        {
                          "companyNo": 0,
                          "code": 0,
                          "text": "string",
                          "shorttext": "string"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "properties": {
          "changeID": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9999999999,
            "description": "Change id of the entity.",
            "example": 8971239429
          },
          "changeDate": {
            "type": "string",
            "format": "date-time",
            "description": "Change date of the entity.",
            "example": "2020-07-22 09:45:00"
          },
          "origin": {
            "type": "string",
            "maxLength": 10,
            "description": "The system of origin the order",
            "example": "B_HTR"
          },
          "originId": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 9999999999,
            "description": " Id of the system of origin the order",
            "example": 319
          },
          "active": {
            "type": "boolean",
            "description": "Entry is active"
          },
          "modifyUser": {
            "type": "string",
            "maxLength": 30,
            "description": "Name of user who changed relevant information of the record",
            "example": "STJ"
          },
          "modifyDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date someone changed relevant information of the record",
            "example": "2021-08-31 10:23:10"
          },
          "fixedAssetNo": {
            "type": "string",
            "maxLength": 16,
            "description": "The fixed asset number uniquely identifies a fixed asset in performis. To identify a fixed asset, either the performis fixed asset no (fixedAssetNo) or the Id of the external system (externalFixedAssetNo) is required.",
            "example": "123456789"
          },
          "externalFixedAssetNo": {
            "type": "string",
            "maxLength": 50,
            "description": "Third-party fixed asset number - This Id must be unique within the origin (Origin field). As Id it is recommended to use either the Primary Key of the foreign system or a GUID (Global Unique Identifier). Attention, if External Ids are used, no performis Ids may be used in parallel, additionally the Origin field is mandatory. E.g. Id \"629c5d97-a225-4b08-877c-e8a802c23014\" for origin \"SAP\". To identify the fixed asset, either the performis fixed asset no (fixedAssetNo) or the Id of the external system (externalFixedAssetNo) is required.",
            "example": "aasd9lkj-jklajsd"
          },
          "companyNo": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 999999,
            "description": "The CompanyNo identifies the customer via the corresponding number in the mandate system",
            "example": 20
          },
          "description": {
            "type": "string",
            "maxLength": 100,
            "description": "Full decription / Name of the service provider",
            "example": "Kran, 100t"
          },
          "costCenterNo": {
            "type": "string",
            "maxLength": 6,
            "description": "Cost center identifier",
            "example": "C-222"
          },
          "attributeValueSet": {
            "$ref": "#/components/schemas/attributeValueSetDto"
          }
        },
        "required": [
          "changeID",
          "changeDate",
          "origin",
          "modifyUser",
          "modifyDate",
          "fixedAssetNo",
          "externalFixedAssetNo",
          "companyNo",
          "description"
        ]
      },
      "orderDto": {
        "title": "Order",
        "type": "object",
        "description": "By passing the appropriate option the service get",
        "properties": {
          "internalOrderId": {
            "type": "integer",
            "format": "int64",
            "description": "The order Id uniquely identifies an order in performis. To identify an order, either the performis order Id (OrderId) or the Id of the external system (ExternalOrderId) is required.",
            "example": 123456789,
            "minimum": 0,
            "maximum": 9999999999
          },
          "externalOrderId": {
            "type": "string",
            "maxLength": 50,
            "description": "Third-party order Id - This Id must be unique within the origin (Origin field). As Id it is recommended to use either the Primary Key of the foreign system or a GUID (Global Unique Identifier). Attention, if External Ids are used, no performis Ids may be used in parallel, additionally the Origin field is mandatory. E.g. Id \"629c5d97-a225-4b08-877c-e8a802c23014\" for origin \"SAP\". To identify the business partner, either the performis order (OrderId) or the Id of the external system (ExternalOrderId) is required.",
            "example": "629c5d97-a225-4b08-877c-e8a802c23014"
          },
          "orderNo": {
            "type": "string",
            "maxLength": 20,
            "description": "The OrderNo identifies the order to be booked in accounting. This is the actual order no of the order",
            "example": "V005126.10"
          },
          "companyNo": {
            "type": "integer",
            "format": "int64",
            "example": 27,
            "description": "The CompanyNo identifies the customer via the corresponding number in the mandate system",
            "minimum": 0,
            "maximum": 999999
          },
          "description": {
            "type": "string",
            "maxLength": 100,
            "description": "The Description is a short description / title of the order",
            "example": "Transportauftrag 1151"
          },
          "internalBpAddrId": {
            "type": "integer",
            "format": "int64",
            "example": 2000070,
            "description": "The BpAddrId references the business partner addess within performis",
            "minimum": 0,
            "maximum": 9999999999
          },
          "externalBpAddrId": {
            "type": "string",
            "description": "The ExternalBpAddrId references the business partner addess within the customer system",
            "example": "321687.01"
          },
          "responsiblePerson": {
            "type": "string",
            "maxLength": 30,
            "example": "John Doe",
            "description": "The person responsable for the order"
          },
          "orderType": {
            "type": "string",
            "maxLength": 1,
            "description": "The OrderType identifies the type of the order\nM: Material\nP: Production\nV: Sales\nE: Purchase\nA: Other",
            "example": "V"
          },
          "origin": {
            "type": "string",
            "maxLength": 10,
            "example": "ISBRW",
            "description": "The system of origin the order"
          },
          "costCenterNo": {
            "type": "string",
            "maxLength": 6,
            "example": "200",
            "description": "Cost center of the order"
          },
          "costUnitNo": {
            "type": "string",
            "maxLength": 20,
            "example": "13",
            "description": "Cost unit of the order"
          },
          "salesChannelNo": {
            "type": "string",
            "maxLength": 3,
            "description": "Identifies the sale channel",
            "example": "ABC"
          },
          "orderStatus": {
            "type": "integer",
            "format": "int64",
            "example": 1040500,
            "description": "Code that indentfies the current state of the order\n1040100: Recorded\n1040150: In delivery\n1040170: Partially delivered\n1040480: Delivered\n1040490: Ready for invoicing\n1040500: Completed/invoiced\n1040600: Deleted",
            "minimum": 0,
            "maximum": 9999999
          },
          "attributeValueSet": {
            "$ref": "#/components/schemas/attributeValueSetDto"
          },
          "caccOrder": {
            "type": "boolean",
            "description": "Is it an accounting order?"
          },
          "chargingType": {
            "type": "string",
            "maxLength": 2,
            "description": "Defines whether the order is reallocated\nKT: cost unit\nKS: cost centre\nAU: order",
            "example": "KT"
          },
          "budgetCharging": {
            "type": "boolean",
            "description": "Shows whether the order is relevant to the budget"
          },
          "orderDate": {
            "type": "string",
            "format": "date",
            "example": "2023-01-05",
            "description": "Date the order was placed"
          },
          "currency": {
            "type": "string",
            "example": "CHF",
            "maxLength": 3,
            "description": "Currency as ISO code"
          },
          "documentId": {
            "type": "integer",
            "format": "int64",
            "example": 1234567890,
            "description": "Id that identifies the stored \"physical\" document",
            "minimum": 0,
            "maximum": 9999999999
          },
          "documentGUID": {
            "type": "string",
            "format": "uuid",
            "description": "GUID that identifies the stored \"physical\" document",
            "example": "FDBF257B-2EA6-4734-BF66-ECA38E1C9A0E"
          },
          "manualPost": {
            "type": "boolean",
            "description": "Shows whether the order can be booked in accounting? "
          }
        },
        "required": [
          "orderNo",
          "companyNo",
          "description",
          "orderType",
          "origin",
          "orderStatus"
        ],
        "x-examples": {
          "example-1": {
            "internalOrderId": 123456789,
            "externalOrderId": "629c5d97-a225-4b08-877c-e8a802c23014",
            "orderNo": "V005126.10",
            "companyNo": 27,
            "description": "Transportauftrag 1151",
            "internalBpAddrId": 2000070,
            "externalBpAddrId": "321687.01",
            "responsiblePerson": "John Doe",
            "orderType": "V",
            "origin": "ISBRW",
            "costCenterNo": "200",
            "costUnitNo": "13",
            "salesChannelNo": "ABC",
            "orderStatus": 1040500,
            "attributeValueSet": {
              "required": [
                {}
              ],
              "type": "string",
              "properties": {
                "attributeSetId": {
                  "maximum": 0,
                  "minimum": 0,
                  "type": "string",
                  "description": "string",
                  "format": "string"
                },
                "attributSetDescription": {
                  "maxLength": 0,
                  "type": "string",
                  "description": "string"
                },
                "attributeValues": {
                  "required": [
                    {}
                  ],
                  "type": "string",
                  "properties": {
                    "attributeDefinitionId": {
                      "type": "string",
                      "description": "string",
                      "format": "string"
                    },
                    "attributeDefinitionDescription": {
                      "maxLength": 0,
                      "type": "string",
                      "description": "string"
                    },
                    "stringValue": {
                      "maxLength": 0,
                      "type": "string",
                      "description": "string"
                    },
                    "numberValue": {
                      "type": "string",
                      "description": "string",
                      "format": "string"
                    },
                    "dateValue": {
                      "type": "string",
                      "description": "string",
                      "format": "string"
                    },
                    "boolValue": {
                      "type": "string",
                      "description": "string"
                    },
                    "codeValues": {
                      "required": [
                        {}
                      ],
                      "type": "string",
                      "properties": {
                        "companyNo": {
                          "maximum": 0,
                          "minimum": 0,
                          "type": "string",
                          "description": "string",
                          "format": "string"
                        },
                        "code": {
                          "maximum": 0,
                          "minimum": 0,
                          "type": "string",
                          "description": "string",
                          "format": "string"
                        },
                        "text": {
                          "maxLength": 0,
                          "type": "string",
                          "description": "string"
                        },
                        "shorttext": {
                          "maxLength": 0,
                          "type": "string",
                          "description": "string"
                        }
                      },
                      "additionalProperties": true,
                      "description": "string"
                    }
                  },
                  "additionalProperties": true,
                  "description": "string"
                }
              },
              "additionalProperties": true,
              "description": "string",
              "x-examples": {
                "example-1": {
                  "attributeSetId": 0,
                  "attributSetDescription": "string",
                  "attributeValues": [
                    {
                      "attributeDefinitionId": 0,
                      "attributeDefinitionDescription": "string",
                      "stringValue": "string",
                      "numberValue": 0,
                      "dateValue": "string",
                      "boolValue": true,
                      "codeValues": [
                        {
                          "companyNo": 0,
                          "code": 0,
                          "text": "string",
                          "shorttext": "string"
                        }
                      ]
                    }
                  ]
                }
              }
            },
            "caccOrder": true,
            "chargingType": "KT",
            "budgetCharging": true,
            "orderDate": "2023-01-05",
            "currency": "CHF",
            "documentId": 1234567890,
            "documentGUID": "FDBF257B-2EA6-4734-BF66-ECA38E1C9A0E",
            "manualPost": true
          }
        }
      },
      "codeValueDto": {
        "description": "",
        "type": "object",
        "x-examples": {
          "example-1": {
            "required": [
              "code",
              "companyNo",
              "text"
            ],
            "type": "object",
            "properties": {
              "companyNo": {
                "maximum": 999999,
                "minimum": 0,
                "type": "integer",
                "description": "Company no for which the codevalue is available. 0 = all companies",
                "format": "int32"
              },
              "code": {
                "maximum": 99999999,
                "minimum": 0,
                "type": "integer",
                "description": "Id of code",
                "format": "int32"
              },
              "text": {
                "maxLength": 100,
                "type": "string",
                "description": "Description or title of the codevalue"
              },
              "shorttext": {
                "maxLength": 12,
                "type": "string",
                "description": "Short-description or title of the codevalue",
                "nullable": true
              }
            },
            "additionalProperties": false,
            "description": ""
          }
        },
        "properties": {
          "required": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "type": {
            "type": "string",
            "minLength": 1
          },
          "properties": {
            "type": "object",
            "required": [
              "companyNo",
              "code",
              "text"
            ],
            "properties": {
              "companyNo": {
                "type": "object",
                "required": [
                  "maximum",
                  "minimum",
                  "type",
                  "description",
                  "format"
                ],
                "properties": {
                  "maximum": {
                    "type": "number"
                  },
                  "minimum": {
                    "type": "number"
                  },
                  "type": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1
                  },
                  "format": {
                    "type": "string",
                    "minLength": 1
                  }
                }
              },
              "code": {
                "type": "object",
                "required": [
                  "maximum",
                  "minimum",
                  "type",
                  "description",
                  "format"
                ],
                "properties": {
                  "maximum": {
                    "type": "number"
                  },
                  "minimum": {
                    "type": "number"
                  },
                  "type": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1
                  },
                  "format": {
                    "type": "string",
                    "minLength": 1
                  }
                }
              },
              "text": {
                "type": "object",
                "required": [
                  "maxLength",
                  "type",
                  "description"
                ],
                "properties": {
                  "maxLength": {
                    "type": "number"
                  },
                  "type": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1
                  }
                }
              },
              "shorttext": {
                "type": "object",
                "required": [
                  "maxLength",
                  "type",
                  "description",
                  "nullable"
                ],
                "properties": {
                  "maxLength": {
                    "type": "number"
                  },
                  "type": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1
                  },
                  "nullable": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "additionalProperties": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "required",
          "type",
          "properties"
        ],
        "title": ""
      },
      "attributeValueDto": {
        "description": "",
        "type": "object",
        "x-examples": {
          "example-1": {
            "required": [
              "attributeDefinitionId"
            ],
            "type": "object",
            "properties": {
              "attributeDefinitionId": {
                "type": "integer",
                "description": "Id of attribute definition",
                "format": "int64"
              },
              "attributeDefinitionDescription": {
                "maxLength": 80,
                "type": "string",
                "description": "Description of the attribute definition",
                "nullable": true
              },
              "stringValue": {
                "maxLength": 1000,
                "type": "string",
                "description": "a string value",
                "nullable": true
              },
              "numberValue": {
                "type": "number",
                "description": "Number or decimal value",
                "format": "double",
                "nullable": true
              },
              "dateValue": {
                "type": "string",
                "description": "Date value",
                "format": "date-time",
                "nullable": true
              },
              "boolValue": {
                "type": "boolean",
                "description": "a true or false value",
                "nullable": true
              },
              "codeValues": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/codeValueDto"
                },
                "description": "Gets or Sets CodeValue",
                "nullable": true
              }
            },
            "additionalProperties": false,
            "description": ""
          }
        },
        "properties": {
          "required": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "type": {
            "type": "string",
            "minLength": 1
          },
          "properties": {
            "type": "object",
            "required": [
              "attributeDefinitionId",
              "attributeDefinitionDescription",
              "stringValue",
              "numberValue",
              "dateValue",
              "boolValue",
              "codeValues"
            ],
            "properties": {
              "attributeDefinitionId": {
                "type": "object",
                "required": [
                  "type",
                  "description",
                  "format"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1
                  },
                  "format": {
                    "type": "string",
                    "minLength": 1
                  }
                }
              },
              "attributeDefinitionDescription": {
                "type": "object",
                "required": [
                  "maxLength",
                  "type",
                  "description",
                  "nullable"
                ],
                "properties": {
                  "maxLength": {
                    "type": "number"
                  },
                  "type": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1
                  },
                  "nullable": {
                    "type": "boolean"
                  }
                }
              },
              "stringValue": {
                "type": "object",
                "required": [
                  "maxLength",
                  "type",
                  "description",
                  "nullable"
                ],
                "properties": {
                  "maxLength": {
                    "type": "number"
                  },
                  "type": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1
                  },
                  "nullable": {
                    "type": "boolean"
                  }
                }
              },
              "numberValue": {
                "type": "object",
                "required": [
                  "type",
                  "description",
                  "format",
                  "nullable"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1
                  },
                  "format": {
                    "type": "string",
                    "minLength": 1
                  },
                  "nullable": {
                    "type": "boolean"
                  }
                }
              },
              "dateValue": {
                "type": "object",
                "required": [
                  "type",
                  "description",
                  "format",
                  "nullable"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1
                  },
                  "format": {
                    "type": "string",
                    "minLength": 1
                  },
                  "nullable": {
                    "type": "boolean"
                  }
                }
              },
              "boolValue": {
                "type": "object",
                "required": [
                  "type",
                  "description",
                  "nullable"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1
                  },
                  "nullable": {
                    "type": "boolean"
                  }
                }
              },
              "codeValues": {
                "$ref": "#/components/schemas/codeValueDto"
              }
            }
          },
          "additionalProperties": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "required",
          "type",
          "properties",
          "additionalProperties",
          "description"
        ]
      },
      "attributeValueSetDto": {
        "description": "",
        "type": "object",
        "x-examples": {
          "example-1": {
            "required": [
              "attributeSetId",
              "attributSetDescription"
            ],
            "type": "object",
            "properties": {
              "attributeSetId": {
                "maximum": 2147483647,
                "minimum": 1,
                "type": "integer",
                "description": "performis internal of attribute set Id",
                "format": "int64"
              },
              "attributSetDescription": {
                "maxLength": 80,
                "type": "string",
                "description": "Description / Title of the attribute set"
              },
              "attributeValues": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/attributeValueDto"
                },
                "description": "Gets or Sets AttributeValues",
                "nullable": true
              }
            },
            "additionalProperties": false,
            "description": "",
            "x-examples": {
              "example-1": {
                "attributeSetId": 1,
                "attributSetDescription": "string",
                "attributeValues": [
                  {
                    "attributeDefinitionId": 0,
                    "attributeDefinitionDescription": "string",
                    "stringValue": "string",
                    "numberValue": 0,
                    "dateValue": "2019-08-24T14:15:22Z",
                    "boolValue": true,
                    "codeValues": [
                      {
                        "companyNo": 0,
                        "code": 0,
                        "text": "string",
                        "shorttext": "string"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "properties": {
          "required": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "type": {
            "type": "string",
            "minLength": 1
          },
          "properties": {
            "type": "object",
            "required": [
              "attributeSetId",
              "attributSetDescription",
              "attributeValues"
            ],
            "properties": {
              "attributeSetId": {
                "type": "object",
                "required": [
                  "maximum",
                  "minimum",
                  "type",
                  "description",
                  "format"
                ],
                "properties": {
                  "maximum": {
                    "type": "number"
                  },
                  "minimum": {
                    "type": "number"
                  },
                  "type": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1
                  },
                  "format": {
                    "type": "string",
                    "minLength": 1
                  }
                }
              },
              "attributSetDescription": {
                "type": "object",
                "required": [
                  "maxLength",
                  "type",
                  "description"
                ],
                "properties": {
                  "maxLength": {
                    "type": "number"
                  },
                  "type": {
                    "type": "string",
                    "minLength": 1
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1
                  }
                }
              },
              "attributeValues": {
                "$ref": "#/components/schemas/attributeValueDto"
              }
            }
          },
          "additionalProperties": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "x-examples": {
            "type": "object",
            "required": [
              "example-1"
            ],
            "properties": {
              "example-1": {
                "type": "object",
                "required": [
                  "attributeSetId",
                  "attributSetDescription",
                  "attributeValues"
                ],
                "properties": {
                  "attributeSetId": {
                    "type": "number"
                  },
                  "attributSetDescription": {
                    "type": "string",
                    "minLength": 1
                  },
                  "attributeValues": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "attributeDefinitionId": {
                          "type": "number"
                        },
                        "attributeDefinitionDescription": {
                          "type": "string",
                          "minLength": 1
                        },
                        "stringValue": {
                          "type": "string",
                          "minLength": 1
                        },
                        "numberValue": {
                          "type": "number"
                        },
                        "dateValue": {
                          "type": "string",
                          "minLength": 1
                        },
                        "boolValue": {
                          "type": "boolean"
                        },
                        "codeValues": {
                          "type": "array",
                          "uniqueItems": true,
                          "minItems": 1,
                          "items": {
                            "type": "object",
                            "properties": {
                              "companyNo": {
                                "type": "number"
                              },
                              "code": {
                                "type": "number"
                              },
                              "text": {
                                "type": "string",
                                "minLength": 1
                              },
                              "shorttext": {
                                "type": "string",
                                "minLength": 1
                              }
                            },
                            "required": [
                              "companyNo",
                              "code",
                              "text",
                              "shorttext"
                            ]
                          }
                        }
                      },
                      "required": [
                        "attributeDefinitionId",
                        "attributeDefinitionDescription",
                        "stringValue",
                        "numberValue",
                        "dateValue",
                        "boolValue"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "required",
          "type",
          "properties",
          "additionalProperties",
          "description",
          "x-examples"
        ]
      },
      "problemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {},
        "title": "problemDetails",
        "description": "",
        "x-examples": {
          "example1": {
            "type": "Warning",
            "title": "Sample Title",
            "status": -99,
            "detail": "This is a generic message to provide a sample return of how a message may be returned.",
            "instance": "TEST",
            "property1": null,
            "property2": null
          }
        }
      },
      "maintenanceWindow": {
        "type": "object",
        "additionalProperties": false,
        "title": "MaintenanceWindow",
        "description": "information structure for active maintenance windows",
        "x-examples": {
          "example-1": {
            "id": 3511,
            "active": true,
            "fromDateTime": "2019-08-24T14:15:22Z",
            "toDateTime": "2019-08-24T14:15:22Z",
            "info": "monthly maintenance for patch installation",
            "clientStartAllowed": false
          }
        },
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 3511,
            "nullable": true,
            "readOnly": true
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "usually the API will respond with this structure, when the maintenance window is active and the window has started."
          },
          "fromDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "start of scheduled maintenance window"
          },
          "toDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "end of scheduled maintenance window"
          },
          "info": {
            "type": "string",
            "example": "monthly maintenance for patch installation",
            "nullable": true
          },
          "clientStartAllowed": {
            "type": "boolean",
            "default": false,
            "description": "defines wether or not clients may continue to work while the maintenance window applies."
          }
        }
      }
    }
  }
}