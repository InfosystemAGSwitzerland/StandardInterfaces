{
  "openapi": "3.0.1",
  "info": {
    "title": "if2baf api",
    "description": "if2baf api",
    "contact": {
      "name": "Infosystem AG",
      "email": "info@infosystem.ch"
    },
    "version": "v1"
  },
  "paths": {
    "/api/v1/health-check/version": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "operationId": "GetWebApiVersion",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health-check/name": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "operationId": "GetWebApiName",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health-check/database-global-name": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "operationId": "GetWebApiDatabaseGlobalName",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health-check/machine-name": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "operationId": "GetWebApiMachineName",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health-check/directory": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "operationId": "GetWebApiDirectory",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health-check/appsettings-check": {
      "get": {
        "tags": [
          "HealthCheck"
        ],
        "operationId": "GetAppsettingsKeyAvailable",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "setting-key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/master-data/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Searches for base orders.",
        "description": "Returns all matching orders.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical Id (GUID) for call identification.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "searchString",
            "in": "query",
            "description": "Optional search string for looking up a record within name and search term fields.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "changesSinceDateTime",
            "in": "query",
            "description": "Get all the entities which were added/edited after a specific datetime.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "changesSinceChangeId",
            "in": "query",
            "description": "Get all the entities which were added/edited after the provided change id.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Retrieve a specific record by internal order id.",
            "schema": {
              "maximum": 9999999999,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "externalOrderId",
            "in": "query",
            "description": "Retrieve a specific record by external order id.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "orderType",
            "in": "query",
            "description": "Get all the entities of a certain order type. (M: Material P: Production V: Sales E: Purchase A: Other)",
            "schema": {
              "maxLength": 1,
              "type": "string"
            }
          },
          {
            "name": "origin",
            "in": "query",
            "description": "Get all the entities of a certain origin.",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of records to skip for pagination.",
            "schema": {
              "maximum": 100000,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of records to return.",
            "schema": {
              "maximum": 1000,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance"
          }
        }
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Updates an existing base order if either internal or external id match. Creates a base order if neither internal nor external id is provided or no matching record could be found.",
        "description": "Updates an existing order if either internal or external id match. Creates an order if neither internal nor external id is provided or no matching record could be found.",
        "parameters": [
          {
            "name": "X-Requesting-System",
            "in": "header",
            "description": "Identifying the system calling the service.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Requesting-User",
            "in": "header",
            "description": "Identifying the user calling the service.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Flow-ID",
            "in": "header",
            "description": "Optional technical id (GUID) for call identification.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Client-Type",
            "in": "header",
            "description": "Optional client type calling the service.",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The order to update or create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input, object invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Basic Authentication failed"
          },
          "403": {
            "description": "Requestor has insufficient rights"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "503": {
            "description": "Service unavailable due to maintenance"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AttributeValue": {
        "required": [
          "attributeDefinitionId"
        ],
        "type": "object",
        "properties": {
          "attributeValueId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Internal identification of attribute value.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "attributeDefinitionId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Internal identification of attribute definition.",
            "format": "int64"
          },
          "modifyUser": {
            "maxLength": 30,
            "type": "string",
            "description": "User who last modified the entry.",
            "nullable": true,
            "readOnly": true
          },
          "modifyDate": {
            "type": "string",
            "description": "Date the entry was last modified.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "sortNo": {
            "maximum": 9999,
            "minimum": 1,
            "type": "integer",
            "description": "Position within the attribute value set.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "companyNo": {
            "maximum": 999999,
            "minimum": 1,
            "type": "integer",
            "description": "Company identification of the entry.",
            "format": "int64",
            "nullable": true
          },
          "textValue": {
            "maxLength": 1000,
            "type": "string",
            "description": "A string value.\r\nWhether Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.TextValue, Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.NumberValue, Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.DateValue, Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.BoolValue or Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.CodeValue actually has a value depends on the definition of the attribute.",
            "nullable": true
          },
          "numberValue": {
            "type": "number",
            "description": "Number or decimal value.\r\nWhether Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.TextValue, Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.NumberValue, Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.DateValue, Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.BoolValue or Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.CodeValue actually has a value depends on the definition of the attribute.",
            "format": "double",
            "nullable": true
          },
          "dateValue": {
            "type": "string",
            "description": "Date value.\r\nWhether Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.TextValue, Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.NumberValue, Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.DateValue, Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.BoolValue or Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.CodeValue actually has a value depends on the definition of the attribute.",
            "format": "date-time",
            "nullable": true
          },
          "boolValue": {
            "type": "boolean",
            "description": "A true or false value.\r\nWhether Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.TextValue, Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.NumberValue, Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.DateValue, Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.BoolValue or Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.CodeValue actually has a value depends on the definition of the attribute.",
            "nullable": true
          },
          "codeValue": {
            "type": "integer",
            "description": "Code value.\r\nWhether Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.TextValue, Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.NumberValue, Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.DateValue, Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.BoolValue or Infosystem.Baf.IF2Baf.WebApi.Dtos.AttributeValue.CodeValue actually has a value depends on the definition of the attribute.",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The DTO for an attribute value."
      },
      "AttributeValueSet": {
        "required": [
          "attributeSetId"
        ],
        "type": "object",
        "properties": {
          "attributeSetId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Internal identification of attribute set.",
            "format": "int64"
          },
          "modifyUser": {
            "maxLength": 30,
            "type": "string",
            "description": "User who last modified the entry.",
            "nullable": true,
            "readOnly": true
          },
          "modifyDate": {
            "type": "string",
            "description": "Date the entry was last modified.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "attributeValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeValue"
            },
            "description": "A list of attribute values.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The DTO for an attribute value set."
      },
      "Order": {
        "required": [
          "budgetCharging",
          "companyNo",
          "description",
          "isCostAccountingOrder",
          "isManualPostable",
          "orderNo",
          "orderStatus",
          "orderType"
        ],
        "type": "object",
        "properties": {
          "changeId": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "integer",
            "description": "Change identification of the entry.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "changeDate": {
            "type": "string",
            "description": "Change date of the entry.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "orderId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Technical identification of the entry.",
            "format": "int64",
            "nullable": true
          },
          "origin": {
            "maxLength": 200,
            "type": "string",
            "description": "The system of the origin of the order.",
            "nullable": true,
            "readOnly": true
          },
          "externalOrderId": {
            "maxLength": 200,
            "type": "string",
            "description": "Third-party order id - This id must be unique within the origin (origin field).\r\nAs id it is recommended to use either the primary key of the foreign system or a GUID (Global Unique Identifier).",
            "nullable": true
          },
          "orderNo": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "Identifies the order to be booked in accounting. This is the actual order number of the order."
          },
          "companyNo": {
            "maximum": 999999,
            "minimum": 0,
            "type": "integer",
            "description": "Company identification of the entry.",
            "format": "int64"
          },
          "description": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "The description is a short description / title of the order."
          },
          "orderType": {
            "maxLength": 1,
            "minLength": 1,
            "type": "string",
            "description": "Identifies the type of the order."
          },
          "orderStatus": {
            "maximum": 1049999,
            "minimum": 1040001,
            "type": "integer",
            "description": "Code that identifies the current status of the order.",
            "format": "int64"
          },
          "businessPartnerAddressId": {
            "maximum": 9999999999,
            "minimum": 0,
            "type": "integer",
            "description": "Reference to the business partner address within performis.",
            "format": "int64",
            "nullable": true
          },
          "responsiblePerson": {
            "maxLength": 30,
            "type": "string",
            "description": "Name or designation of the person responsible.",
            "nullable": true
          },
          "costCenterNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Cost center number of the order.",
            "nullable": true
          },
          "costUnitNo": {
            "maxLength": 20,
            "type": "string",
            "description": "Cost unit number of the order.",
            "nullable": true
          },
          "salesChannelNo": {
            "maxLength": 3,
            "type": "string",
            "description": "Identifies the sale channel.",
            "nullable": true
          },
          "isCostAccountingOrder": {
            "type": "boolean",
            "description": "Is it a cost accounting order?"
          },
          "chargingType": {
            "maxLength": 2,
            "type": "string",
            "description": "Defines whether the order is reallocated. KT: cost unit KS: cost centre AU: order",
            "nullable": true
          },
          "budgetCharging": {
            "type": "boolean",
            "description": "Shows whether the order is relevant to the budget."
          },
          "orderDate": {
            "type": "string",
            "description": "Date the order was placed.",
            "format": "date",
            "nullable": true
          },
          "currency": {
            "maxLength": 3,
            "type": "string",
            "description": "Currency as ISO code.",
            "nullable": true
          },
          "isManualPostable": {
            "type": "boolean",
            "description": "Shows whether the order can be booked in accounting?"
          },
          "attributeValueSet": {
            "$ref": "#/components/schemas/AttributeValueSet"
          }
        },
        "additionalProperties": false,
        "description": "The DTO for an order."
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Please enter a valid token",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}